*                                                                          1
*                                                                          2
*+--------------------------------------------------------------------+    3
*¦       (C)   COPYRIGHT MD-PALADIN INC. 1992                         ¦    4
*+--------------------------------------------------------------------+    5
*¦  FUNCTION:                                                         ¦    6
*¦    GENERALIZED RECOVERY ROUTINE.  CAN BE USED AS AN ESTAE(X) RTN,  ¦    7
*¦    FRR OR ARR.                                                     ¦    8
*¦  INPUTS:                                                           ¦    9
*¦    R1 - SDWA ADDRESS                                               ¦   10
*¦         ADDRESS OF USER PARMLIST ADDRESS IS IN FIELD SDWAPARM.     ¦   11
*¦         THE USER PARMLIST IS MAPPED BY THE ESTPARM MACRO.          ¦   12
*¦  OUTPUTS:                                                          ¦   13
*¦    VARIOUS WTOS.                                                   ¦   14
*¦    SDWA RETURNED TO RTM WITH RETRY ADDRESS IF RETRY IS DESIRED     ¦   15
*¦  LOGIC:                                                            ¦   16
*¦    1) THE EXPANSION OF MODULE ENTRY=ESTAEX MACRO TESTS WHETHER     ¦   17
*¦       RTM HAS SUPPLIED AN SDWA.  IF SDWA IS ABSENT, PERCOLATE.     ¦   18
*¦    2) ADDRESS THE SDWA EXTENSION AND USER PARMLIST. IF THERE IS    ¦   19
*¦       NO USER PARMLIST, PERCOLATE THE ABEND.                       ¦   20
*¦    3) TEST WHETHER THIS IS A RECURSIVE ENTRY. FOR AN ESTAE, RTM2   ¦   21
*¦       KEEPS TRACK OF RECURSION.  OTHERWISE, TEST USER FLAG.        ¦   22
*¦    4) ISSUE WTOS WITH INFORMATION FROM USER PARMLIST AND/OR SDWA.  ¦   23
*¦    5) IF USER HAS SUPPLIED THE ADDRESS OF AN ADDITIONAL ROUTINE,   ¦   24
*¦       INVOKE THE ROUTINE.  THE ROUTINE WILL RECEIVE CONTROL IN     ¦   25
*¦       PRIMARY ASC MODE AND WITH THE SDWA ADDRESS IN R1.  IF THE    ¦   26
*¦       ROUTINE RETURNS 0 IN R15, GRECOV WILL ATTEMPT RETRY.  ANY    ¦   27
*¦       OTHER VALUE WILL CAUSE GRETRY TO PERCOLATE THE ABEND.        ¦   28
*¦    6) IF THERE IS A RETRY ADDRESS IN THE PARMLIST, ISSUE SETRP     ¦   29
*¦       TO RETRY.  IF THIS IS AN ARR, BUILD A REGISTER UPDATE BLOCK  ¦   30
*¦       (RUB).  IF THERE IS NO RETRY ADDRESS, PERCOLATE THE ABEND.   ¦   31
*¦  ATTRIBUTES:                                                       ¦   32
*¦    AMODE 31, RMODE ANY, REENTRANT, ESA DEPENDENCIES                ¦   33
*+--------------------------------------------------------------------+   34
AR0      EQU   0                                                   JOER
AR1      EQU   1                                                   JOER
AR2      EQU   2                                                   JOER
AR3      EQU   3                                                   JOER
AR4      EQU   4                                                   JOER
AR5      EQU   5                                                   JOER
AR6      EQU   6                                                   JOER
AR7      EQU   7                                                   JOER
AR8      EQU   8                                                   JOER
AR9      EQU   9                                                   JOER
AR10     EQU   10                                                  JOER
AR11     EQU   11                                                  JOER
AR12     EQU   12                                                  JOER
AR13     EQU   13                                                  JOER
AR14     EQU   14                                                  JOER
AR15     EQU   15                                                  JOER
         MODULE GRECOV,BASE=12,LOC=BELOW,AMODE=31,RMODE=ANY,           X  35
               ENTRY=ESTAEX,                                           X  36
               TEXT=' GENERALIZED RECOVERY ROUTINE '                      37
         SAC   0                       SET PSW TO PRIMARY SPACE ASC       38
         SYSSTATE ASCENV=P             PRIMARY SPACE MODE MACROS          39
         MVC   WTOLIST(LWTOLIST),WTOLISTM  COPY WTO PARMLIST TO RENT      40
*        *---------------------------------------*                        41
*        *     SET ADDRESSABILITY SDWA EXTENSION *                        42
*        *---------------------------------------*                        43
         L     R8,SDWAXPAD             ADDRESS SDWA EXTENSION PTRS        44
         L     R8,SDWASRVP-SDWAPTRS(R8) ADDRESS OF RECORDABLE XTNSION     45
         USING SDWARC1,R8              ADDRESSING FOR RECORDABLE XTN      46
         ICM   R9,15,SDWAPARM          ADDRESS OF USER PARM ADDRESS       47
         ICM   R9,15,0(R9)             ADDRESS OF USER PARM               48
         USING ESTPARM,R9              MAP USER PARMLIST                  49
         BNZ   CNTINUE                 PARM EXISTS; CONTINUE              50
         MVC   WTOLINE(LNPARMSG),NPARMSG  ..OUTPUT NOPARM                 51
         BAS   R14,WTORTN                 ..MESSAGE                       52
         B     EXITPERC                YES; PERCOLATE THE ABEND           53
CNTINUE  DS    0H                                                         54
*        *---------------------------------------*                        55
*        *     TEST RECURSION                    *                        56
*        *---------------------------------------*                        57
         CLI   SDWATYPE,SDWATEST       IS THIS AN ESTAE ?                 58
         BNE   NESTTYPE                NO; DO NOT TEST SDWA FLAG          59
         TM    SDWAERRD,SDWASTAE       RECURSIVE ENTRY ?                  60
         BO    EXITPERC                YES; PERCOLATE THE ABEND           61
         B     AFTRECRS                CONTINUE                           62
NESTTYPE DS    0H                                                         63
         TM    ESTFLAG,@ESTSTAE        IS RECURSION FLAG SET              64
         BO    EXITPERC                YES; PERCOLATE THE ABEND           65
         OI    ESTFLAG,@ESTSTAE        SET RECURSION FLAGE                66
AFTRECRS DS    0H                                                  JOER   67
*                                                                  JOER
*    Determine if primary and home are different                   JOER
*                                                                  JOER
         EPAR  R0                     Get Primary address sp       JOER
         USING PSA,0                                               JOER
         L     R15,PSAAOLD            Get home address sp          JOER
         CH    R0,ASCBASID-ASCB(R15)                               JOER
         BE    SAME                                                JOER
*                                                                  JOER
*       Primary and home are different use alet 1 HOME ASID        JOER
*       to refenence rb / cde must be in supervsor start key 0     JOER
*    Determine if abend address is in program range                JOER
*                                                                  JOER
*                                                                  JOER
          MVC   WNEXT,SDWANXT1              Save abend address     JOER
          NI    WNEXT,X'7F'                 Wipe out high order    JOER
*                                                                  JOER
         MVC    XTLST#(4),=F'16'                                   JOER
          CSVQUERY INADDR=WNEXT,                                   JOERX
               SEARCH=JPALPA,                                      JOERX
               ANCESTORJPQ=YES,                                    JOERX
               OUTLENGTH=MODEND,                                   JOERX
               OUTEPNM=MODNAME,                                    JOERX
               OUTEPA=MODSTART,                                    JOERX
               OUTATTR1=ATTR1,                                     JOERX
               OUTATTR2=ATTR2,                                     JOERX
               OUTATTR3=ATTR3,                                     JOERX
               OUTXATTR1=XATTR,                                    JOERX
               OUTVALID=ATTRVAL,                                   JOERX
               OUTPDATA=PDATA,                                     JOERX
               OUTDIAG=DIAG,                                       JOERX
               OUTXTLST=XTLST#,                                    JOERX
               OUTDSKEY=DSKEY,MF=(E,CSVQLIST,COMPLETE)             JOER
          CH    R15,=H'4'           Check for valid ret code       JOER
          BH    EXITPERC                                           JOER
          L     R15,MODSTART                                       JOER
          L     R0,MODEND                                          JOER
          AR    R15,R0                                             JOER
          ST    R15,MODEND                                         JOER
          LAM   AR5,AR5,=F'2'                                      JOER
          CPYA  AR6,AR5                                            JOER
          CPYA  AR7,AR6                                            JOER
*                                                                  JOER
          SAC   512                                                JOER
SAME      DS    0H                                                 JOER
*                                                                  JOER
*         R7 --> TCB                                               JOER
*         R6 -> CDE                                                JOER
*         R5 -> RB/XLST       I                                    JOER
*                                                                  JOER
*        Check for amode 64                                        JOER
*                                                                  JOER
*                                                                  JOER
         TM    SDWANXT1,X'80'                                      JOER
         BZ    IT31                                                JOER
         TM    SDWAEC1,X'01'                                       JOER
         BZ    IT31                                                JOER
         OI    FLAG,IS64                                           JOER
IT31     DS    0H                                                  JOER
         L     R7,PSATOLD                Get CURRENT TCB           JOER
         USING TCB,R7                                              JOER
         L     R5,TCBRBP                 Get Current RB            JOER
         USING RBBASIC,R5                Address main sec          JOER
GETPRB   DS    0H                                                  JOER
         CR    R5,R7                                               JOER
         BE    PRNTSDWA                                            JOER
         TM    RBSTAB1,RBFTP                                       JOER
         BZ    ISPRB                                               JOER
NXTPRB   DS    0H                                                  JOER
         ICM   R5,B'0111',RBLINKB                                  JOER
         B     GETPRB                                              JOER
ISPRB    DS    0H                                                  JOER
         XR    R6,R6                                               JOER
         ICM   R6,B'0111',RBCDE1                                   JOER
         BZ    NXTPRB                                              JOER
         USING CDENTRY,R6                                          JOER
         CLC   CDNAME,ESTMOD              IS this our module       JOER
         BNE   GETPRB                     No; continue looking     JOER
*                                                                  JOER
*   Get Sarting and ending address        CDE was found            JOER
*                                                                  JOER
         MVC   MODSTHM,CDENTPT                                     JOER
         NI    MODSTHM,X'7F'              Wipe out high order bit  JOER
*                                                                  JOER
CDMAJ    DS    0H                                                  JOER
         TM    CDATTR,CDMIN               Major or Minor CDE       JOER
         BZ    GETEX                                               JOER
         L     R6,CDXLMJP                 Get Extension            JOER
         B     CDMAJ                                               JOER
GETEX    DS    0H                                                  JOER
         L     R5,CDXLMJP                                          JOER
         DROP  R5                                                  JOER
         USING XTLST,R5                                            JOER
         L     R0,XTLMSBLA                 Get Length              JOER
         N     R0,=X'7FFFFFFF'             Wipe out high order     JOER
         L     R15,MODSTHM                 Start Address of mod    JOER
         AR    R15,R0                                              JOER
         ST    R15,MODENDH                                         JOER
*                                                                  JOER
*     Look if abend address is in module range                     JOER
*                                                                  JOER
         CLC   MODSTART,WNEXT                     No;              JOER
         BH    CKP                                get abending RB  JOER
         CLC   MODEND,WNEXT                                        JOER
         BL    CKP                                Regular print    JOER
         DROP  R5                                                  JOER
         USING XTLST,R5                                            JOER
         B     NOMOD                                               JOER
CKP      DS    0H
         CLC   MODSTHM,WNEXT                      No;              JOER
         BH    PRNTSDWA                           get abending RB  JOER
         CLC   MODEND,WNEXT                                        JOER
         BL    PRNTSDWA                           Regular print    JOER
         DROP  R5                                                  JOER
         USING XTLST,R5                                            JOER
         B     SAVERB                                              JOER
*                                                                  JOER
*     try to get abending RB might of percolated                   JOER
*                                                                  JOER
NOMOD    DS    0H                                                  JOER
         OI    FLAG,ABENDMOD           Indcate abend is not here   JOER
         CLC   SDWANAME+4(4),=F'0'                                 JOER
*        BNE   SAVERB                                              JOER
         B     SAVERB                                              JOER
         L     R5,SDWARBAD                                         JOER
         ST    R5,ABENDRB                                          JOER
         B     SAVEINFO                                            JOER
*---------------------------------------------------------------*  JOER
*         Code here to chain RB to look for abending RB         *  JOER
*---------------------------------------------------------------*  JOER
SAVERB   DS    0H                                                  JOER
         L     R5,TCBRBP                                           JOER
         USING RBBASIC,R5                                          JOER
RBLOOP   DS    0H                                                  JOER
         CR    R7,R5                 End of RB chain               JOER
         BE    SAVEINFO                                            JOER
         CLC   SDWAEC1,RBOPSW        Is this the abend             JOER
         BE    GOTABRB                                             JOER
         ICM   R5,B'0111',RBLINKB                                  JOER
         B     RBLOOP                                              JOER
GOTABRB  DS    0H                                                  JOER
         ST    R5,ABENDRB                                          JOER
SAVEINFO DS    0H                                                  JOER
         USING RBBASIC,R5                                          JOER
         TM    RBSTAB1,RBFTP                 IS this an SVRB       JOER
         BNZ   PRNTSDWA                                            JOER
*                                                                  JOER
*  Chain back to calling PRB                                       JOER
*                                                                  JOER
         ICM   R5,B'0111',RBLINKB                                  JOER
         LR    R6,R5                                               JOER
         BCTR  R6,0                                                JOER
         MVC   SVC#,0(R6)                                          JOER
         MVC   SVCOFF,RBOPSWA                                      JOER
         NI    SVCOFF,X'7F'                                        JOER
         L     R15,SVCOFF                                          JOER
         S     R15,MODSTHM                                         JOER
         ST    R15,SVCOFF                                          JOER
         MVC   ABENDREG,XRBREG                                     JOER
PRNTSDWA DS    0H
*        *---------------------------------------*                        68
*        *     WTO SDWA ADDRESS                  *                        69
*        *---------------------------------------*                        70
         SAC   0
         MVC   WTOLINE(LSDWMSG1),SDWMSG1 COPY MESSAGE MODEL TO WORKAREA   71
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST      72
         ST    R3,FORMAT                 SDWA ADDRESS TO FORMAT AREA      73
         LA    R15,FORMAT                ..ADDRESS DISPHEX SOURCE         74
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST            75
         LA    R15,4                       ..LENGTH OF DISPHEX SOURCE     76
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST          77
         LA    R15,WTOLINE+(SDWAADDR-SDWMSG1)  ..ADDRESS DISPHEX TARGET   78
         ST    R15,8(R1)                       ..TO DISPHEX PARMLIST      79
         LA    R15,L'SDWAADDR            ..LENGTH DISPHEX TARGET          80
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST            81
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE           82
         BAS   R14,WTORTN                ISSUE WTO                        83
*        *---------------------------------------*                        84
*        *     WTO ABEND CODE                    *                        85
*        *---------------------------------------*                        86
         MVC   WTOLINE(LARRMSG1),ARRMSG1 COPY MESSAGE MODEL TO WORKAREA   87
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST      88
         LA    R15,SDWAABCC+1            ..SDWA ABEND CODE ADDRESS        89
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST            90
         LA    R15,L'SDWAABCC-1            ..LENGTH OF DISPHEX SOURCE     91
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST          92
         LA    R15,WTOLINE+(ABNDCODE-ARRMSG1) ..ADDRESS DISPHEX TARGET    93
         ST    R15,8(R1)                      ..TO DISPHEX PARMLIST       94
         LA    R15,L'ABNDCODE            ..LENGTH DISPHEX TARGET          95
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST            96
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE           97
         MVI   WTOLINE+(ABNDCODE-ARRMSG1)+3,X'40'   SPACE TO LAST BYTE    98
         BAS   R14,WTORTN                  ISSUE WTO                      99
*        *---------------------------------------*                 JOER   84
*        *     WTO REASON CODE                   *                 JOER   85
*        *---------------------------------------*                 JOER   86
         UNPK  REACODE(5),SDWACRC+2(3)                             JOER
         TR    REACODE(4),TRTABLE                                  JOER
         MVI   REACODE+4,X'40'                                     JOER
         MVC   WTOLINE(LARRMSG2),ARRMSG2 COPY MESSAGE MODEL TO WORKJOER   87
         BAS   R14,WTORTN                  ISSUE WTO               JOER   99
*        *---------------------------------------*                       100
*        *     WTO MODULE NAME AND ENTRY POINT   *                       101
*        *---------------------------------------*                       102
         MVC   WTOLINE(LDMODMSG),DMODMSG COPY MESSAGE MODEL TO WORKAREA  103
CKMOD    DS    0H
         CLI   MODNAME,X'00'
         BE    CKEST
         MVC   WTOLINE+(DMOD1-DMODMSG)(L'SDWANAME),MODNAME               111
         B     AESTPARM                  FORMAT LOAD POINT               107
CKEST    DS    0H
         CLI   ESTMOD,X'00'              IS MODULE NAME IN PARMLIST?     104
         BE    NESTPARM                  NO; GET MODULE NAME FROM SDWA   105
         MVC   WTOLINE+(DMOD1-DMODMSG)(L'ESTMOD),ESTMOD                  106
         B     AESTPARM                  FORMAT LOAD POINT               107
NESTPARM DS    0H                                                        108
         CLI   SDWANAME,X'00'            IS MODULE NAME IN SDWA ?        109
         BE    CKMOD                     NO; DO NOT COPY FROM SDWA       110
         MVC   WTOLINE+(DMOD1-DMODMSG)(L'SDWANAME),SDWANAME              111
         B     AESTPARM
AESTPARM DS    0H                                                        112
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST     113
         ICM   R15,15,ESTLOAD            ENTRY POINT FROM PARMLIST       114
         BZ    NESTLOAD                  =0; GET FROM SDWA               115
         LA    R15,ESTLOAD               ADDRESS OF ENTRY POINT          116
         B     AESTLOAD                  FORMAT ENTRY POINT              117
NESTLOAD DS    0H                                                        118
         ICM   R15,15,SDWAEPA            MODULE ENTRY POINT FROM SDWA    119
         BZ    CKMODST                   =0; DO NOT FORMAT ENTRY PT      120
         LA    R15,SDWAEPA               ADDRESS OF SDWA ENTRY POINT     121
         B     AESTLOAD
CKMODST  DS    0H
         LA    R15,MODSTART              ADDRESS OF SDWA ENTRY POINT     121
AESTLOAD DS    0H                                                        122
         ST    R15,0(R1)                 SAVE ENTRY PT IN DISPHEX PARMS  123
         LA    R15,4                     ..LENGTH OF DISPHEX SOURCE      124
         ST    R15,4(R1)                 ..TO DISPHEX PARMLIST           125
         LA    R15,WTOLINE+(DMODLOD-DMODMSG) ..ADDRESS DISPHEX TARGET    126
         ST    R15,8(R1)                      ..TO DISPHEX PARMLIST      127
         LA    R15,L'DMODLOD             ..LENGTH DISPHEX TARGET         128
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST           129
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE          130
NSDWLOAD DS    0H                                                        131
         BAS   R14,WTORTN                ISSUE WTO                       132
*        *---------------------------------------*                       133
*        *     WTO PSW AND ABEND OFFSET          *                       134
*        *---------------------------------------*                       135
         TM    FLAG,ABENDMOD        Abended not in our module      JOER
         BZ    CKAMODE                                             JOER
         UNPK  SVCNUM#(3),SVC#(2)                                  JOER
         MVI   SVCNUM#+2,X'40'                                     JOER
         TR    SVCNUM#,TRTABLE                                     JOER
         UNPK  RBOFF,SVCOFF+2(3)                                   JOER
         MVI   RBOFF+4,X'40'                                       JOER
         TR    RBOFF(4),TRTABLE                                    JOER
CKAMODE  DS    0H                                                  JOER
         TM    FLAG,IS64            Amode 64                       JOER
         MVC   WTOLINE(LDPSWMSG),DPSWMSG COPY MESSAGE MODEL TO WORKAREA  136
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST     137
         LA    R15,SDWAEC1               ..SDWA PSW                      138
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST           139
         LA    R15,8                       ..LENGTH OF DISPHEX SOURCE    140
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST         141
         LA    R15,FORMAT                      ..ADDRESS DISPHEX TARGET  142
         ST    R15,8(R1)                       ..TO DISPHEX PARMLIST     143
         LA    R15,16                    ..LENGTH DISPHEX TARGET         144
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST           145
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE          146
*                                        COPY 1ST WORD PSW TO WTO        147
         MVC   WTOLINE+(DPSW1-DPSWMSG)(L'DPSW1),FORMAT                   148
*                                          COPY 2ST WORD PSW TO WTO      149
         MVC   WTOLINE+(DPSW2-DPSWMSG)(L'DPSW2),FORMAT+L'DPSW1           150
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST     151
         L     R15,SDWAEC1+4             2ND WORD OF PSW                 152
         LA    R15,0(R15)                CLEAR AMODE BIT                 153
         ICM   R14,15,ESTLOAD            LOAD POINT FROM CALLER          154
         BNZ   ESTLOD1                   ë=0; IS IN PARMLIST             155
         ICM   R14,15,SDWAEPA            GET LOAD POINT FROM SDWA        156
         BZ    WPSWMSG                   =0; DO NOT CALCULATE OFFSET     157
ESTLOD1  DS    0H                                                        158
         LA    R14,0(R14)                CLEAR HIGH ORDER BIT            159
         CLI   MODSTART,X'00'                                      JOER
         BE    SUB                                                 JOER
         L     R15,WNEXT                                           JOER
         L     R14,MODSTART                                        JOER
SUB      DS    0H
         SR    R15,R14                   SUBRTRACT TO FIND DISPLAC       160
         BNH   WPSWMSG                   LE 0; OFFSET IS INVALID         161
         ST    R15,FORMAT                SAVE OFFSET                     162
         LA    R15,FORMAT                ADDRESS OF SAVED OFFSET         163
         ST    R15,0(R1)                 OFFSET TO DISPHEX PARMLIST      164
         LA    R15,4                     ..LENGTH OF DISPHEX SOURCE      165
         ST    R15,4(R1)                 ..TO DISPHEX PARMLIST           166
         LA    R15,WTOLINE+(OFFSET-DPSWMSG) ..ADDRESS DISPHEX TARGET     167
         ST    R15,8(R1)                    ..TO DISPHEX PARMLIST        168
         LA    R15,L'OFFSET              ..LENGTH DISPHEX TARGET         169
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST           170
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE          171
WPSWMSG  DS    0H                                                        172
         BAS   R14,WTORTN                ISSUE WTO                       173
*        *---------------------------------------*                       174
*        *     ISSUE WTOS WITH ABEND GENERAL REGS*                       175
*        *---------------------------------------*                       176
         MVC   WTOLINE(LGENREGS),GENREGS ..ISSUE REGISTER                177
         BAS   R14,WTORTN                ..MESSAGE                       178
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST     179
         LA    R15,SDWAGRSV              ..ADDRESS OF PSW REGISTERS      180
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST           181
         LA    R15,L'SDWAGRSV              ..LENGTH OF DISPHEX SOURCE    182
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST         183
         LA    R15,FORMAT                    ..ADDRESS DISPHEX TARGET    184
         ST    R15,8(R1)                     ..TO DISPHEX PARMLIST       185
         LA    R15,L'SDWAGRSV*2          ..LENGTH DISPHEX TARGET         186
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST           187
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE          188
         MVC   WTOLINE(LMREG1),MREG1                       ..ISSUE       189
         MVC   WTOLINE+(DREG0-MREG1)(L'DREG0),FORMAT+0*8   ..WTO         190
         MVC   WTOLINE+(DREG1-MREG1)(L'DREG1),FORMAT+1*8   ..WITH        191
         MVC   WTOLINE+(DREG2-MREG1)(L'DREG2),FORMAT+2*8   ..FOUR        192
         MVC   WTOLINE+(DREG3-MREG1)(L'DREG3),FORMAT+3*8   ..REGISTERS   193
         BAS   R14,WTORTN                                  ..FROM FMT    194
         MVC   WTOLINE(LMREG2),MREG2                     ..ISSUE         195
         MVC   WTOLINE+(DREG4-MREG2)(L'DREG4),FORMAT+4*8 ..WTO           196
         MVC   WTOLINE+(DREG5-MREG2)(L'DREG5),FORMAT+5*8 ..WITH          197
         MVC   WTOLINE+(DREG6-MREG2)(L'DREG6),FORMAT+6*8 ..FOUR          198
         MVC   WTOLINE+(DREG7-MREG2)(L'DREG7),FORMAT+7*8 ..REGISTERS     199
         BAS   R14,WTORTN                                ..FROM FORMAT   200
         MVC   WTOLINE(LMREG3),MREG3                        ..ISSUE      201
         MVC   WTOLINE+(DREG8-MREG3)(L'DREG8),FORMAT+8*8    ..WTO        202
         MVC   WTOLINE+(DREG9-MREG3)(L'DREG9),FORMAT+9*8    ..WITH       203
         MVC   WTOLINE+(DREG10-MREG3)(L'DREG10),FORMAT+10*8 ..FOUR       204
         MVC   WTOLINE+(DREG11-MREG3)(L'DREG11),FORMAT+11*8 ..REGISTERS  205
         BAS   R14,WTORTN                                   ..FROM FMT   206
         MVC   WTOLINE(LMREG4),MREG4                          ..ISSUE    207
         MVC   WTOLINE+(DREG12-MREG4)(L'DREG12),FORMAT+12*8   ..WTO      208
         MVC   WTOLINE+(DREG13-MREG4)(L'DREG13),FORMAT+13*8   ..WITH     209
         MVC   WTOLINE+(DREG14-MREG4)(L'DREG14),FORMAT+14*8   ..FOUR     210
         MVC   WTOLINE+(DREG15-MREG4)(L'DREG15),FORMAT+15*8   ..REGS     211
         BAS   R14,WTORTN                                     ..FROMFMT  212
*        *---------------------------------------*                       213
*        *     ISSUE WTOS WITH ABEND ACCESS REGS *                       214
*        *---------------------------------------*                       215
         MVC   WTOLINE(LACCREGS),ACCREGS ..ISSUE REGISTER                216
         BAS   R14,WTORTN                ..MESSAGE                       217
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST     218
         LA    R15,SDWAARER              ..ADDRESS OF PSW REGISTERS      219
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST           220
         LA    R15,L'SDWAARER              ..LENGTH OF DISPHEX SOURCE    221
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST         222
         LA    R15,FORMAT                ..ADDRESS DISPHEX TARGET        223
         ST    R15,8(R1)                 ..TO DISPHEX PARMLIST           224
         LA    R15,L'SDWAARER*2            ..LENGTH DISPHEX TARGET       225
         ST    R15,12(R1)                  ..TO DISPHEX PARMLIST         226
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE          227
         MVC   WTOLINE(LMAR1),MAR1                         ..ISSUE       228
         MVC   WTOLINE+(DAR0-MAR1)(L'DAR0),FORMAT+0*8   ..WTO            229
         MVC   WTOLINE+(DAR1-MAR1)(L'DAR1),FORMAT+1*8   ..WITH           230
         MVC   WTOLINE+(DAR2-MAR1)(L'DAR2),FORMAT+2*8   ..FOUR           231
         MVC   WTOLINE+(DAR3-MAR1)(L'DAR3),FORMAT+3*8   ..REGISTERS      232
         BAS   R14,WTORTN                               ..FROM FMT       233
         MVC   WTOLINE(LMAR2),MAR2                    ..ISSUE            234
         MVC   WTOLINE+(DAR4-MAR2)(L'DAR4),FORMAT+4*8 ..WTO              235
         MVC   WTOLINE+(DAR5-MAR2)(L'DAR5),FORMAT+5*8 ..WITH             236
         MVC   WTOLINE+(DAR6-MAR2)(L'DAR6),FORMAT+6*8 ..FOUR             237
         MVC   WTOLINE+(DAR7-MAR2)(L'DAR7),FORMAT+7*8 ..REGISTERS        238
         BAS   R14,WTORTN                             ..FROM FORMAT      239
         MVC   WTOLINE(LMAR3),MAR3                       ..ISSUE         240
         MVC   WTOLINE+(DAR8-MAR3)(L'DAR8),FORMAT+8*8    ..WTO           241
         MVC   WTOLINE+(DAR9-MAR3)(L'DAR9),FORMAT+9*8    ..WITH          242
         MVC   WTOLINE+(DAR10-MAR3)(L'DAR10),FORMAT+10*8 ..FOUR          243
         MVC   WTOLINE+(DAR11-MAR3)(L'DAR11),FORMAT+11*8 ..REGISTERS     244
         BAS   R14,WTORTN                                ..FROM FMT      245
         MVC   WTOLINE(LMAR4),MAR4                           ..ISSUE     246
         MVC   WTOLINE+(DAR12-MAR4)(L'DAR12),FORMAT+12*8  ..WTO          247
         MVC   WTOLINE+(DAR13-MAR4)(L'DAR13),FORMAT+13*8  ..WITH         248
         MVC   WTOLINE+(DAR14-MAR4)(L'DAR14),FORMAT+14*8  ..FOUR         249
         MVC   WTOLINE+(DAR15-MAR4)(L'DAR15),FORMAT+15*8  ..REGS         250
         BAS   R14,WTORTN                                 ..FROM FMT     251
*        *---------------------------------------*                       252
*        *     INVOKE USER ROUTINE               *                       253
*        *---------------------------------------*                       254
         ICM   R15,15,ESTRTN         USER ROUTINE ADDRESS                255
         BZ    NUSERTN               =0; NO ROUTINE SPECIFIED            256
         EREG  R1,R1                 MAKE SURE SDWA ADDRESS IS IN R1     257
         BASSM R14,R15               INVOKE THE ROUTINE                  258
         LTR   R15,R15               RC=0 ?                              259
         BNZ   EXITPERC              NO; PERCOLATE                       260
NUSERTN  DS    0H                                                        261
*        *---------------------------------------*                       262
*        *     RETRY OR PEROCLATE                *                       263
*        *---------------------------------------*                       264
         ICM   R4,15,ESTRETRY        RETRY ROUTINE ADDRESS               265
         BNZ   EXITRTRY              ë=0; ROUTINE ADDRESS SUPPLIED       266
         B     EXITPERC              NO ROUTINE ADDRESS; PERCOLATE       267
*---------------------------------------------------------------------*  268
*        EXIT ROUTINES                                                *  269
*---------------------------------------------------------------------*  270
*        *---------------------------------------*                       271
*        *     PERCOLATE THE ABEND               *                       272
*        *---------------------------------------*                       273
EXITPERC DS    0H                                                        274
         MVC   WTOLINE(LNRETMSG),NRETMSG  ..OUTPUT PEROCLATE             275
         BAS   R14,WTORTN                 ..MESSAGE                      276
         EREG  R1,R1                   SDWA ADDRESS TO R1                277
         SETRP RC=0                    SET SDWA TO PERCOLATE             278
         B     EXIT                                                      279
*        *---------------------------------------*                       280
*        *     INVOKE THE RETRY ROUTINE          *                       281
*        *---------------------------------------*                       282
EXITRTRY DS    0H                                                        283
         MVC   WTOLINE(LSDRETRY),SDRETRY COPY MESSAGE MODEL TO WORKAREA  284
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST     285
         ST    R4,FORMAT                 RETRY ADDRESS TO FORMAT AREA    286
         LA    R15,FORMAT                ..ADDRESS DISPHEX SOURCE        287
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST           288
         LA    R15,4                       ..LENGTH OF DISPHEX SOURCE    289
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST         290
         LA    R15,WTOLINE+(SDRETADR-SDRETRY)  ..ADDRESS DISPHEX TARGET  291
         ST    R15,8(R1)                       ..TO DISPHEX PARMLIST     292
         LA    R15,L'SDRETADR            ..LENGTH DISPHEX TARGET         293
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST           294
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE          295
         BAS   R14,WTORTN                ISSUE WTO                       296
*        *---------------------------------------*                       297
*        *     IF THIS IS ARR, BUILD RUB         *                       298
*        *---------------------------------------*                       299
         CLI   SDWATYPE,SDWATARR       IS THIS AN ARR ?                  300
         BNE   NOTARRTN                NO; DO NOT BUILD RUB              301
         MVC   ESTRUB(2),=X'FFFF'      RESTORE ALL REGISTERS             302
         MVC   ESTRUB+2(L'SDWAGRSV),SDWAGRSV    MOVE REGISTER TO RUB     303
         LA    R5,ESTRUB                        ADDRESS OF RUB           304
         EREG  R1,R1                   SDWA ADDRESS TO R1                305
         SETRP RC=4,RETREGS=YES,RETADDR=(R4),FRESDWA=YES,DUMP=NO,      X 306
               RUB=(R5)                                                  307
         B     EXIT                                                      308
NOTARRTN DS    0H                                                        309
         EREG  R1,R1                   SDWA ADDRESS TO R1                310
         SETRP RC=4,RETREGS=YES,RETADDR=(R4),FRESDWA=YES,DUMP=NO         311
         B     EXIT                                                      312
*---------------------------------------------------------------------*  313
*        DISPHEX SUBROUTINE                                           *  314
* FUNCTION:                                                           *  315
*   TRANSLATE BINARY NUMBER (HEX) NUMBER TO CHARACTER NUMBER.         *  316
*   THIS ROUTINE WILL TRUNCATE INPUT OR PAD OUTPUT SO THAT OUTPUT     *  317
*   IS TWICE INPUT SIZE.  THE MAXIMUM INPUT SIZE IS 128 BYTES.        *  318
* INPUT:                                                              *  319
*   ADDRESS OF PARMLIST IN R1                                         *  320
*   PARMLIST FIELDS:                                                  *  321
*   DS    A    ADDRESS OF INPUT FIELD                                 *  322
*   DS    F    LENGTH OF INPUT FIELD                                  *  323
*   DS    A    ADDRESS OF OUTPUT FIELD                                *  324
*   DS    F    LENGTH OF OUTPUT FIELD                                 *  325
*---------------------------------------------------------------------*  326
DISPHEX  DS    0H                                                        327
         BAKR  R14,0                   BUILD STACK STATE ENTRY           328
         LM    R4,R7,0(R1)             LOAD REGS FROM PARMLIST           329
         LR    R1,R5                   INPUT LENGTH TO R1                330
         SLL   R1,1                    * 2                               331
         CR    R7,R1                   IS OUTPUT LENGTH >= 2 * INPUT ?   332
         BNL   LENGTHOK                YES; CONTINUE                     333
         LR    R5,R7                   ..OUTPUT LENGTH                   334
         SRL   R5,1                    ..DIVIDED BY 2 IS NEW INPUT LEN   335
LENGTHOK DS    0H                                                        336
         EREG  R1,R1                   EXTRACT PARMLIST ADDR FROM STACK  337
         STM   R4,R7,0(R1)             SAVE REGS IN PARMLIST             338
UNPKLP   DS    0H                                                        339
         IC    R11,0(R4)               INPUT BYTE                        340
         STC   R11,1(R6)               SAVE IN OUTPUT                    341
         SRL   R11,4                   SHIFT INPUT BYTE                  342
         STC   R11,0(R6)               SAVE IN OUTPUT                    343
         LA    R4,1(R4)                POINT AT NEXT INPUT BYTE          344
         LA    R6,2(R6)                POINT AT NEXT OUTPUT BYTE         345
         BCT   R5,UNPKLP               LOOP FOR LENGTH OF INPUT          346
         EREG  R1,R1                   EXTRACT PARMLIST ADDR FROM STACK  347
         LM    R4,R7,0(R1)             LOAD REGS FROM PARMLIST           348
         NI    0(R6),X'0F'             TURN OFF HIGH ORDER BITS 1ST BYT  349
         BCTR  R7,0                    LENGTH LESS 1                     350
         BCTR  R7,0                    LESS 1 FOR EXECUTE                351
         EX    R7,MVZ1                 PROPOGATE HIGH ORDER BITS OFF     352
         B     AMVZ1                   BRANCH AROUND EXECUTE             353
MVZ1     MVZ   1(0,R6),0(R6)           ** EXECUTE ONLY **                354
AMVZ1    DS    0H                                                        355
         LA    R7,1(0,R7)              INCREASE TO LENGTH-1              356
         EX    R7,TR1                  UNPACK INPUT INTO OUTPUT          357
         B     ATR1                    BRANCH AROUND EXECUTE             358
TR1      TR    0(0,R6),TRTAB           ** EXECUTE ONLY **                359
ATR1     DS    0H                                                        360
         EREG  R15,R1                  RESTORE REGS 0,1,AND 15           361
         PR                            RESTORE STACK                     362
TRTABLE  DC    240X'00'
         DC    C'0123456789ABCDEF'     TRANSLATION  TABLE                363
TRTAB    DC    C'0123456789ABCDEF'     TRANSLATION  TABLE                363
*---------------------------------------------------------------------*  364
*        WTO ROUTINE                                                  *  365
*---------------------------------------------------------------------*  366
WTORTN   DS 0H                                                           367
         BAKR  R14,0                   SAVE ENVIRONMENT ON STACK         368
         TM    ESTFLAG2,@ESTNWTO       NO WTOS?                          369
         BO    WTORETN1                YES; EXIT ROUTINE                 370
         LA    R11,WTOLINE             ADDRESS OF WTO TEXT               371
         CLI   SDWATYPE,SDWATEST       IS PROGRAM CHECK FOR AN ESTAE?    372
         BE    ESTWTO                  YES; ISSUE STANDARD WTO           373
         LA    R0,1                    ..EXTRACT PSW INTO                374
         ESTA  R0,R0                   ..INTO REGS 0 AND 1               375
         N     R0,=A(X'00010000')      TURN OFF ALL BUT PROBLEM BIT      376
         BNZ   WTORETN1                 =0; IN PROBLEM STATE: EXIT       377
         SAC   0                       SET PRIMARY SPACE MODE            378
         SPKA  0                       GET A KEY 0 PSW                   379
         WTO   TEXT=(R11),LINKAGE=BRANCH,MF=(E,WTOLIST)                  380
*                                      ISSUE WTO WITHOUT SVC35           381
         B     WTORETN                 CONTINUE                          382
ESTWTO   DS    0H                                                        383
         WTO   TEXT=(R11),MF=(E,WTOLIST)                                 384
*                                      ISSUE WTO WITH SVC35              385
WTORETN  DS    0H                                                        386
         MVI   WTOLINE,X'40'                     ..SET TEXT LINE         387
         MVC   WTOLINE+1(L'WTOLINE-1),WTOLINE    ..TO SPACES             388
         LA    R11,4                             ..WITH LENGTH           389
         STCM  R11,B'0011',WTOLINE               ..OF 4                  390
WTORETN1 DS    0H                                                        391
         EREG  R15,R1                  RESTORE REGS 15,0 AND 1           392
         PR                            RETURN TO CALLER                  393
CARR     DC    CL8'CARR'
*---------------------------------------------------------------------*  394
*        COMMON EXIT                                                  *  395
*---------------------------------------------------------------------*  396
EXIT     DS    0H                                                        397
         ENDMOD             RESTORE REGISTERS AND RETURN                 398
*---------------------------------------------------------------------*  399
*        CONSTANTS                                                    *  400
*---------------------------------------------------------------------*  401
*        *---------------------------------------*                       402
*        *     WTO PARMLIST MODEL                *                       403
*        *---------------------------------------*                       404
WTOLISTM WTO   TEXT=(R11),MF=L                                           405
LWTOLIST EQU   *-WTOLISTM                                                406
*        *---------------------------------------*                       407
*        *     USER PARM NOT SUPPLIED            *                       408
*        *---------------------------------------*                       409
NPARMSG  DC    AL2(LNPARMSG)                                             410
         DC    C'User parm has not been supplied - percolating'          411
LNPARMSG EQU   *-NPARMSG                                                 412
*        *---------------------------------------*                       413
*        *     SDWA ADDRESS                      *                       414
*        *---------------------------------------*                       415
SDWMSG1  DC    AL2(LSDWMSG1)                                             416
         DC    C'SDWA address: '                                         417
SDWAADDR DS    CL8                                                       418
         DC    C' '                                                      419
LSDWMSG1 EQU   *-SDWMSG1                                                 420
*        *---------------------------------------*                       421
*        *     ABEND CODE                        *                       422
*        *---------------------------------------*                       423
ARRMSG1  DC    AL2(LARRMSG1)                                             424
         DC    C'Abend code:   '                                         425
ABNDCODE DS    CL4                                                       426
         DC    C' '                                                      427
LARRMSG1 EQU   *-ARRMSG1                                                 428
*        *---------------------------------------*                 JOER  421
*        *     REASON CODE                       *                 JOER  422
*        *---------------------------------------*                 JOER  423
ARRMSG2  DC    AL2(LARRMSG2)                                       JOER  424
RETLIT   DC    CL14'Reason code: '                                 JOER  425
REACODE  DS    CL4                                                 JOER  426
         DS    C                                                   JOER  427
LARRMSG2 EQU   *-ARRMSG2                                           JOER  428
*        *---------------------------------------*                       429
*        *     DISPLAY MODULE INFORMATION        *                       430
*        *---------------------------------------*                       431
DMODMSG  DC    AL2(LDMODMSG)                                             432
         DC    C'Module name:  '                                         433
DMOD1    DC    CL8'n/a'                                                  434
         DC    C'  Entry point: '                                        435
DMODLOD  DC    CL8'n/a'                                                  436
LDMODMSG EQU   *-DMODMSG                                                 437
*        *---------------------------------------*                 JOER  429
*        *     DISPLAY RB INFORMATION            *                 JOER  430
*        *---------------------------------------*                 JOER  431
DRBMSG   DC    AL2(LDMODMSG)                                       JOER  432
         DC    C'SVC '                                             JOER  433
SVCNUM#  DS    XL2                                                 JOER
         DS    X                                                   JOER
         DC    C' Abended, was called from offset: '               JOER
RBOFF    DS    CL5                                                 JOER  435
LDRBMSG  EQU   *-DMODMSG                                           JOER  437
*        *---------------------------------------*                       438
*        *     DISPLAY PSW                       *                       439
*        *---------------------------------------*                       440
DPSWMSG  DC    AL2(LDPSWMSG)                                             441
         DC    C'The PSW at time of Error:  '                            442
DPSW1    DS    CL8                                                       443
         DC    C'  '                                                     444
DPSW2    DS    CL8                                                       445
         DC    C'  Offset: '                                             446
OFFSET   DC    CL8'n/a'                                                  447
LDPSWMSG EQU   *-DPSWMSG                                                 448
*        *---------------------------------------*                       449
*        *     GENERAL REGISTERS                 *                       450
*        *---------------------------------------*                       451
GENREGS  DC    AL2(LGENREGS)                                             452
         DC    C'General registers at abend:'                            453
LGENREGS EQU   *-GENREGS                                                 454
*        *---------------------------------------*                       455
*        *     DISPLAY REGISTERS 1               *                       456
*        *---------------------------------------*                       457
MREG1    DC    AL2(LMREG1)                                               458
         DC    C'   R0:'                                                 459
DREG0    DS    CL8                                                       460
         DC    C'    R1:'                                                461
DREG1    DS    CL8                                                       462
         DC    C'    R2:'                                                463
DREG2    DS    CL8                                                       464
         DC    C'    R3:'                                                465
DREG3    DS    CL8                                                       466
LMREG1   EQU   *-MREG1                                                   467
*        *---------------------------------------*                       468
*        *     DISPLAY REGISTERS 2               *                       469
*        *---------------------------------------*                       470
MREG2    DC    AL2(LMREG2)                                               471
         DC    C'   R4:'                                                 472
DREG4    DS    CL8                                                       473
         DC    C'    R5:'                                                474
DREG5    DS    CL8                                                       475
         DC    C'    R6:'                                                476
DREG6    DS    CL8                                                       477
         DC    C'    R7:'                                                478
DREG7    DS    CL8                                                       479
LMREG2   EQU   *-MREG2                                                   480
*        *---------------------------------------*                       481
*        *     DISPLAY REGISTERS 3               *                       482
*        *---------------------------------------*                       483
MREG3    DC    AL2(LMREG3)                                               484
         DC    C'   R8:'                                                 485
DREG8    DS    CL8                                                       486
         DC    C'    R9:'                                                487
DREG9    DS    CL8                                                       488
         DC    C'   R10:'                                                489
DREG10   DS    CL8                                                       490
         DC    C'   R11:'                                                491
DREG11   DS    CL8                                                       492
LMREG3   EQU   *-MREG3                                                   493
*        *---------------------------------------*                       494
*        *     DISPLAY REGISTERS 4               *                       495
*        *---------------------------------------*                       496
MREG4    DC    AL2(LMREG4)                                               497
         DC    C'  R12:'                                                 498
DREG12   DS    CL8                                                       499
         DC    C'   R13:'                                                500
DREG13   DS    CL8                                                       501
         DC    C'   R14:'                                                502
DREG14   DS    CL8                                                       503
         DC    C'   R15:'                                                504
DREG15   DS    CL8                                                       505
LMREG4   EQU   *-MREG4                                                   506
*        *---------------------------------------*                       507
*        *     ACCESS  REGISTERS                 *                       508
*        *---------------------------------------*                       509
ACCREGS  DC    AL2(LACCREGS)                                             510
         DC    C'Access registers at abend:'                             511
LACCREGS EQU   *-ACCREGS                                                 512
*        *---------------------------------------*                       513
*        *     DISPLAY ACCESS REGISTERS          *                       514
*        *---------------------------------------*                       515
MAR1     DC    AL2(LMAR1)                                                516
         DC    C'  AR0:'                                                 517
DAR0     DS    CL8                                                       518
         DC    C'   AR1:'                                                519
DAR1     DS    CL8                                                       520
         DC    C'   AR2:'                                                521
DAR2     DS    CL8                                                       522
         DC    C'   AR3:'                                                523
DAR3     DS    CL8                                                       524
LMAR1    EQU   *-MAR1                                                    525
*        *---------------------------------------*                       526
*        *     DISPLAY REGISTERS 2               *                       527
*        *---------------------------------------*                       528
MAR2     DC    AL2(LMAR2)                                                529
         DC    C'  AR4:'                                                 530
DAR4     DS    CL8                                                       531
         DC    C'   AR5:'                                                532
DAR5     DS    CL8                                                       533
         DC    C'   AR6:'                                                534
DAR6     DS    CL8                                                       535
         DC    C'   AR7:'                                                536
DAR7     DS    CL8                                                       537
LMAR2    EQU   *-MAR2                                                    538
*        *---------------------------------------*                       539
*        *     DISPLAY REGISTERS 3               *                       540
*        *---------------------------------------*                       541
MAR3     DC    AL2(LMAR3)                                                542
         DC    C'  AR8:'                                                 543
DAR8     DS    CL8                                                       544
         DC    C'   AR9:'                                                545
DAR9     DS    CL8                                                       546
         DC    C'  AR10:'                                                547
DAR10    DS    CL8                                                       548
         DC    C'  AR11:'                                                549
DAR11    DS    CL8                                                       550
LMAR3    EQU   *-MAR3                                                    551
*        *---------------------------------------*                       552
*        *     DISPLAY REGISTERS 4               *                       553
*        *---------------------------------------*                       554
MAR4     DC    AL2(LMAR4)                                                555
         DC    C' AR12:'                                                 556
DAR12    DS    CL8                                                       557
         DC    C'  AR13:'                                                558
DAR13    DS    CL8                                                       559
         DC    C'  AR14:'                                                560
DAR14    DS    CL8                                                       561
         DC    C'  AR15:'                                                562
DAR15    DS    CL8                                                       563
LMAR4    EQU   *-MAR4                                                    564
*        *---------------------------------------*                       565
*        *     RETRY ROUTINE ADDRESS             *                       566
*        *---------------------------------------*                       567
SDRETRY  DC    AL2(LSDRETRY)                                             568
         DC    C'Invoking Retry Routine at address:   '                  569
SDRETADR DS    CL8                                                       570
         DC    C' '                                                      571
LSDRETRY EQU   *-SDRETRY                                                 572
*        *---------------------------------------*                       573
*        *     NO RETRY MESSAGE                  *                       574
*        *---------------------------------------*                       575
NRETMSG  DC    AL2(LNRETMSG)                                             576
         DC    C'Return to RTM with percolation '                        577
LNRETMSG EQU   *-NRETMSG                                                 578
*---------------------------------------------------------------------*  579
*        MAP WORK AREA                                                *  580
*---------------------------------------------------------------------*  581
WGRECOV  DSECT                                                           582
FLAG     DS    X                                                   JOER
*                                                                  JOER
ABENDMOD EQU   X'80'                   Abend is in module          JOER
IS64     EQU   X'40'                   abend was amod64            JOER
*                                                                  JOER
ATTR1    DS    X
ATTR2    DS    X
ATTR3    DS    X
XATTR    DS    XL8
PDATA    DS    XL16
DIAG     DS    XL4
XTLST#   DS    XL136
DSKEY    DS    CL8
         CSVQUERY PLISTVER=MAX,MF=(L,CSVQLIST)
MODNAME  DS    CL8                    Module name in prim          JOER
MODNMECL DS    CL8                    Module name in Home          JOER
ATTRVAL  DS    F
MODSTART DS    F                       Module Starting             JOER
MODSTHM  DS    F                       Module Starting             JOER
MODEND   DS    F                       Module ending               JOER
MODENDH  DS    F                       Module ending               JOER
WNEXT    DS    F                       Work area                   JOER
SVC#     DS    X                                                   JOER
SVCOFF   DS    F                                                   JOER
ABENDRB  DS    F                        Abending RB                JOER
ABENDREG DS    XL60                                                JOER
*
WTOLINE  DS    CL80                    WTO MESSEGE IS MOVED HERE         583
DISPARM  DS    4F                      PARMLIST FOR WTORTN               584
WTOLIST  DS    0F,CL(LWTOLIST)         PARMLIST FOR WTO MACRO            585
FORMAT   DS    0F,CL256                WORK AREA                         586
LGRECOV  EQU   *-WGRECOV                                                 587
*---------------------------------------------------------------------*  588
*        OTHER DSECTS                                                 *  589
*---------------------------------------------------------------------*  590
         IHAPSA
         ESTPARM                       MAP USER PARMLIST                 591
         IKJRB LIST=YES
         IHACDE
         IKJTCB
         IHAXTLST
         IHAASCB
         END                                                             592
