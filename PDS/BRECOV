*PROCESS SUPRWARN(303)
*                                                                          1
*                                                                          2
*+--------------------------------------------------------------------+    3
*¦       (C)   COPYRIGHT MD-PALADIN INC. 1992                         ¦    4
*+--------------------------------------------------------------------+    5
*¦  FUNCTION:                                                         ¦    6
*¦    GENERALIZED RECOVERY ROUTINE.  CAN BE USED AS AN ESTAE(X) RTN,  ¦    7
*¦    FRR OR ARR.                                                     ¦    8
*¦  INPUTS:                                                           ¦    9
*¦    R1 - SDWA ADDRESS                                               ¦   10
*¦         ADDRESS OF USER PARMLIST ADDRESS IS IN FIELD SDWAPARM.     ¦   11
*¦         THE USER PARMLIST IS MAPPED BY THE ESTPARM MACRO.          ¦   12
*¦  OUTPUTS:                                                          ¦   13
*¦    VARIOUS WTOS.                                                   ¦   14
*¦    SDWA RETURNED TO RTM WITH RETRY ADDRESS IF RETRY IS DESIRED     ¦   15
*¦  LOGIC:                                                            ¦   16
*¦    1) THE EXPANSION OF MODULE ENTRY=ESTAEX MACRO TESTS WHETHER     ¦   17
*¦       RTM HAS SUPPLIED AN SDWA.  IF SDWA IS ABSENT, PERCOLATE.     ¦   18
*¦    2) ADDRESS THE SDWA EXTENSION AND USER PARMLIST. IF THERE IS    ¦   19
*¦       NO USER PARMLIST, PERCOLATE THE ABEND.                       ¦   20
*¦    3) TEST WHETHER THIS IS A RECURSIVE ENTRY. FOR AN ESTAE, RTM2   ¦   21
*¦       KEEPS TRACK OF RECURSION.  OTHERWISE, TEST USER FLAG.        ¦   22
*¦    4) ISSUE WTOS WITH INFORMATION FROM USER PARMLIST AND/OR SDWA.  ¦   23
*¦    5) IF USER HAS SUPPLIED THE ADDRESS OF AN ADDITIONAL ROUTINE,   ¦   24
*¦       INVOKE THE ROUTINE.  THE ROUTINE WILL RECEIVE CONTROL IN     ¦   25
*¦       PRIMARY ASC MODE AND WITH THE SDWA ADDRESS IN R1.  IF THE    ¦   26
*¦       ROUTINE RETURNS 0 IN R15, GRECOV WILL ATTEMPT RETRY.  ANY    ¦   27
*¦       OTHER VALUE WILL CAUSE GRETRY TO PERCOLATE THE ABEND.        ¦   28
*¦    6) IF THERE IS A RETRY ADDRESS IN THE PARMLIST, ISSUE SETRP     ¦   29
*¦       TO RETRY.  IF THIS IS AN ARR, BUILD A REGISTER UPDATE BLOCK  ¦   30
*¦       (RUB).  IF THERE IS NO RETRY ADDRESS, PERCOLATE THE ABEND.   ¦   31
*¦  ATTRIBUTES:                                                       ¦   32
*¦    AMODE 31, RMODE ANY, REENTRANT, ESA DEPENDENCIES                ¦   33
*+--------------------------------------------------------------------+   34
AR0      EQU   0                                                   JOER
AR1      EQU   1                                                   JOER
AR2      EQU   2                                                   JOER
AR3      EQU   3                                                   JOER
AR4      EQU   4                                                   JOER
AR5      EQU   5                                                   JOER
AR6      EQU   6                                                   JOER
AR7      EQU   7                                                   JOER
AR8      EQU   8                                                   JOER
AR9      EQU   9                                                   JOER
AR10     EQU   10                                                  JOER
AR11     EQU   11                                                  JOER
AR12     EQU   12                                                  JOER
AR13     EQU   13                                                  JOER
AR14     EQU   14                                                  JOER
AR15     EQU   15                                                  JOER
TEST     CSECT
         MODULE GRECOV,BASE=(12,10),LOC=BELOW,AMODE=31,RMODE=ANY,  JOERX  35
               ENTRY=ESTAEX,                                           X  36
               TEXT=' GENERALIZED RECOVERY ROUTINE '                      37
         SAC   0                       SET PSW TO PRIMARY SPACE ASC       38
         SYSSTATE ASCENV=P             PRIMARY SPACE MODE MACROS          39
         MVC   WTOLIST(LWTOLIST),WTOLISTM  COPY WTO PARMLIST TO RENT      40
*        *---------------------------------------*                        41
*        *     SET ADDRESSABILITY SDWA EXTENSION *                        42
*        *---------------------------------------*                        43
         L     R8,SDWAXPAD             ADDRESS SDWA EXTENSION PTRS        44
         L     R8,SDWASRVP-SDWAPTRS(R8) ADDRESS OF RECORDABLE XTNSION     45
         USING SDWARC1,R8              ADDRESSING FOR RECORDABLE XTN      46
         ICM   R9,15,SDWAPARM          ADDRESS OF USER PARM ADDRESS       47
         ICM   R9,15,0(R9)             ADDRESS OF USER PARM               48
         USING ESTPARM,R9              MAP USER PARMLIST                  49
         BNZ   CNTINUE                 PARM EXISTS; CONTINUE              50
         MVC   WTOLINE(LNPARMSG),NPARMSG  ..OUTPUT NOPARM                 51
         BAS   R14,WTORTN                 ..MESSAGE                       52
         B     EXITPERC                YES; PERCOLATE THE ABEND           53
CNTINUE  DS    0H                                                         54
*        *---------------------------------------*                        55
*        *     TEST RECURSION                    *                        56
*        *---------------------------------------*                        57
         CLI   SDWATYPE,SDWATEST       IS THIS AN ESTAE ?                 58
         BNE   NESTTYPE                NO; DO NOT TEST SDWA FLAG          59
         TM    SDWAERRD,SDWASTAE       RECURSIVE ENTRY ?                  60
         BO    EXITPERC                YES; PERCOLATE THE ABEND           61
         B     AFTRECRS                CONTINUE                           62
NESTTYPE DS    0H                                                         63
         TM    ESTFLAG,@ESTSTAE        IS RECURSION FLAG SET              64
         BO    EXITPERC                YES; PERCOLATE THE ABEND           65
         OI    ESTFLAG,@ESTSTAE        SET RECURSION FLAGE                66
AFTRECRS DS    0H                                                  JOER   67
*                                                                  JOER
*    Determine if primary and home are different                   JOER
*                                                                  JOER
*    also look if SDWAEPA and SDNAME are populated                 JOER
*                                                                  JOER
*                                                                  JOER
         CLC   SDWAEPA,=F'0'          Do we have SDWAEPA           JOER
         BE    CKNAME                 No                           JOER
         OI    FLAG,EPA                                            JOER
CKNAME   DS    0H                                                  JOER
         CLC   SDWANAME+4(4),=4X'00'  Name there                   JOER
         BE    CKXMEM#                                             JOER
         OI    FLAG,NAME#                                          JOER
CKXMEM#  DS    0H                                                  JOER
         EPAR  R0                                                  JOER
         CH    R0,SDWAPRIM    Are we in the abended address sp     JOER
         BE    SAME                                                JOER
         MVC   ASID#,SDWAPRIM                                      JOER
         OI    FLAG,XMEM                                           JOER
SAME     DS    0H                                                  JOER
*        Check for amode 64                                        JOER
*                                                                  JOER
*                                                                  JOER
         TM    SDWANXT1,X'80'                                      JOER
         BZ    IT31                                                JOER
         TM    SDWAEC1+3,X'01'                                     JOER
         BZ    IT31                                                JOER
         OI    FLAG,IS64                                           JOER
IT31     DS    0H                                                  JOER
*        TM    FLAG,XMEM                                           JOER
*        BZ    GETTCBRB                                            JOER
*                                                                  JOER
*       If abended in a stacking space switching rtn               JOER
*       get progname and entry point and length from prim addr     JOER
*       space                                                      JOER
*                                                                  JOER
         TM    FLAG,IS64                                           JOER
         BO    SET64                                               JOER
         MVC   WNEXT+4,SDWANXT1             Save abend address     JOER
         NI    WNEXT+4,X'7F'                Wipe out high order    JOER
         B     DOCSV                                               JOER
*                                                                  JOER
SET64    DS    0H                                                  JOER
         L      R11,SDWAXPAD      ADDRESS OF RECORDABLE XTNSION    JOER   45
         L      R11,SDWAXEME-SDWAPTRS(,R11)  to X64 Stuff          JOER
         USING  SDWARC4,R11                                        JOER
         MVC    WNEXT,SDWAPSW16+8                                  JOER
         NI    WNEXT+8,X'7F'               Wipe out high order     JOER
*                                                                  JOER
DOCSV    DS    0H                                                  JOER
         CLC   SDWAEC1,SDWAEC2             Did we bomb             JOER
         BNE   CKXMEM                                              JOER
         OI    FLAG+1,IBMSRV                                       JOER
CKXMEM   DS    0H                                                  JOER
*                                                                  JOER
        CLC   SDWANAME+4(4),=4X'00'                                JOER
        BNE   GETTCBRB                                             JOER
        L     R5,SDWARBAD                                          JOER
        USING RBBASIC,R5                                           JOER
        CLI   RBSTAB1,0             Q. is it a PRB                 JOER
        BNE   GETTCBRB                                             JOER
        CLC   RBCDE1,=3X'00'       any Cde there                   JOER
        BNE   GETTCBRB                                             JOER
*                                                                  JOER
         MODESET KEY=ZERO,MODE=SUP                                 JOER
*                                                                  JOER
         CLI   SDWATYPE,SDWATARR              Q. IS this an Arr    JOER
         BE    MVECODE                                             JOER
*                                                                  JOER
*                                                                  JOER
         TM    FLAG,XMEM                      Q. Space Switching   JOER
         BZ    NOSTOK                                              JOER
*
         LOCASCB ASID=SDWAPRIM                LOC prim to sced SRB JOER
*                                                                  JOER
         L     R1,ASCBASSB-ASCB(R1)                                JOER
         MVC   STOKEN,ASSBSTKN-ASSB(R1)      Get Stokrn            JOER
*                                                                  JOER
         ALESERV ADD,                        Put it on DU-AL       JOERX
               ACCESS=PUBLIC,                                      JOERX
               CHKEAX=NO,                                          JOERX
               AL=WORKUNIT,STOKEN=STOKEN,ALET=ALET                 JOER
*                                                                  JOER
*                                                                  JOER
NOSTOK    DS   0H                                                  JOER
          LAM  AR0,AR15,=16F'0'                                    JOER
          SYSSTATE ASCENV=AR                                       JOER
*                                                                  JOER
          TM    FLAG,XMEM                                          JOER
          BZ    MVECODE                                            JOER
          LA    R0,CSVQLEN                                         JOER
*                                                                  JOER
         LAM   AR11,AR11,ALET                                      JOER
*                                                                  JOER
         STORAGE OBTAIN,LENGTH=(0),ADDR=(R11),SP=0,ALET=ALET       JOER
*                                                                  JOER
         SAC   512                 ASC AR                          JOER
*                                                                  JOER
         LAM    AR4,AR4,ALET        Move Alet           4          JOER
         LR     R4,R11                                             JOER
         LA     R5,CSVQLEN                                         JOER
         LA     R6,CSVQ                                            JOER
         LR     R7,R5                                              JOER
*                                                                  JOER
         MVCL   R4,R6                                              JOER
*                                                                  JOER
         LAM   AR4,AR4,=F'0'                                       JOER
MVECODE  DS    0H                                                  JOER
         LA    R15,SRBCOMPCODE                                     JOER
         ST    R15,ASRBCOMPCODE                                    JOER
         LA    R15,SRBCODEADDR                                     JOER
         ST    R15,ASRBCODEADDR                                    JOER
         LA    R15,SRBRSNADDR                                      JOER
         ST    R15,ASRBRSNADDR                                     JOER
*                                                                  JOER
         LAM   AR1,AR1,=F'0'                                       JOER
         LA    R1,SRBLIST                                          JOER
         XC    0(72,R1),0(R1)                                      JOER
         MVI   0(R1),1                                             JOER
         LA    R7,WNEXT                                            JOER
         OI    SRBLIST_XFLAG2,SRBLIST_XSYNCH_YES                   JOER
*                                                                  JOER
         OI    SRBLIST_XFRRFLAG,SRBLIST_XSDWALOC31_YES             JOER
         CLI   SDWATYPE,SDWATARR     Q. Arr                        JOER
         BE    SETARR                                              JOER
         CPYA  AR6,AR11                                            JOER
         CPYA  AR7,AR11                                            JOER
         TM    FLAG,XMEM                                           JOER
         BO    MVEPRM                                              JOER
         LA    R6,FRRTN                                            JOER
         LA    R7,SRBW                                             JOER
         OI    SRBLIST_XFLAG1,SRBLIST_XENV_FULLXM                  JOER
         LA    R11,CSVQ           Entry point                      JOER
         B     PC_TO_SRB                                           JOER
MVEPRM   DS    0H                                                  JOER
         LA    R6,FRRTN-CSVQ(R11)                                  JOER
         LA    R7,SRBW-CSVQ(R11)                                   JOER
         USING SRBDSECT,R7                                         JOER
*                                                                  JOER
         SYSSTATE ASCENV=AR                                        JOER
*                                                                  JOER
         CPYA  AR7,AR6                                             JOER
*                                                                  JOER
         OI    SRBLIST_XFLAG1,SRBLIST_XENV_STOKEN                  JOER
         MVC   SRBLIST_XTARGETSTOKEN,STOKEN                        JOER
         B     PC_TO_SRB                                           JOER
SETARR   DS    0H                                                  JOER
         OI    SRBLIST_XFLAG1,SRBLIST_XENV_FULLXM                  JOER
         LA    R11,CSVQ                                            JOER
         LA    R6,FRRTN                                            JOER
         LA    R7,SRBW                                             JOER
*                                                                  JOER
PC_TO_SRB DS   0H                                                  JOER
         MVC   INST,WNEXT                                          JOER
         ST    R11,SRBLIST_XEPADDR                                 JOER
         ST    R6,SRBLIST_XFRRADDR                                 JOER
         ST    R7,SRBLIST_XPARM                                    JOER
         MVI   SRBLIST_XKEYVALUE,X'00'                             JOER
         MVC   60(4,R1),ASRBCOMPCODE                               JOER
         MVC   64(4,R1),ASRBCODEADDR                               JOER
         MVC   68(4,R1),ASRBRSNADDR                                JOER
         L     R14,16                                              JOER
         L     R14,772(R14,0)                                      JOER
         L     R14,408(R14,0)                                      JOER
         PC    0(R14)         pc to do csvquery to get info        JOER
*                                                                  JOER
         TM    FLAG,XMEM                                           JOER
         BZ    CKCODE                                              JOER
*                                                                  JOER
         LA    R4,SRBX                                             JOER
         LA    R5,SRBDLEN                                          JOER
         LR    R6,R7                                               JOER
         LR    R7,R5                                               JOER
         LAM   AR7,AR7,=F'0'                                       JOER
         MVCL  R4,R6                                               JOER
*                                                                  JOER
         SAC   0                                                   JOER
*                                                                  JOER
CKCODE   DS    0H                                                  JOER
         CLC   SRBCOMPCODE,=F'0'                                   JOER
         BNE   CKABEND                                             JOER
         CLC   SRBCODEADDR,=F'0'                                   JOER
         BE    CKR15                                               JOER
CKABEND  DS    0H                                                  JOER
         UNPK  SRBA+24(5),SRBCODEADDR+2(3)                         JOER
         TR    SRBA+24(3),TRTBL                                    JOER
         MVI   SRBA+27,C','                                        JOER
         MVI   SRBA+28,C' '                                        JOER
         UNPK  SRBA+42(5),SRBRSNADDR                               JOER
         TR    SRBA+42(3),TRTBL                                    JOER
         MVI   SRBA+45,C','                                        JOER
         MVI   SRBA+46,C' '                                        JOER
CKR15    DS    0H                                                  JOER
         LTR   R15,R15                                             JOER
         BNZ   IS4                                                 JOER
         OI    FLAG,CSVINFO                                        JOER
*                                                                  JOER
         TM    FLAG,XMEM                                           JOER
         BZ    MVEDATA                                             JOER
*                                                                  JOER
         LA    R0,CSVQLEN                                          JOER
*                                                                  JOER
         STORAGE RELEASE,LENGTH=(0),ADDR=(R11),ALET=ALET           JOER
*                                                                  JOER
         ALESERV DELETE,CHKEAX=NO,ALET=ALET                        JOER
*                                                                  JOER
*       Move pertiainet area                                       JOER
*                                                                  JOER
*                                                                  JOER
MVEDATA  DS    0H                                                  JOE
         LA    R7,SRBX                        Address data         JOER
         MVC   MODNAME,NAME                   Move module name     JOER
         LG    R14,MODEPA                     Move starting point  JOER
         STG   R14,MODSTART                                        JOER
         MVC   MODEND,MODSTART               Calcualte end         JOER
         LG    R14,MODEND                                          JOER
         AG    R14,MODLEN                                          JOER
         STG   R14,MODEND                    get the regsiters     JOER
         B     GETLINREG                                           JOER
IS4      DS    0H                                                  JOER
         CH    R15,=H'4'                                           JOER
         BNE   GETLINREG                                           JOER
         CH    R0,=H'4'                                            JOER
         BE    GETLINREG                                           JOER
         MVC    XTLST#(4),=F'16'                                   JOER
          LA    R15,CSVQ                                           JOER
          BASR  R14,R15             Go to CSVQ Routine             JOER
          CH    R15,=H'4'           Check for valid ret code       JOER
          BH    EXITPERC                                           JOER
          LG    R15,MODSTART                                       JOER
          LG    R0,MODEND                                          JOER
          AGR   R15,R0                                             JOER
          STG   R15,MODEND                                         JOER
*---------------------------------------------------------*        JOER
*     If Abend occurred in space switching stacking PC    *        JOER
*                                                         *        JOER
*     Routine the information about the user psw and regs *        JOER
*                                                         *        JOER
*    are thrn stored on the stsck                         *        JOER
*---------------------------------------------------------*        JOER
GETLINREG DS    0H                                                 JOER
          TM    FLAG+1,IBMSRV        SDWAEC1 AND EC2 DIFF          JOER
          BZ    GETTCBRB                                           JOER
          L     R8,SDWAXPAD        ADDRESS SDWA EXTENSION PTRS     JOER   44
          L     R8,SDWASRVP-SDWAPTRS(R8) ADDRESS OF RECORDABLE XTNSJOER   45
          TM    SDWAXFLG,SDWAINTF    Linkage stack entry           JOER
          BZ    GETTCBRB                                           JOER
          USING PSA,0                                              JOER
          L     R7,PSATOLD     get executing TCB                   JOER
          L     R7,TCBSTCB-TCB(,R7)   Get STCB                     JOER
          DROP  R7                                                 JOER
          USING STCB,R7                                            JOER
          L     R7,STCBLSDP                                        JOER
          DROP  R7                                                 JOER
          USING ENTRY,R7                                           JOER
TYPEOE    DS    0H                                                 JOER
          LA    R11,ENTRYLEN(R7)      Point to the bottom          JOER
          SH    R11,=AL2(LSENLNTH)    Point to the top             JOER
          CLI   0(R7),X'00'
          BNE   TESTIT
          OI    FLAG+1,NOSTR
          B     GETTCBRB
TESTIT    DS    0H
          TM    LSEDTYPE,LSEDTPCE                                  JOER
          BO    PRCFRM                                             JOER
          TM    LSEDTYPE,LSEDTHDR                                  JOER
          BNO   NEXTFRM                                            JOER
          L     R7,LSHDPREV-LSHD(R7)                               JOER
          B     TYPEOE                                             JOER
PRCFRM    DS    0H                                                 JOER
          DROP  R7                                                 JOER
          USING LSED,R11                                           JOER
          MVC   WNEXT+4(4),SDWANXT2                                JOER
          NI    WNEXT+4,X'7F'                                      JOER
          CLC   WNEXT+4(4),LSENPSW2+4                              JOER
          BNE   NEXTFRM                                            JOER
          ST    R11,STCKFRM                                        JOER
          B     GETTCBRB                                           JOER
NEXTFRM   DS    0H                                                 JOER
          SH    R7,=AL2(LSENLNTH)  POINT TO PREV                   JOER
          B     TYPEOE                                             JOER
GETTCBRB  DS    0H                                                 JOER
*                                                                  JOER
*         Get abend regs and prog name from tc/tb/cde chain        JOER
*         to determine starting and ending address                 JOER
*                                                                  JOER
*         R7 --> TCB                                               JOER
*         R6 -> CDE                                                JOER
*         R5 -> RB/XLST                                            JOER
*                                                                  JOER
         CLC   SDWANAME+4(4),=4X'00'     Is there an RB there      JOER
         BNE   GETTOLD                   No start from begining    JOER
         CLC   SDWARBAD,=4X'00'          Is there an RB there      JOER
         BE    GETTOLD                   no; start from the begin  JOER
         OI    FLAG,ISRBAD               Mark it as such           JOER
         L     R5,SDWARBAD               use rb from sdwa          JOER
         L     R7,PSATOLD                Get Current RB            JOER
         B     GETPRB                    get the rb                JOER
GETTOLD  DS    0H                                                  JOER
         L     R7,PSATOLD                Get CURRENT TCB           JOER
         USING TCB,R7                                              JOER
         L     R5,TCBRBP                 Get Current RB            JOER
         USING RBBASIC,R5                Address main sec          JOER
GETPRB   DS    0H                                                  JOER
         CR    R5,R7                                               JOER
         BNE   CKPRB                                               JOER
*        BNE   PRNTSDWA                                            JOER
         L     R5,TCBRBP                                           JOER
CKPRB    DS    0H                                                  JOER
         CLC   RBLINKB,RBABEND#+1                                  JOER
         BNE   CKPRB#                                              JOER
         ST    R5,RBREG                                            JOER
         TM    FLAG+1,PSWMATC                                      JOER
         BO    GETPNME                                             JOER
         B     PRNTSDWA                                            JOER
CKPRB#   DS    0H                                                  JOER
         TM    RBSTAB1,RBFTP                                       JOER
         BZ    ISPRB                                               JOER
NXTPRB   DS    0H                                                  JOER
         ICM   R5,B'0111',RBLINKB                                  JOER
         BNZ   GETPRB                                              JOER
         TM    FLAG,EPA                                            JOER
         BO    EXITLP                                              JOER
         CLC   MODSTART,=4X'00'                                    JOER
         BNE   EXITLP                                              JOER
         B     EXITPERC                                            JOER
ISPRB    DS    0H                                                  JOER
         CLC   SDWAEC1,RBOPSW             Q. This the abendend rb  JOER
         BNE   NXTPRB                                              JOER
         OI    FLAG+1,PSWMATC             Indcate found ab rb      JOER
         ST    R5,RBABEND#                store it                 JOER
         MVC   CDE#+1,RBCDE1              save the cde             JOER
         B     NXTPRB                     go look for nxt rb /regs JOER
*----------------------------------------------------------*       JOER
*         Once we got rb and regs get cde to figure length *       JOER
*         From XLST                                        *       JOER
*----------------------------------------------------------*       JOER
GETPNME  DS    0H                                                  JOER
         XR    R6,R6                                               JOER
         L     R6,CDE#                                             JOER
         LTR   R6,R6             Do we have a cde                  JOER
         BZ    EXITLP                                              JOER
         OI    FLAG,ISCDE                                          JOER
         USING CDENTRY,R6                                          JOER
*        CLC   SDWANAME+4(4),=4X'00'                               JOER
*        BNE   CKCSV                                               JOER
*        CLC   CDNAME,SDWANAME            Is this right            JOER
*        BNE   CKCSV                                               JOER
*                                                                  JOER
*    check if cdx extension exits if so rmode 64                   JOER
*                                                                  JOER
         MVC   MODNMECL,CDNAME         Move name                   JOER
         MVC   MODSH31,CDENTPT         Move Starting               JOER
         NI    MODSH31,X'7F'           Wipe out high order bit     JOER
         LR    R0,R6                                               JOER
GETMAJ   DS    0H                                                  JOER
         TM    CDATTR,CDMIN                                        JOER
         BZ    GETEX                                               JOER
         L     R6,CDXLMJP                                          JOER
         B     GETMAJ                                              JOER
GETEX    DS    0H                                                  JOER
         L     R11,CDXLMJP                                         JOER
         USING XTLST,R11                                           JOER
         L     R0,XTLMSBLA                 Get Length              JOER
         N     R0,=X'7FFFFFFF'             Wipe out high order     JOER
         A     R0,MODSH31
         ST    R0,MODEN31
*        LR    R15,R6                                              JOER
*        USING CDE64,R15                                           JOER
*        TM    CDATTRB,CDCDEX       Does a cde extension exist     JOER
*        BZ    NOEX                                                JOER
*        LR    R0,R6                Hold that spot                 JOER
*        L     R6,CDECDX                                           JOER
*        DROP  R6                                                  JOER
*        USING CDX,R6                                              JOER
*        LG    R15,CDXEntpt64                                      JOER
*        DROP  R6                                                  JOER
*        LR    R6,R0                                               JOER
*        USING CDENTRY,R6                                          JOER
*OEX     DS    0H                                                  JOER
*        MVC   MODABEND,CDNAME                                     JOER
*        TM    FLAG,ISCDE                                          JOER
*        B     EXITLP                                              JOER
*KCSV    DS    0H                                                  JOER
*        CLC   CDNAME,MODNAME                                      JOER
*        BNE   CKPARM                                              JOER
*        MVC   MODABEND,CDNAME                                     JOER
*        OI    FLAG,ISCDE                                          JOER
*        B     EXITLP                                              JOER
*KPARM   DS    0H                                                  JOER
*        TM    FLAG,XMEM               Are We in XMEM Mode         JOER
*        BZ    EXITPERC                                            JOER
*        MVC   HOMENAME,CDNAME        Set Home Name                JOER
*        MVC   PRIMNAME,MODNAME       Set Primary name             JOER
*        MVC   EPABEND,CDENTPT                                     JOER
*        MVC   ENDABEND,MODEND                                     JOER
EXITLP   DS    0H                                                  JOER
*                                                                  JOER
*   Get Sarting and ending address        CDE was found            JOER
*                                                                  JOER
*        TM    FLAG,XMEM                                           JOER
*        BZ    SETCDE                                              JOER
*        MVC   MODSTHM,CDENTPT                                     JOER
*        NI    MODSTHM,X'7F'              Wipe out high order bit  JOER
*        B     CKMAJ
*ETCDE   DS    0H                                                  JOER
*        MVC   EPABEND+4,CDENTPT
*KMAJ    DS    0H
*                                                                  JOER
*        TM    CDATTR,CDMIN               Major or Minor CDE       JOER
*        BZ    GETEX                                               JOER
*        L     R6,CDXLMJP                 Get Extension            JOER
*        B     CKMAJ
*ETEX    DS    0H                                                  JOER
*        L     R5,CDXLMJP                                          JOER
*        DROP  R5                                                  JOER
*        TM    FLAG,XMEM
*        BZ    SETEND
*        L     R15,EPABEND+4               Start Address of mod    JOER
*        AR    R15,R0                                              JOER
*        ST    R15,ENDABEND                                        JOER
*ETEND   DS    0H
*        L     R15,EPABEND+4               Start Address of mod    JOER
*        AR    R15,R0                                              JOER
*        ST    R15,MODEND                                          JOER
AFTCDE   DS    0H                                                  JOER
         TM    FLAG,IS64                                           JOER
         BZ    CKRANGR                                             JOER
         L     R5,RBABEND#                                         JOER
         LR    R6,R5                                               JOER
         SH    R5,=H'64'                  Point to prefix          JOER
         USING RBPRFX,R5                                           JOER
         L     R11,RBXSB                                           JOER
         USING XSB,R11                                             JOER
         LA    R15,XSBG64H                                         JOER
         LA    R14,SIXFOUR                                         JOER
         LA    R2,RBGRS0                                           JOER
         LA    R0,16                                               JOER
SFLOOP   DS    0H                                                  JOER
         MVC   0(4,R14),0(R2)                                      JOER
         MVC   4(4,R14),0(R15)                                     JOER
         LA    R15,4(,R15)                                         JOER
         LA    R2,4(,R2)                                           JOER
         LA    R14,8(,R14)                                         JOER
         BCT   R0,SFLOOP                                           JOER
*                                                                  JOER
*     Look if abend address is in module range                     JOER
*                                                                  JOER
CKRANGR  DS    0H                                                  JOER
         MVC   WNEXT+4(4),SDWANXT1                                 JOER
         NI    WNEXT+4,X'7F'                                       JOER
         CLC   MODST31,WNEXT+4                    No;              JOER
         BH    NOMOD                              get abending RB  JOER
         CLC   MODEN31,WNEXT+4                                     JOER
         BL    NOMOD                              Regular print    JOER
         B     EXITPERC                                            JOER
*                                                                  JOER
*     try to get abending RB might of percolated                   JOER
*                                                                  JOER
NOMOD    DS    0H                                                  JOER
         OI    FLAG,ABENDMOD           Indcate abend is not here   JOER
         CLC   SDWANAME+4(4),=F'0'                                 JOER
*        BNE   SAVERB                                              JOER
SAVERB   DS    0H                                                  JOER
         L     R5,SDWARBAD                                         JOER
         ST    R5,ABENDRB                                          JOER
PRNTSDWA DS    0H                                                  JOER
*        *---------------------------------------*                 JOER   68
*        *     WTO XMEM MESS                     *                 JOER   69
*        *---------------------------------------*                 JOER   70
         TM    FLAG,XMEM                                           JOER
         BZ    NOX                                                 JOER
*
*        SAC   0
*
*        *---------------------------------------*                 JOER   68
*        *     WTO XMEM CODE                     *                 JOER   69
*        *---------------------------------------*                 JOER   70
         MVC   HOMEPROG,HOMENAME
         MVC   PRIMPROG,PRIMNAME
         MVC   WTOLINE(LXMEMESS),XMEMESS COPY MESSAGE MODEL TO WORKAREA   71
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST      72
         MVC   FORMAT(2),ASID#           SDWA ADDRESS TO FORMAT AREA      73
         LA    R15,FORMAT                ..ADDRESS DISPHEX SOURCE         74
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST            75
         LA    R15,2                       ..LENGTH OF DISPHEX SOURCE     76
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST          77
         LA    R15,WTOLINE+(ASID-XMEMESS)  ..ADDRESS DISPHEX TARGET       78
         ST    R15,8(R1)                       ..TO DISPHEX PARMLIST      79
         LA    R15,L'ASID                ..LENGTH DISPHEX TARGET          80
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST            81
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE           82
         BAS   R14,WTORTN                ISSUE WTO                        83
NOX      DS    0H                                                  JOER
*        *---------------------------------------*                 JOER   68
*        *     WTO SDWA ADDRESS                  *                 JOER   69
*        *---------------------------------------*                 JOER   70
         MVC   WTOLINE(LSDWMSG1),SDWMSG1 COPY MESSAGE MODEL TO WORKAREA   71
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST      72
         ST    R3,FORMAT                 SDWA ADDRESS TO FORMAT AREA      73
         LA    R15,FORMAT                ..ADDRESS DISPHEX SOURCE         74
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST            75
         LA    R15,4                       ..LENGTH OF DISPHEX SOURCE     76
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST          77
         LA    R15,WTOLINE+(SDWAADDR-SDWMSG1)  ..ADDRESS DISPHEX TARGET   78
         ST    R15,8(R1)                       ..TO DISPHEX PARMLIST      79
         LA    R15,L'SDWAADDR            ..LENGTH DISPHEX TARGET          80
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST            81
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE           82
         BAS   R14,WTORTN                ISSUE WTO                        83
*        *---------------------------------------*                        84
*        *     WTO ABEND CODE                    *                        85
*        *---------------------------------------*                        86
         MVC   WTOLINE(LARRMSG1),ARRMSG1 COPY MESSAGE MODEL TO WORKAREA   87
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST      88
         LA    R15,SDWAABCC+1            ..SDWA ABEND CODE ADDRESS        89
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST            90
         LA    R15,L'SDWAABCC-1            ..LENGTH OF DISPHEX SOURCE     91
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST          92
         LA    R15,WTOLINE+(ABNDCODE-ARRMSG1) ..ADDRESS DISPHEX TARGET    93
         ST    R15,8(R1)                      ..TO DISPHEX PARMLIST       94
         LA    R15,L'ABNDCODE            ..LENGTH DISPHEX TARGET          95
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST            96
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE           97
         MVI   WTOLINE+(ABNDCODE-ARRMSG1)+3,X'40'   SPACE TO LAST BYTE    98
         BAS   R14,WTORTN                  ISSUE WTO                      99
*        *---------------------------------------*                 JOER   84
*        *     WTO REASON CODE                   *                 JOER   85
*        *---------------------------------------*                 JOER   86
         UNPK  REACODE(5),SDWACRC+2(3)                             JOER
         TR    REACODE(4),TRTABLE                                  JOER
         MVI   REACODE+4,X'40'                                     JOER
         MVC   WTOLINE(LARRMSG2),ARRMSG2 COPY MESSAGE MODEL TO WORKJOER   87
         BAS   R14,WTORTN                  ISSUE WTO               JOER   99
*        *---------------------------------------*                       100
*        *     WTO MODULE NAME AND ENTRY POINT   *                       101
*        *---------------------------------------*                       102
         MVC   WTOLINE(LDMODMSG),DMODMSG COPY MESSAGE MODEL TO WORKAREA  103
CKMOD    DS    0H
         CLI   MODNAME,X'00'
         BE    CKEST
         MVC   WTOLINE+(DMOD1-DMODMSG)(L'SDWANAME),MODNAME               111
         B     AESTPARM                  FORMAT LOAD POINT               107
CKEST    DS    0H
         CLI   ESTMOD,X'00'              IS MODULE NAME IN PARMLIST?     104
         BE    NESTPARM                  NO; GET MODULE NAME FROM SDWA   105
         MVC   WTOLINE+(DMOD1-DMODMSG)(L'ESTMOD),ESTMOD                  106
         B     AESTPARM                  FORMAT LOAD POINT               107
NESTPARM DS    0H                                                        108
         CLI   SDWANAME,X'00'            IS MODULE NAME IN SDWA ?        109
         BE    CKMOD                     NO; DO NOT COPY FROM SDWA       110
         MVC   WTOLINE+(DMOD1-DMODMSG)(L'SDWANAME),SDWANAME              111
         B     AESTPARM
AESTPARM DS    0H                                                        112
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST     113
         LA    R15,MODSTART+4            ADDRESS OF SDWA ENTRY POINT     121
         B     AESTLOAD                  FORMAT ENTRY POINT              117
         ICM   R15,15,ESTLOAD            ENTRY POINT FROM PARMLIST       114
         BZ    NESTLOAD                  =0; GET FROM SDWA               115
         LA    R15,ESTLOAD               ADDRESS OF ENTRY POINT          116
         B     AESTLOAD                  FORMAT ENTRY POINT              117
NESTLOAD DS    0H                                                        118
         ICM   R15,15,SDWAEPA            MODULE ENTRY POINT FROM SDWA    119
         BZ    CKMODST                   =0; DO NOT FORMAT ENTRY PT      120
         LA    R15,SDWAEPA               ADDRESS OF SDWA ENTRY POINT     121
         B     AESTLOAD
CKMODST  DS    0H
*        TM    FLAG,IS64                                           JOER
*        BZ    TRST
*        LG    R15,MODSTART
         LA    R15,MODSTART+4            ADDRESS OF SDWA ENTRY POINT     121
AESTLOAD DS    0H                                                        122
         ST    R15,0(R1)                 SAVE ENTRY PT IN DISPHEX PARMS  123
         LA    R15,4                     ..LENGTH OF DISPHEX SOURCE      124
         ST    R15,4(R1)                 ..TO DISPHEX PARMLIST           125
         LA    R15,WTOLINE+(DMODLOD-DMODMSG) ..ADDRESS DISPHEX TARGET    126
         ST    R15,8(R1)                      ..TO DISPHEX PARMLIST      127
         LA    R15,L'DMODLOD             ..LENGTH DISPHEX TARGET         128
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST           129
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE          130
NSDWLOAD DS    0H                                                        131
         BAS   R14,WTORTN                ISSUE WTO                       132
*        *---------------------------------------*                       133
*        *     WTO PSW AND ABEND OFFSET          *                       134
*        *---------------------------------------*                       135
         MVI   WTOLINE,X'40'
         MVC   WTOLINE+1(L'WTOLINE-1),WTOLINE
         MVI   DPSWMSG,X'40'
         MVC   DPSWMSG+1(LDPSWMSG-1),DPSWMSG
         MVC   DPSWMSG,=AL2(LDPSWMSG-2)
         MVC   PSWLIT,=C'PSW at the time of Error: '
         TM    FLAG,IS64
         BZ    OFF_31
         MVC   OFFLIT64,=C' Offset: '
         B     SETBL
OFF_31   DS    0H
         MVC   OFFLIT,=C' Offset: '
SETBL    DS    0H
         MVC   WTOLINE(LDPSWMSG),DPSWMSG COPY MESSAGE MODEL TO WORKAREA  136
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST     137
         TM    FLAG,IS64
         BZ    CK31PSW
         L     R11,SDWAXPAD
         USING SDWAPTRS,R11
         L     R11,SDWAXEME
         DROP  R11
         USING SDWARC4,R11
         LA    R15,SDWAPSW16
         ST    R15,0(R1)
         LA    R15,L'SDWAPSW16
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST         141
         B     STFRMT
CK31PSW  DS    0H
         LA    R15,SDWAEC1               ..SDWA PSW                      138
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST           139
         LA    R15,8                       ..LENGTH OF DISPHEX SOURCE    140
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST         141
STFRMT   DS    0H
         LA    R15,FORMAT                      ..ADDRESS DISPHEX TARGET  142
         ST    R15,8(R1)                       ..TO DISPHEX PARMLIST     143
         TM    FLAG,IS64
         BZ    SET16
         LA    R15,32                    ..LENGTH DISPHEX TARGET         144
         B     SETLAST
SET16    DS    0H
         LA    R15,16                    ..LENGTH DISPHEX TARGET         144
SETLAST  DS    0H
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST           145
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE          146
*                                        COPY 1ST WORD PSW TO WTO        147
         MVC   WTOLINE+(DPSW1-DPSWMSG)(L'DPSW1),FORMAT                   148
*                                          COPY 2ST WORD PSW TO WTO      149
         MVC   WTOLINE+(DPSW2-DPSWMSG)(L'DPSW2),FORMAT+L'DPSW1           150
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST     151
         TM    FLAG,IS64
         BZ    SETDISP
         LA    R15,SDWAPSW16+8       2ND WORD OF PSW                     152
         MVC   WTOLINE+(DPSW3-DPSWMSG)(L'DPSW3),FORMAT+L'DPSW1+L'DPSW2   148
*                                          COPY 2ST WORD PSW TO WTO      149
         MVC   WTOLINE+(DPSW4-DPSWMSG)(L'DPSW2),FORMAT+L'DPSW1*3         150
         LG    R15,0(R15)
         LG    R14,EPABEND
         B     SUB15
SETDISP  DS    0H
         L     R15,SDWAEC1+4         2ND WORD OF PSW                     152
CLEAR10MD DS   0H
         LA    R15,0(R15)                CLEAR AMODE BIT                 153
SETEPA   DS    0H
         L     R14,EPABEND+4
SUB15    DS    0H
         TM    FLAG,IS64
         BZ    DOIT31
         SGR   R15,R14
         B     SAVEFORM
DOIT31   DS    0H
         SR    R15,R14                   SUBRTRACT TO FIND DISPLAC       160
         BNH   WPSWMSG                   LE 0; OFFSET IS INVALID         161
*ETFM    DS    0H
SAVEFORM DS    0H
         ST    R15,FORMAT                SAVE OFFSET                     162
         LA    R15,FORMAT                ADDRESS OF SAVSD OFFSET         163
         ST    R15,0(R1)                 OFFSET TO DISPHEX PARMLIST      164
         LA    R15,4                     ..LENGTH OF DISPHEX SOURCE      165
         ST    R15,4(R1)                 ..TO DISPHEX PARMLIST           166
         TM    FLAG,IS64
         BZ    OFF31
         LA    R15,WTOLINE+(OFFSET64-DPSWMSG) ..ADDRESS DISPHEX TARGET   167
         B     SETOFF
OFF31    DS    0H
         LA    R15,WTOLINE+(OFFSET-DPSWMSG) ..ADDRESS DISPHEX TARGET     167
SETOFF   DS    0H
         ST    R15,8(R1)                    ..TO DISPHEX PARMLIST        168
         LA    R15,L'OFFSET              ..LENGTH DISPHEX TARGET         169
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST           170
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE          171
WPSWMSG  DS    0H                                                        172
         BAS   R14,WTORTN                ISSUE WTO                       173
*        *---------------------------------------*                       174
*        *     ISSUE WTOS WITH ABEND GENERAL REGS*                       175
*        *---------------------------------------*                       176
         TM    FLAG,IS64
         BZ    NO64
         L     R11,SDWAXPAD
         USING SDWAPTRS,R11
         L     R11,SDWAXEME
         DROP  R11
         USING SDWARC4,R11
         LA    R15,SIXFOUR1              Populate this
         LA    R14,SDWATX_PITDB_G64
         LA    R0,16
SXLOOP   DS    0H
         MVC   0(8,R15),0(R14)
         LA    R15,8(,R15)
         LA    R14,8(,R14)
         BCT   R0,SXLOOP
*
NO64     DS    0H
         MVC   WTOLINE(LGENREGS),GENREGS ..ISSUE REGISTER                177
         BAS   R14,WTORTN                ..MESSAGE                       178
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST     179
         MVI   MREG1,X'40'
         MVC   MREG1+1(LMREG1-1),MREG1
         MVC   R0LIT,=C'    R0:'
         TM    FLAG,IS64
         BZ    SETR1
         MVC   R1LIT64,=C'    R1:'
         B     DOR2
SETR1    DS    0H
         MVC   R1LIT,=C'    R1:'
         MVC   R2LIT,=C'    R2:'
         MVC   R3LIT,=C'    R3:'
DOR2     DS    0H
         MVC   MREG1,=AL2(LMREG1-2)
         MVI   MREG2,X'40'
         MVC   MREG2+1(LMREG2-1),MREG2
         TM    FLAG,IS64 '
         BZ    SETR4
         MVC   R4LIT,=C'    R2:'
         MVC   DR3LIT64,=C'    R3:'
         B     DOR4
SETR4    DS    0H
         MVC   R4LIT,=C'    R4:'
         MVC   R5LIT,=C'    R5:'
         MVC   R6LIT,=C'    R6:'
         MVC   R7LIT,=C'    R7:'
DOR4     DS    0H
         MVC   MREG2,=AL2(LMREG2-2)
         MVI   MREG3,X'40'
         MVC   MREG3+1(LMREG3-1),MREG3
         TM    FLAG,IS64
         BZ    SETR8
         MVC   R8LIT,=C'    R4:'
         MVC   R5LIT64,=C'    R5:'
         B     DOR6
SETR8    DS    0H
         MVC   R8LIT,=C'    R8:'
         MVC   R9LIT,=C'    R9:'
         MVC   R10LIT,=C'   R10:'
         MVC   R11LIT,=C'   R11:'
DOR6     DS    0H
         MVC   MREG3,=AL2(LMREG3-2)
         MVI   MREG4,X'40'
         MVC   MREG4+1(LMREG4-1),MREG4
         MVC   MREG4(2),=AL2(LMREG4-2)
         TM    FLAG,IS64
         BZ    SETR12
         MVC   R12LIT,=C'    R6:'
         MVC   R7LIT64,=C'    R7:'
         B     DOR8
SETR12   DS    0H
         MVC   R12LIT,=C'   R12:'
         MVC   R13LIT,=C'   R13:'
         MVC   R14LIT,=C'   R14:'
         MVC   R15LIT,=C'   R15:'
         B     DOACCESS
DOR8     DS    0H
         MVI   MREG5,X'40'
         MVC   MREG5+1(LMREG5-1),MREG5
         MVC   MREG4,=AL2(LMREG4-2)
         MVC   R8LIT64,=C'    R8:'
         MVC   R9LIT64,=C'    R9:'
         MVC   MREG5,=AL2(LMREG5-2)
*
         MVI   MREG6,X'40'
         MVC   MREG6+1(LMREG6-1),MREG6
         MVC   R10LIT64,=C'   R10:'
         MVC   R11LIT64,=C'   R11:'
         MVC   MREG6,=AL2(LMREG6-2)
*
         MVI   MREG7,X'40'
         MVC   MREG7+1(LMREG7-1),MREG7
         MVC   R12LIT64,=C'   R12:'
         MVC   R13LIT64,=C'   R13:'
         MVC   MREG7,=AL2(LMREG7-2)
*
         MVI   MREG8,X'40'
         MVC   MREG8+1(LMREG8-1),MREG8
         MVC   R14LIT64,=C'   R14:'
         MVC   R15LIT64,=C'   R15:'
         MVC   MREG8,=AL2(LMREG8-2)
         TM    FLAG,IS64
         BZ    CKRBRG
         LA    R15,SIXFOUR1
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST           181
         LA    R15,128
         ST    R15,4(R1)                 ..TO DISPHEX PARMLIST           181
         B     STFRMTX
CKRBRG   DS    0H
         LA    R15,ESTRUB+2              ..ADDRESS OF PSW REGISTERS      180
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST           181
         LA    R15,L'SDWASRSV              ..LENGTH OF DISPHEX SOURCE    182
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST         183
STFRMTX  DS    0H
         LA    R15,FORMAT                    ..ADDRESS DISPHEX TARGET    184
         ST    R15,8(R1)                     ..TO DISPHEX PARMLIST       185
         TM    FLAG,IS64
         BZ    TRTYLEN
         LA    R15,L'SIXFOUR1*2          ..LENGTH DISPHEX TARGET         186
         B     LASTPARM
TRTYLEN  DS    0H
         LA    R15,L'SDWASRSV*2          ..LENGTH DISPHEX TARGET         186
LASTPARM DS    0H
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST           187
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE          188
         MVC   WTOLINE(LMREG1),MREG1                       ..ISSUE       189
         TM    FLAG,IS64
         BZ    FRACC1
         MVC   WTOLINE+(DREG0-MREG1)(L'DREG0),FORMAT+0     ..WTO         190
         MVI   WTOLINE+(DREG0-MREG1+8),C'_'         ..WTO                190
         MVC   WTOLINE+(DREG0-MREG1+9)(L'DREG0),FORMAT+8     ..WTO       190
         MVC   WTOLINE+(DREG164-MREG1)(L'DREG0),FORMAT+16     ..WTO      190
         MVI   WTOLINE+(DREG164-MREG1+8),C'_'         ..WTO              190
         MVC   WTOLINE+(DREG164-MREG1+9)(L'DREG1),FORMAT+24     ..WTO    190
         B     SETTWO
FRACC1   DS    0H
         MVC   WTOLINE+(DREG0-MREG1)(L'DREG0),FORMAT+0*8   ..WTO         190
         MVC   WTOLINE+(DREG1-MREG1)(L'DREG1),FORMAT+1*8   ..WITH        191
         MVC   WTOLINE+(DREG2-MREG1)(L'DREG2),FORMAT+2*8   ..FOUR        192
         MVC   WTOLINE+(DREG3-MREG1)(L'DREG3),FORMAT+3*8   ..REGISTERS   193
SETTWO   DS    0H
         BAS   R14,WTORTN                                  ..FROM FMT    194
         MVC   WTOLINE(LMREG2),MREG2                     ..ISSUE         195
         TM    FLAG,IS64
         BZ    FRACC2
         MVC   WTOLINE+(DREG264-MREG2)(L'DREG4),FORMAT+32   ..WTO        196
         MVI   WTOLINE+(8+(DREG264-MREG2)),C'_'                          196
         MVC   WTOLINE+(9+(DREG264-MREG2))(L'DREG4),FORMAT+40            196
         MVC   WTOLINE+(DREG364-MREG2)(L'DREG4),FORMAT+48   ..WTO        196
         MVI   WTOLINE+(8+(DREG364-MREG2)),C'_'                          196
         MVC   WTOLINE+(9+(DREG364-MREG2))(L'DREG4),FORMAT+56   ..WTO    196
         B     SET3
FRACC2   DS    0H
         MVC   WTOLINE+(DREG4-MREG2)(L'DREG4),FORMAT+4*8 ..WTO           196
         MVC   WTOLINE+(DREG5-MREG2)(L'DREG5),FORMAT+5*8 ..WITH          197
         MVC   WTOLINE+(DREG6-MREG2)(L'DREG6),FORMAT+6*8 ..FOUR          198
         MVC   WTOLINE+(DREG7-MREG2)(L'DREG7),FORMAT+7*8 ..REGISTERS     199
SET3     DS    0H
         BAS   R14,WTORTN                                ..FROM FORMAT   200
         MVC   WTOLINE(LMREG3),MREG3                        ..ISSUE      201
         TM    FLAG,IS64
         BZ    FRACC3
         MVC   WTOLINE+(DREG464-MREG3)(L'DREG8),FORMAT+64     ..WTO      202
         MVI   WTOLINE+(8+(DREG464-MREG3)),C'_'                          202
         MVC   WTOLINE+(9+(DREG464-MREG3))(L'DREG8),FORMAT+72            202
         MVC   WTOLINE+(DREG564-MREG3)(L'DREG8),FORMAT+80     ..WITH     203
         MVI   WTOLINE+(8+(DREG564-MREG3)),C'_'                          202
         MVC   WTOLINE+(9+(DREG564-MREG3))(L'DREG8),FORMAT+88            202
         B     SET4
FRACC3   DS    0H
         MVC   WTOLINE+(DREG8-MREG3)(L'DREG8),FORMAT+8*8    ..WTO        202
         MVC   WTOLINE+(DREG9-MREG3)(L'DREG9),FORMAT+9*8    ..WITH       203
         MVC   WTOLINE+(DREG10-MREG3)(L'DREG10),FORMAT+10*8 ..FOUR       204
         MVC   WTOLINE+(DREG11-MREG3)(L'DREG11),FORMAT+11*8 ..REGISTERS  205
SET4     DS    0H
         BAS   R14,WTORTN                                   ..FROM FMT   206
         MVC   WTOLINE(LMREG4),MREG4                          ..ISSUE    207
         TM    FLAG,IS64
         BZ    FRACC4
         MVC   WTOLINE+(DREG664-MREG4)(L'DREG12),FORMAT+96     ..WTO     208
         MVI   WTOLINE+(8+(DREG664-MREG4)),C'_'                          208
         MVC   WTOLINE+(9+(DREG664-MREG4))(L'DREG12),FORMAT+104          208
         MVC   WTOLINE+(DREG764-MREG4)(L'DREG12),FORMAT+112    ..WITH    209
         MVI   WTOLINE+(8+(DREG764-MREG4)),C'_'                          209
         MVC   WTOLINE+(9+(DREG764-MREG4))(L'DREG12),FORMAT+120          209
         B     SET5
FRACC4   DS    0H
         MVC   WTOLINE+(DREG12-MREG4)(L'DREG12),FORMAT+12*8   ..WTO
         MVC   WTOLINE+(DREG13-MREG4)(L'DREG13),FORMAT+13*8   ..WITH
         MVC   WTOLINE+(DREG14-MREG4)(L'DREG14),FORMAT+14*8   ..FOUR
         MVC   WTOLINE+(DREG15-MREG4)(L'DREG15),FORMAT+15*8   ..REGS
SET5     DS    0H
         BAS   R14,WTORTN                                   ..FROM FMT   206
         TM    FLAG,IS64
         BZ    DOACCESS
*
         MVC   WTOLINE(LMREG5),MREG5                          ..ISSUE    207
         MVC   WTOLINE+(DREG864-MREG5)(L'DREG12),FORMAT+128    ..WTO     208
         MVI   WTOLINE+(8+(DREG864-MREG5)),C'_'                          208
         MVC   WTOLINE+(9+(DREG864-MREG5))(L'DREG12),FORMAT+136          208
         MVC   WTOLINE+(DREG964-MREG5)(L'DREG12),FORMAT+144    ..WTO     208
         MVI   WTOLINE+(8+(DREG964-MREG5)),C'_'                          208
         MVC   WTOLINE+(9+(DREG964-MREG5))(L'DREG12),FORMAT+152          208
         BAS   R14,WTORTN                                     ..FROMFMT  212
*
         MVC   WTOLINE(LMREG6),MREG6                          ..ISSUE    207
         MVC   WTOLINE+(DREG1064-MREG6)(L'DREG12),FORMAT+160    ..WTO    208
         MVI   WTOLINE+(8+(DREG1064-MREG6)),C'_'                         208
         MVC   WTOLINE+(9+(DREG1064-MREG6))(L'DREG12),FORMAT+168         208
         MVC   WTOLINE+(DREG1164-MREG6)(L'DREG12),FORMAT+176             209
         MVI   WTOLINE+(8+(DREG1164-MREG6)),C'_'                         209
         MVC   WTOLINE+(9+(DREG1164-MREG6))(L'DREG12),FORMAT+184         209
         BAS   R14,WTORTN                                     ..FROMFMT  212
*
         MVC   WTOLINE(LMREG7),MREG7                          ..ISSUE    207
         MVC   WTOLINE+(DREG1264-MREG7)(L'DREG12),FORMAT+192    ..WTO    208
         MVI   WTOLINE+(8+(DREG1264-MREG7)),C'_'                         208
         MVC   WTOLINE+(9+(DREG1264-MREG7))(L'DREG12),FORMAT+200         208
         MVC   WTOLINE+(DREG1364-MREG7)(L'DREG12),FORMAT+208   ..WITH    209
         MVI   WTOLINE+(8+(DREG1364-MREG7)),C'_'                         209
         MVC   WTOLINE+(9+(DREG1364-MREG7))(L'DREG12),FORMAT+216         209
         BAS   R14,WTORTN                                     ..FROMFMT  212
*
         MVC   WTOLINE(LMREG8),MREG8                          ..ISSUE    207
         MVC   WTOLINE+(DREG1464-MREG8)(L'DREG12),FORMAT+224    ..WTO    208
         MVI   WTOLINE+(8+(DREG1464-MREG8)),C'_'                         208
         MVC   WTOLINE+(9+(DREG1464-MREG8))(L'DREG12),FORMAT+232         208
         MVC   WTOLINE+(DREG1564-MREG8)(L'DREG12),FORMAT+240   ..WITH    209
         MVI   WTOLINE+(8+(DREG1564-MREG8)),C'_'                         209
         MVC   WTOLINE+(9+(DREG1564-MREG8))(L'DREG12),FORMAT+248         209
         BAS   R14,WTORTN                                     ..FROMFMT  212
*        *---------------------------------------*                       213
*        *     ISSUE WTOS WITH ABEND ACCESS REGS *                       214
*        *---------------------------------------*                       215
DOACCESS DS    0H
         MVC   WTOLINE(LACCREGS),ACCREGS ..ISSUE REGISTER                216
         BAS   R14,WTORTN                ..MESSAGE                       217
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST     218
         LA    R15,SDWAARER              ..ADDRESS OF PSW REGISTERS      219
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST           220
         LA    R15,L'SDWAARER              ..LENGTH OF DISPHEX SOURCE    221
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST         222
         LA    R15,FORMAT                ..ADDRESS DISPHEX TARGET        223
         ST    R15,8(R1)                 ..TO DISPHEX PARMLIST           224
         LA    R15,L'SDWAARER*2            ..LENGTH DISPHEX TARGET       225
         ST    R15,12(R1)                  ..TO DISPHEX PARMLIST         226
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE          227
         MVC   WTOLINE(LMAR1),MAR1                         ..ISSUE       228
         MVC   WTOLINE+(DAR0-MAR1)(L'DAR0),FORMAT+0*8   ..WTO            229
         MVC   WTOLINE+(DAR1-MAR1)(L'DAR1),FORMAT+1*8   ..WITH           230
         MVC   WTOLINE+(DAR2-MAR1)(L'DAR2),FORMAT+2*8   ..FOUR           231
         MVC   WTOLINE+(DAR3-MAR1)(L'DAR3),FORMAT+3*8   ..REGISTERS      232
         BAS   R14,WTORTN                               ..FROM FMT       233
         MVC   WTOLINE(LMAR2),MAR2                    ..ISSUE            234
         MVC   WTOLINE+(DAR4-MAR2)(L'DAR4),FORMAT+4*8 ..WTO              235
         MVC   WTOLINE+(DAR5-MAR2)(L'DAR5),FORMAT+5*8 ..WITH             236
         MVC   WTOLINE+(DAR6-MAR2)(L'DAR6),FORMAT+6*8 ..FOUR             237
         MVC   WTOLINE+(DAR7-MAR2)(L'DAR7),FORMAT+7*8 ..REGISTERS        238
         BAS   R14,WTORTN                             ..FROM FORMAT      239
         MVC   WTOLINE(LMAR3),MAR3                       ..ISSUE         240
         MVC   WTOLINE+(DAR8-MAR3)(L'DAR8),FORMAT+8*8    ..WTO           241
         MVC   WTOLINE+(DAR9-MAR3)(L'DAR9),FORMAT+9*8    ..WITH          242
         MVC   WTOLINE+(DAR10-MAR3)(L'DAR10),FORMAT+10*8 ..FOUR          243
         MVC   WTOLINE+(DAR11-MAR3)(L'DAR11),FORMAT+11*8 ..REGISTERS     244
         BAS   R14,WTORTN                                ..FROM FMT      245
         MVC   WTOLINE(LMAR4),MAR4                           ..ISSUE     246
         MVC   WTOLINE+(DAR12-MAR4)(L'DAR12),FORMAT+12*8  ..WTO          247
         MVC   WTOLINE+(DAR13-MAR4)(L'DAR13),FORMAT+13*8  ..WITH         248
         MVC   WTOLINE+(DAR14-MAR4)(L'DAR14),FORMAT+14*8  ..FOUR         249
         MVC   WTOLINE+(DAR15-MAR4)(L'DAR15),FORMAT+15*8  ..REGS         250
         BAS   R14,WTORTN                                 ..FROM FMT     251
*        *---------------------------------------*                       252
*        *     INVOKE USER ROUTINE               *                       253
*        *---------------------------------------*                       254
         ICM   R15,15,ESTRTN         USER ROUTINE ADDRESS                255
         BZ    NUSERTN               =0; NO ROUTINE SPECIFIED            256
         EREG  R1,R1                 MAKE SURE SDWA ADDRESS IS IN R1     257
         BASSM R14,R15               INVOKE THE ROUTINE                  258
         LTR   R15,R15               RC=0 ?                              259
         BNZ   EXITPERC              NO; PERCOLATE                       260
NUSERTN  DS    0H                                                        261
*        *---------------------------------------*                       262
*        *     RETRY OR PEROCLATE                *                       263
*        *---------------------------------------*                       264
         ICM   R4,15,ESTRETRY        RETRY ROUTINE ADDRESS               265
         BNZ   EXITRTRY              ë=0; ROUTINE ADDRESS SUPPLIED       266
         B     EXITPERC              NO ROUTINE ADDRESS; PERCOLATE       267
*---------------------------------------------------------------------*  268
*        EXIT ROUTINES                                                *  269
*---------------------------------------------------------------------*  270
*        *---------------------------------------*                       271
*        *     PERCOLATE THE ABEND               *                       272
*        *---------------------------------------*                       273
EXITPERC DS    0H                                                        274
         MVC   WTOLINE(LNRETMSG),NRETMSG  ..OUTPUT PEROCLATE             275
         BAS   R14,WTORTN                 ..MESSAGE                      276
         EREG  R1,R1                   SDWA ADDRESS TO R1                277
         SETRP RC=0                    SET SDWA TO PERCOLATE             278
         B     EXIT                                                      279
*        *---------------------------------------*                       280
*        *     INVOKE THE RETRY ROUTINE          *                       281
*        *---------------------------------------*                       282
EXITRTRY DS    0H                                                        283
         MVC   WTOLINE(LSDRETRY),SDRETRY COPY MESSAGE MODEL TO WORKAREA  284
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST     285
         ST    R4,FORMAT                 RETRY ADDRESS TO FORMAT AREA    286
         LA    R15,FORMAT                ..ADDRESS DISPHEX SOURCE        287
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST           288
         LA    R15,4                       ..LENGTH OF DISPHEX SOURCE    289
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST         290
         LA    R15,WTOLINE+(SDRETADR-SDRETRY)  ..ADDRESS DISPHEX TARGET  291
         ST    R15,8(R1)                       ..TO DISPHEX PARMLIST     292
         LA    R15,L'SDRETADR            ..LENGTH DISPHEX TARGET         293
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST           294
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE          295
         BAS   R14,WTORTN                ISSUE WTO                       296
*        *---------------------------------------*                       297
*        *     IF THIS IS ARR, BUILD RUB         *                       298
*        *---------------------------------------*                       299
         CLI   SDWATYPE,SDWATARR       IS THIS AN ARR ?                  300
         BNE   NOTARRTN                NO; DO NOT BUILD RUB              301
         MVC   ESTRUB(2),=X'FFFF'      RESTORE ALL REGISTERS             302
         MVC   ESTRUB+2(L'SDWAGRSV),SDWAGRSV    MOVE REGISTER TO RUB     303
         LA    R5,ESTRUB                        ADDRESS OF RUB           304
         EREG  R1,R1                   SDWA ADDRESS TO R1                305
         SETRP RC=4,RETREGS=YES,RETADDR=(R4),FRESDWA=YES,DUMP=NO,      X 306
               RUB=(R5)                                                  307
         B     EXIT                                                      308
NOTARRTN DS    0H                                                        309
         EREG  R1,R1                   SDWA ADDRESS TO R1                310
         SETRP RC=4,RETREGS=YES,RETADDR=(R4),FRESDWA=YES,DUMP=NO         311
         B     EXIT                                                      312
*---------------------------------------------------------------------*  313
*        DISPHEX SUBROUTINE                                           *  314
* FUNCTION:                                                           *  315
*   TRANSLATE BINARY NUMBER (HEX) NUMBER TO CHAR10CTER NUMBER.        *  316
*   THIS ROUTINE WILL TRUNCATE INPUT OR PAD OUTPUT SO THAT OUTPUT     *  317
*   IS TWICE INPUT SIZE.  THE MAXIMUM INPUT SIZE IS 128 BYTES.        *  318
* INPUT:                                                              *  319
*   ADDRESS OF PARMLIST IN R1                                         *  320
*   PARMLIST FIELDS:                                                  *  321
*   DS    A    ADDRESS OF INPUT FIELD                                 *  322
*   DS    F    LENGTH OF INPUT FIELD                                  *  323
*   DS    A    ADDRESS OF OUTPUT FIELD                                *  324
*   DS    F    LENGTH OF OUTPUT FIELD                                 *  325
*---------------------------------------------------------------------*  326
DISPHEX  DS    0H                                                        327
         BAKR  R14,0                   BUILD STACK STATE ENTRY           328
         LM    R4,R7,0(R1)             LOAD REGS FROM PARMLIST           329
         LR    R1,R5                   INPUT LENGTH TO R1                330
         SLL   R1,1                    * 2                               331
         CR    R7,R1                   IS OUTPUT LENGTH >= 2 * INPUT ?   332
         BNL   LENGTHOK                YES; CONTINUE                     333
         LR    R5,R7                   ..OUTPUT LENGTH                   334
         SRL   R5,1                    ..DIVIDED BY 2 IS NEW INPUT LEN   335
LENGTHOK DS    0H                                                        336
         EREG  R1,R1                   EXTRACT PARMLIST ADDR FROM STACK  337
         STM   R4,R7,0(R1)             SAVE REGS IN PARMLIST             338
UNPKLP   DS    0H                                                        339
         IC    R11,0(R4)               INPUT BYTE                        340
         STC   R11,1(R6)               SAVE IN OUTPUT                    341
         SRL   R11,4                   SHIFT INPUT BYTE                  342
         STC   R11,0(R6)               SAVE IN OUTPUT                    343
         LA    R4,1(R4)                POINT AT NEXT INPUT BYTE          344
         LA    R6,2(R6)                POINT AT NEXT OUTPUT BYTE         345
         BCT   R5,UNPKLP               LOOP FOR LENGTH OF INPUT          346
         EREG  R1,R1                   EXTRACT PARMLIST ADDR FROM STACK  347
         LM    R4,R7,0(R1)             LOAD REGS FROM PARMLIST           348
         NI    0(R6),X'0F'             TURN OFF HIGH ORDER BITS 1ST BYT  349
         BCTR  R7,0                    LENGTH LESS 1                     350
         BCTR  R7,0                    LESS 1 FOR EXECUTE                351
         EX    R7,MVZ1                 PROPOGATE HIGH ORDER BITS OFF     352
         B     AMVZ1                   BRANCH AROUND EXECUTE             353
MVZ1     MVZ   1(0,R6),0(R6)           ** EXECUTE ONLY **                354
AMVZ1    DS    0H                                                        355
         LA    R7,1(0,R7)              INCREASE TO LENGTH-1              356
         EX    R7,TR1                  UNPACK INPUT INTO OUTPUT          357
         B     ATR1                    BRANCH AROUND EXECUTE             358
TR1      TR    0(0,R6),TRTAB           ** EXECUTE ONLY **                359
ATR1     DS    0H                                                        360
         EREG  R15,R1                  RESTORE REGS 0,1,AND 15           361
         PR                            RESTORE STACK                     362
TRTABLE  DC    240X'00'
         DC    C'0123456789ABCDEF'     TRANSLATION  TABLE                363
TRTAB    DC    C'0123456789ABCDEF'     TRANSLATION  TABLE                363
*---------------------------------------------------------------------*  364
*        WTO ROUTINE                                                  *  365
*---------------------------------------------------------------------*  366
WTORTN   DS 0H                                                           367
         BAKR  R14,0                   SAVE ENVIRONMENT ON STACK         368
         TM    ESTFLAG2,@ESTNWTO       NO WTOS?                          369
         BO    WTORETN1                YES; EXIT ROUTINE                 370
         LA    R11,WTOLINE             ADDRESS OF WTO TEXT               371
         CLI   SDWATYPE,SDWATEST       IS PROGRAM CHECK FOR AN ESTAE?    372
         BE    ESTWTO                  YES; ISSUE STANDARD WTO           373
         LA    R0,1                    ..EXTRACT PSW INTO                374
         ESTA  R0,R0                   ..INTO REGS 0 AND 1               375
         N     R0,=A(X'00010000')      TURN OFF ALL BUT PROBLEM BIT      376
         BNZ   WTORETN1                 =0; IN PROBLEM STATE: EXIT       377
         SAC   0                       SET PRIMARY SPACE MODE            378
         SPKA  0                       GET A KEY 0 PSW                   379
         WTO   TEXT=(R11),LINKAGE=BRANCH,MF=(E,WTOLIST)                  380
*                                      ISSUE WTO WITHOUT SVC35           381
         B     WTORETN                 CONTINUE                          382
ESTWTO   DS    0H                                                        383
         WTO   TEXT=(R11),MF=(E,WTOLIST)                                 384
*                                      ISSUE WTO WITH SVC35              385
WTORETN  DS    0H                                                        386
         MVI   WTOLINE,X'40'                     ..SET TEXT LINE         387
         MVC   WTOLINE+1(L'WTOLINE-1),WTOLINE    ..TO SPACES             388
         LA    R11,4                             ..WITH LENGTH           389
         STCM  R11,B'0011',WTOLINE               ..OF 4                  390
WTORETN1 DS    0H                                                        391
         EREG  R15,R1                  RESTORE REGS 15,0 AND 1           392
         PR                            RETURN TO CALLER                  393
CARR     DC    CL8'CARR'
*---------------------------------------------------------------------*  394
*        COMMON EXIT                                                  *  395
*---------------------------------------------------------------------*  396
EXIT     DS    0H                                                        397
         ENDMOD             RESTORE REGISTERS AND RETURN                 398
*---------------------------------------------------------------------*  399
*        CONSTANTS                                                    *  400
*---------------------------------------------------------------------*  401
*        *---------------------------------------*                       402
*        *     WTO PARMLIST MODEL                *                       403
*        *---------------------------------------*                       404
WTOLISTM WTO   TEXT=(R11),MF=L                                           405
LWTOLIST EQU   *-WTOLISTM                                                406
*        *---------------------------------------*                       407
*        *     USER PARM NOT SUPPLIED            *                       408
*        *---------------------------------------*                       409
NPARMSG  DC    AL2(LNPARMSG)                                             410
         DC    C'User parm has not been supplied - percolating'          411
LNPARMSG EQU   *-NPARMSG                                                 412
*        *---------------------------------------*                       413
*        *     Xmem Message                      *                       414
*        *---------------------------------------*                       415
XMEMESS  DC    AL2(LXMEMESS)                                             416
         DC    C'Program: '                                              417
HOMEPROG DS    CL8                                                       418
         DC    2C' '                                                     419
         DC    C'Called '
PRIMPROG DC    CL8' '
         DC    2C' '
         DC    C'In Address Space '
ASID     DS    XL4
         DC    3C' '
         DC    C' At offset '
LXMEMESS EQU   *-XMEMESS                                                 420
*        *---------------------------------------*                       413
*        *     SDWA ADDRESS                      *                       414
*        *---------------------------------------*                       415
SDWMSG1  DC    AL2(LSDWMSG1)                                             416
         DC    C'SDWA address: '                                         417
SDWAADDR DS    CL8                                                       418
         DC    C' '                                                      419
LSDWMSG1 EQU   *-SDWMSG1                                                 420
*        *---------------------------------------*                       421
*        *     ABEND CODE                        *                       422
*        *---------------------------------------*                       423
ARRMSG1  DC    AL2(LARRMSG1)                                             424
         DC    C'Abend code:   '                                         425
ABNDCODE DS    CL4                                                       426
         DC    C' '                                                      427
LARRMSG1 EQU   *-ARRMSG1                                                 428
*        *---------------------------------------*                 JOER  421
*        *     REASON CODE                       *                 JOER  422
*        *---------------------------------------*                 JOER  423
ARRMSG2  DC    AL2(LARRMSG2)                                       JOER  424
RETLIT   DC    CL14'Reason code: '                                 JOER  425
REACODE  DS    CL4                                                 JOER  426
         DS    C                                                   JOER  427
LARRMSG2 EQU   *-ARRMSG2                                           JOER  428
*        *---------------------------------------*                       429
*        *     DISPLAY MODULE INFORMATION        *                       430
*        *---------------------------------------*                       431
DMODMSG  DC    AL2(LDMODMSG)                                             432
         DC    C'Module name:  '                                         433
DMOD1    DC    CL8'n/a'                                                  434
         DC    C'  Entry point: '                                        435
DMODLOD  DC    CL8'n/a'                                                  436
LDMODMSG EQU   *-DMODMSG                                                 437
*        *---------------------------------------*                 JOER  429
*        *     DISPLAY RB INFORMATION            *                 JOER  430
*        *---------------------------------------*                 JOER  431
DRBMSG   DC    AL2(LDMODMSG)                                       JOER  432
         DC    C'SVC '                                             JOER  433
SVCNUM#  DS    XL2                                                 JOER
         DS    X                                                   JOER
         DC    C' Abended, was called from offset: '               JOER
RBOFF    DS    CL5                                                 JOER  435
LDRBMSG  EQU   *-DMODMSG                                           JOER  437
*        *---------------------------------------*                       438
*        *     DISPLAY PSW                       *                       439
*        *---------------------------------------*                       440
DPSWMSG  DS    AL2                                                       441
PSWLIT   DS    CL26                                                      442
DPSW1    DS    CL8                                                       443
         DS    C                                                         444
DPSW2    DS    CL8                                                       445
OFFLIT   DS    CL9                                                       446
OFFSET   DS    CL8                                                       447
         ORG   OFFLIT+1
DPSW3    DS    CL8
         DS    C
DPSW4    DS    CL8
OFFLIT64 DS    CL9
OFFSET64 DS    CL8
LDPSWMSG EQU   *-DPSWMSG                                                 448
*        *---------------------------------------*                       449
*        *     GENERAL REGISTERS                 *                       450
*        *---------------------------------------*                       451
GENREGS  DC    AL2(LGENREGS)                                             452
         DC    C'General registers at abend:'                            453
LGENREGS EQU   *-GENREGS                                                 454
*        *---------------------------------------*                       455
*        *     DISPLAY REGISTERS 1               *                       456
*        *---------------------------------------*                       457
MREG1    DS    AL2                                                 JOER  458
R0LIT    DS    CL7                                                 JOER  459
DREG0    DS    CL8                                                 JOER  460
R1LIT    DS    CL7                                                 JOER  461
DREG1    DS    CL8                                                 JOER  462
R2LIT    DS    CL7                                                 JOER  463
DREG2    DS    CL8                                                 JOER  464
R3LIT    DS    CL7                                                 JOER  465
DREG3    DS    CL8                                                 JOER  466
         ORG   DREG1+4                                             JOER
R1LIT64  DS    CL7                                                 JOER
DREG164  DS    CL17                                                JOER
*        ORG                                                       JOER
LMREG1   EQU   *-MREG1                                             JOER  467
*        *---------------------------------------*                       468
*        *     DISPLAY REGISTERS 2               *                       469
*        *---------------------------------------*                       470
MREG2    DS    AL2                                                 JOER  471
R4LIT    DS    CL7                                                 JOER  472
DREG4    DS    CL8                                                 JOER  473
R5LIT    DS    CL7                                                 JOER  474
DREG5    DS    CL8                                                 JOER  475
R6LIT    DS    CL7                                                 JOER  476
DREG6    DS    CL8                                                 JOER  477
R7LIT    DS    CL7                                                 JOER  478
DREG7    DS    CL8                                                 JOER  479
         ORG   DREG4                                               JOER
DREG264  DS    CL17                                                JOER
         DS    CL2                                                 JOER
DR3LIT64 DS    CL7                                                 JOER
DREG364  DS    CL17                                                JOER
*        ORG                                                       JOER
LMREG2   EQU   *-MREG2                                             JOER  480
*        *---------------------------------------*                       481
*        *     DISPLAY REGISTERS 3               *                       482
*        *---------------------------------------*                       483
MREG3    DS    AL2(LMREG3)                                         JOER  484
R8LIT    DS    CL7                                                 JOER  485
DREG8    DS    CL8                                                 JOER  486
R9LIT    DS    CL7                                                 JOER  487
DREG9    DS    CL8                                                 JOER  488
R10LIT   DS    CL7                                                 JOER  489
DREG10   DS    CL8                                                 JOER  490
R11LIT   DS    CL7                                                 JOER  491
DREG11   DS    CL8                                                 JOER  492
         ORG   DREG8                                               JOER
DREG464  DS    CL17                                                JOER
         DS    CL2                                                 JOER
R5LIT64  DS    CL7                                                 JOER
DREG564  DS    CL17                                                JOER
*        ORG                                                       JOER
LMREG3   EQU   *-MREG3                                             JOER  493
*        *---------------------------------------*                 JOER  494
*        *     DISPLAY REGISTERS 4               *                 JOER  495
*        *---------------------------------------*                 JOER  496
MREG4    DS    AL2                                                 JOER  497
R12LIT   DS    CL7                                                 JOER  498
DREG12   DS    CL8                                                 JOER  499
R13LIT   DS    CL7                                                 JOER  500
DREG13   DS    CL8                                                 JOER  501
R14LIT   DS    CL7                                                 JOER  502
DREG14   DS    CL8                                                 JOER  503
R15LIT   DS    CL7                                                 JOER  504
DREG15   DS    CL8                                                 JOER  505
         ORG   DREG12                                              JOER
DREG664  DS    CL17                                                JOER
         DS    CL2                                                 JOER
R7LIT64  DS    CL7                                                 JOER
DREG764  DS    CL17                                                JOER
*        ORG                                                       JOER
LMREG4   EQU   *-MREG4                                             JOER  506
*        *---------------------------------------*                 JOER  494
*        *     DISPLAY REGISTERS 5               *                 JOER  495
*        *---------------------------------------*                 JOER  496
MREG5    DS    AL2                                                 JOER
R8LIT64  DS    CL7                                                 JOER
DREG864  DS    CL17                                                JOER
         DS    CL2                                                 JOER
R9LIT64  DS    CL7                                                 JOER
DREG964  DS    CL17                                                JOER
LMREG5   EQU   *-MREG5                                             JOER
*        *---------------------------------------*                 JOER  494
*        *     DISPLAY REGISTERS 6               *                 JOER  495
*        *---------------------------------------*                 JOER  496
MREG6    DS    AL2                                                 JOER
R10LIT64 DS    CL7                                                 JOER
DREG1064 DS    CL17                                                JOER
         DS    CL2                                                 JOER
R11LIT64 DS    CL7                                                 JOER
DREG1164 DS    CL17                                                JOER
LMREG6   EQU   *-MREG6                                             JOER
*        *---------------------------------------*                 JOER  494
*        *     DISPLAY REGISTERS 6               *                 JOER  495
*        *---------------------------------------*                 JOER  496
MREG7    DS    AL2                                                 JOER
R12LIT64 DS    CL7                                                 JOER
DREG1264 DS    CL17                                                JOER
         DS    CL2                                                 JOER
R13LIT64 DS    CL7                                                 JOER
DREG1364 DS    CL17                                                JOER
LMREG7   EQU   *-MREG7                                             JOER
*        *---------------------------------------*                 JOER  494
*        *     DISPLAY REGISTERS 7               *                 JOER  495
*        *---------------------------------------*                 JOER  496
MREG8    DS    AL2                                                 JOER
R14LIT64 DS    CL7                                                 JOER
DREG1464 DS    CL17                                                JOER
         DS    CL2                                                 JOER
R15LIT64 DS    CL7                                                 JOER
DREG1564 DS    CL17                                                JOER
LMREG8   EQU   *-MREG8                                             JOER
*        *---------------------------------------*                       507
*        *     ACCESS  REGISTERS                 *                       508
*        *---------------------------------------*                       509
ACCREGS  DC    AL2(LACCREGS)                                             510
         DC    C'Access registers at abend:'                             511
LACCREGS EQU   *-ACCREGS                                                 512
*        *---------------------------------------*                       513
*        *     DISPLAY ACCESS REGISTERS          *                       514
*        *---------------------------------------*                       515
MAR1     DC    AL2(LMAR1)                                                516
         DC    C'  AR0:'                                                 517
DAR0     DS    CL8                                                       518
         DC    C'   AR1:'                                                519
DAR1     DS    CL8                                                       520
         DC    C'   AR2:'                                                521
DAR2     DS    CL8                                                       522
         DC    C'   AR3:'                                                523
DAR3     DS    CL8                                                       524
LMAR1    EQU   *-MAR1                                                    525
*        *---------------------------------------*                       526
*        *     DISPLAY REGISTERS 2               *                       527
*        *---------------------------------------*                       528
MAR2     DC    AL2(LMAR2)                                                529
         DC    C'  AR4:'                                                 530
DAR4     DS    CL8                                                       531
         DC    C'   AR5:'                                                532
DAR5     DS    CL8                                                       533
         DC    C'   AR6:'                                                534
DAR6     DS    CL8                                                       535
         DC    C'   AR7:'                                                536
DAR7     DS    CL8                                                       537
LMAR2    EQU   *-MAR2                                                    538
*        *---------------------------------------*                       539
*        *     DISPLAY REGISTERS 3               *                       540
*        *---------------------------------------*                       541
MAR3     DC    AL2(LMAR3)                                                542
         DC    C'  AR8:'                                                 543
DAR8     DS    CL8                                                       544
         DC    C'   AR9:'                                                545
DAR9     DS    CL8                                                       546
         DC    C'  AR10:'                                                547
DAR10    DS    CL8                                                       548
         DC    C'  AR11:'                                                549
DAR11    DS    CL8                                                       550
LMAR3    EQU   *-MAR3                                                    551
*        *---------------------------------------*                       552
*        *     DISPLAY REGISTERS 4               *                       553
*        *---------------------------------------*                       554
MAR4     DC    AL2(LMAR4)                                                555
         DC    C' AR12:'                                                 556
DAR12    DS    CL8                                                       557
         DC    C'  AR13:'                                                558
DAR13    DS    CL8                                                       559
         DC    C'  AR14:'                                                560
DAR14    DS    CL8                                                       561
         DC    C'  AR15:'                                                562
DAR15    DS    CL8                                                       563
LMAR4    EQU   *-MAR4                                                    564
*        *---------------------------------------*                       565
*        *     RETRY ROUTINE ADDRESS             *                       566
*        *---------------------------------------*                       567
SDRETRY  DC    AL2(LSDRETRY)                                             568
         DC    C'Invoking Retry Routine at address:   '                  569
SDRETADR DS    CL8                                                       570
         DC    C' '                                                      571
LSDRETRY EQU   *-SDRETRY                                                 572
*        *---------------------------------------*                       573
*        *     NO RETRY MESSAGE                  *                       574
*        *---------------------------------------*                       575
NRETMSG  DC    AL2(LNRETMSG)                                             576
         DC    C'Return to RTM with percolation '                        577
LNRETMSG EQU   *-NRETMSG                                                 578
*---------------------------------------------------------------------*  364
*        Run CSVQUERY As SRB/ or rtn                                  *  365
*---------------------------------------------------------------------*  366
CSVQ     DS    0D                                                  JOER
         USING CSVQ,R15                                            JOER
         LR    R5,R1                                               JOER
         USING SRBDSECT,R5                                         JOER
         LR    R3,R15                                              JOER
         DROP  R15                                                 JOER
         USING FRRPARM,R2                                          JOER
         ST    R3,MODSTRT                                          JOER
         LA    R4,CSVQLEN                                          JOER
         ST    R4,MOD_END                                          JOER
         USING CSVQ,R3                                             JOER
         LR    R11,R14                                             JOER
          CSVQUERY INADDR64=INST,                                  JOERX
               SEARCH=JPALPA,                                      JOERX
               ANCESTORJPQ=YES,                                    JOERX
               OUTLENGTH64=MODLEN,                                 JOERX
               OUTEPNM=NAME,                                       JOERX
               OUTEPA64=MODEPA,                                    JOERX
               OUTATTR1=ATTR_1,                                    JOERX
               OUTATTR2=ATTR_2,                                    JOERX
               OUTATTR3=ATTR_3,                                    JOERX
               OUTXATTR1=X_ATTR,                                   JOERX
               OUTVALID=ATTRVAL#,                                  JOERX
               OUTPDATA=P_DATA,                                    JOERX
               OUTDIAG=D_IAG,                                      JOERX
               OUTXTLST=XTLST##,                                   JOERX
               OUTDSKEY=D_SKEY,MF=(E,CSVQD,COMPLETE)               JOER
         LTR   R15,R15                                             JOER
         BZ    RET                                                 JOER
         LR    R0,R15                                              JOER
         LA    R15,4                                               JOER
*                                                                  JOER
RET     DS     0H
        LR     R14,R11                                             JOER
        BR     R14                                                 JOER
*----------------------------------------------------*             JOER
*                Frr rountine                        *             JOER
*----------------------------------------------------*             JOER
FRRTN    DS    0H                                                  JOER
         LR    R3,R15                                              JOER
         USING FRRTN,R3                                            JOER
         LR    R5,R0                                               JOER
         USING SDWA,R1                                             JOER
         L     R2,SDWAPARM
         USING FRRPARM,R2
         L     R9,SDWAXPAD                                         JOER
         USING SDWAPTRS,R9                                         JOER
         L     R8,SDWASRVP                                         JOER
         USING SDWARC1,R8                                          JOER
         L     R7,SDWACRC                                          JOER
         L     R15,MODSTRT                                         JOER
         L     R10,MOD_END                                         JOER
         L     R11,SDWANXT1                                        JOER
         N     R11,=X'7FFFFFFF'                                    JOER
         CR    R15,R11                                             JOER
         BL    PERC                                                JOER
         CR    R14,R11                                             JOER
         BH    PERC                                                JOER
         L     R8,MESSAREA                                         JOER
         MVC   0(30,R8),=C' ABEND AT OFFSET IN CSVQ..... '         JOER
         SR    R11,R15                                             JOER
         STC   R11,WORKA                                           JOER
         UNPK  31(3,R8),WORKA                                      JOER
         TR    31(2,R8),TRTBL                                      JOER
         BR    R14                                                 JOER
PERC     DS    0H
         SETRP RC=0,RECORD=YES
         BR    R14
         LTORG
TRTBL    DS    0CL256
         DS    CL240
         DC    C'0123456789ABCDEF'
SRBW    DS     XL(SRBDLEN)                                         JOER
CSVQLEN EQU    *-CSVQ                                              JOER
SRBDSECT DSECT                                                     JOER
INST     DS    D                                                   JOER
MODEPA   DS    0D                                                  JOER
EPA64    DS    F                                                   JOER
EPA31    DS    F                                                   JOER
MODLEN   DS    D                                                   JOER
         CSVQUERY PLISTVER=MAX,MF=(L,CSVQD)                        JOER
NAME     DS    CL8                                                 JOER
ATTR_1   DS    X                                                   JOER
ATTR_2   DS    X                                                   JOER
ATTR_3   DS    X                                                   JOER
X_ATTR   DS    X                                                   JOER
ATTRVAL# DS    F
P_DATA   DS    XL16                                                JOER
D_IAG    DS    F                                                   JOER
XTLST##  DS    CL136                                               JOER
D_SKEY   DS    CL8                                                 JOER
*                                                                  JOER
CSVQRET  DS    F                                                   JOER
SRBDLEN  EQU   *-SRBDSECT                                          JOER
FRRPARM  DSECT                                                     JOER
MODSTRT  DS    F                                                   JOER
MOD_END  DS    F                                                   JOER
WORKA    DS    XL2                                                 JOER
RETRY     DS  A
MESSAREA  DS  A
FRRLEN   EQU   *-FRRPARM                                           JOER
*------------------------------------------------------------------JOER  579
*        MAP WORK AREA                                             JOER  580
*------------------------------------------------------------------JOER  581
WGRECOV  DSECT                                                     JOER  582
         DS    18F
FLAG     DS    XL2                                                 JOER
*                                                                  JOER
STOKEN   DS    XL8                                                 JOER
ALET     DS    F                                                   JOER
ASID#    DS    XL2                                                 JOER
ABENDMOD EQU   X'80'                   Abend is in module          JOER
IS64     EQU   X'40'                   abend was amod64            JOER
EPA      EQU   X'20'                                               JOER
NAME#    EQU   X'10'                                               JOER
XMEM     EQU   X'08'                                               JOER
ISRBAD   EQU   X'04'                                               JOER
ISCDE    EQU   X'02'                                               JOER
CSVINFO  EQU   X'01'                                               JOER
PSWMATC  EQU   X'80'                    Second byte of flag        JOER
NOSTR    EQU   X'40'                                               JOER
IBMSRV   EQU   X'20'                                               JOER
*                                                                  JOER
ATTR1    DS    X                                                   JOER
ATTR2    DS    X                                                   JOER
ATTR3    DS    X                                                   JOER
XATTR    DS    XL8                                                 JOER
PDATA    DS    XL16                                                JOER
DIAG     DS    XL4                                                 JOER
XTLST#   DS    XL136                                               JOER
SIXFOUR  DS    XL128                       Area for 64 bit regs    JOER
SIXFOUR1 DS    XL128                       Area for 64 bit regs    JOER
TONEAB   DS    XL64                        31 BIT ABEND regs       JOER
MODABEND DS    CL8                         Module name abend       JOER
RBABEND# DS    F                           rbend                   JOER
STCKFRM  DS    F                           STACK FRAME ptr         JOER
RBREG    DS    F                                                   JOER
CDE#     DS    F                                                   JOER
EPABEND  DS    D                           ep aend                 JOER
ENDABEND DS    A                                                   JOER
DSKEY    DS    CL8                                                 JOER
HOMENAME DS    CL8                         hOME PGM                JOER
PRIMNAME DS    CL8                                                 JOER
MODPSTRT DS    0D
MODP64   DS    F
MODP31   DS    F
SRBA     DS    CL80                                                JOER
         IEAMSCHD MF=(L,SRBLIST)                                   JOER
         CSVQUERY PLISTVER=MAX,MF=(L,CSVQLIST)                     JOER
MODNAME  DS    CL8                    Module name in prim          JOER
MODNMECL DS    CL8                    Module name in Home          JOER
MODSTART DS    0D                      Module Starting PRIME       JOER
MODST64  DS    F                                                   JOER
MODST31  DS    F                                                   JOER
MODEND   DS    0D                     Mod ending PRIME             JOER
MODE64   DS    F                                                   JOER
MODE31   DS    F                                                   JOER
MODSTHM  DS    0D                      Module Starting HOME        JOER
MODSH64  DS    F                                                   JOER
MODSH31  DS    F                                                   JOER
MODEHM   DS    0D                      MOD ENDING HOME             JOER
MODEND64 DS    F                                                   JOER
MODEN31  DS    F                                                   JOER
WNEXT    DS    D                       Work area                   JOER
ATTRVAL  DS    F                                                   JOER
SVC#     DS    X                                                   JOER
SVCOFF   DS    F                                                   JOER
ABENDRB  DS    F                        Abending RB                JOER
ABENDREG DS    XL60                                                JOER
*                                                                  JOER
WTOLINE  DS    CL80                    WTO MESSEGE IS MOVED HERE   JOER  583
DISPARM  DS    4F                      PARMLIST FOR WTORTN         JOER  584
WTOLIST  DS    0F,CL(LWTOLIST)         PARMLIST FOR WTO MACRO      JOER  585
FORMAT   DS    0F,CL256                WORK AREA                   JOER  586
ASRBCOMPCODE DS A                                                  JOER
ASRBCODEADDR DS A                                                  JOER
ASRBRSNADDR  DS A                                                  JOER
SRBCOMPCODE  DS A                                                  JOER
SRBCODEADDR  DS A                                                  JOER
SRBRSNADDR   DS A                                                  JOER
SRBRETURN    DS F                                                  JOER
DSAWORKD     DS D
SRBX    DS     XL(SRBDLEN)                                         JOER
LGRECOV  EQU   *-WGRECOV                                           JOER  587
*------------------------------------------------------------------JOER  588
*        OTHER DSECTS                                              JOER  589
*------------------------------------------------------------------JOER  590
         IHAPSA                                                    JOER
         ESTPARM                       MAP USER PARMLIST           JOER  591
         IKJRB LIST=YES                                            JOER
         IHACDE                                                    JOER
         LSED                                                      JOER
         IHASTCB                                                   JOER
         IHACDX                                                    JOER
         IKJTCB                                                    JOER
         IHAXTLST                                                  JOER
         IHAASCB                                                   JOER
         IHAASSB                                                   JOER
         IHAXSB                                                    JOER
         END                                                             592
