*PROCESS SUPRWARN(303)
*                                                                          1
*                                                                          2
*+--------------------------------------------------------------------+    3
*¦       (C)   COPYRIGHT MD-PALADIN INC. 1992                         ¦    4
*+--------------------------------------------------------------------+    5
*¦  FUNCTION:                                                         ¦    6
*¦  RTNENERALIZED RECOVERY ROUTINE.  CAN BE USED AS AN ESTAE(X) RTN,  ¦    7
*¦    FRR OR ARR.                                                     ¦    8
*¦  INPUTS:                                                           ¦    9
*¦    R1 - SDWA ADDRESS                                               ¦   10
*¦         ADDRESS OF USER PARMLIST ADDRESS IS IN FIELD SDWAPARM.     ¦   11
*¦         THE USER PARMLIST IS MAPPED BY THE ESTPARM MACRO.          ¦   12
*¦  OUTPUTS:                                                          ¦   13
*¦    VARIOUS WTOS.                                                   ¦   14
*¦    SDWA RETURNED TO RTM WITH RETRY ADDRESS IF RETRY IS DESIRED     ¦   15
*¦  LOGIC:                                                            ¦   16
*¦    1) THE EXPANSION OF MODULE ENTRY=ESTAEX MACRO TESTS WHETHER     ¦   17
*¦       RTM HAS SUPPLIED AN SDWA.  IF SDWA IS ABSENT, PERCOLATE.     ¦   18
*¦    2) ADDRESS THE SDWA EXTENSION AND USER PARMLIST. IF THERE IS    ¦   19
*¦       NO USER PARMLIST, PERCOLATE THE ABEND.                       ¦   20
*¦    3) TEST WHETHER THIS IS A RECURSIVE ENTRY. FOR AN ESTAE, RTM2   ¦   21
*¦       KEEPS TRACK OF RECURSION.  OTHERWISE, TEST USER FLAG.        ¦   22
*¦    4) ISSUE WTOS WITH INFORMATION FROM USER PARMLIST AND/OR SDWA.  ¦   23
*¦    5) IF USER HAS SUPPLIED THE ADDRESS OF AN ADDITIONAL ROUTINE,   ¦   24
*¦       INVOKE THE ROUTINE.  THE ROUTINE WILL RECEIVE CONTROL IN     ¦   25
*¦       PRIMARY ASC MODE AND WITH THE SDWA ADDRESS IN R1.  IF THE    ¦   26
*¦       ROUTINE RETURNS 0 IN R15, GRECOV WILL ATTEMPT RETRY.  ANY    ¦   27
*¦       OTHER VALUE WILL CAUSE GRETRY TO PERCOLATE THE ABEND.        ¦   28
*¦    6) IF THERE IS A RETRY ADDRESS IN THE PARMLIST, ISSUE SETRP     ¦   29
*¦       TO RETRY.  IF THIS IS AN ARR, BUILD A REGISTER UPDATE BLOCK  ¦   30
*¦       (RUB).  IF THERE IS NO RETRY ADDRESS, PERCOLATE THE ABEND.   ¦   31
*¦  ATTRIBUTES:                                                       ¦   32
*¦    AMODE 31, RMODE ANY, REENTRANT, ESA DEPENDENCIES                ¦   33
*+--------------------------------------------------------------------+   34
AR0      EQU   0                                                   JOER
AR1      EQU   1                                                   JOER
AR2      EQU   2                                                   JOER
AR3      EQU   3                                                   JOER
AR4      EQU   4                                                   JOER
AR5      EQU   5                                                   JOER
AR6      EQU   6                                                   JOER
AR7      EQU   7                                                   JOER
AR8      EQU   8                                                   JOER
AR9      EQU   9                                                   JOER
AR10     EQU   10                                                  JOER
AR11     EQU   11                                                  JOER
AR12     EQU   12                                                  JOER
AR13     EQU   13                                                  JOER
AR14     EQU   14                                                  JOER
AR15     EQU   15                                                  JOER
         MODULE GRECOV,BASE=(12,10,11),LOC=BELOW,AMODE=31,RMODE=ANY,ENTX  35
               RY=ESTAEX,                                              X  36
               TEXT=' GENERALIZED RECOVERY ROUTINE '                      37
         MODESET KEY=ZERO,MODE=SUP
*        LA      R7,DBGRP                                          JOER
*        USING   DBGRPY,R7                                         JOER
*        DBGRDIE LEN=281C                                          JOER
          USING PSA,0                                              JOER
         SYSSTATE ASCENV=P             PRIMARY SPACE MODE MACROS          39
         LOAD  EP=DUMPGDG
         ST    R0,DGDGPTR
         MVC   WTOLIST(LWTOLIST),WTOLISTM  COPY WTO PARMLIST TO RENT      40
*        *---------------------------------------*                        41
*        *     SET ADDRESSABILITY SDWA EXTENSION *                        42
*        *---------------------------------------*                        43
         L     R8,SDWAXPAD             ADDRESS SDWA EXTENSION PTRS        44
         L     R8,SDWASRVP-SDWAPTRS(R8) ADDRESS OF RECORDABLE XTNSION     45
         USING SDWARC1,R8              ADDRESSING FOR RECORDABLE XTN      46
         ICM   R9,15,SDWAPARM          ADDRESS OF USER PARM ADDRESS       47
         ST    R9,PARMREG              Store Parm Register
         ICM   R9,15,0(R9)             ADDRESS OF USER PARM               48
         USING ESTPARM,R9              MAP USER PARMLIST                  49
*        BNZ   CNTINUE                 PARM EXISTS; CONTINUE              50
         B     CNTINUE                 PARM EXISTS; CONTINUE              50
         MVC   WTOLINE(LNPARMSG),NPARMSG  ..OUTPUT NOPARM                 51
         BAS   R14,WTORTN                 ..MESSAGE                       52
         B     EXITPERC                YES; PERCOLATE THE ABEND           53
CNTINUE  DS    0H                                                         54
*        *---------------------------------------*                        55
*        *     TEST RECURSION                    *                        56
*        *---------------------------------------*                        57
         CLI   SDWATYPE,SDWATEST       IS THIS AN ESTAE ?                 58
         BNE   NESTTYPE                NO; DO NOT TEST SDWA FLAG          59
         TM    SDWAERRD,SDWASTAE       RECURSIVE ENTRY ?                  60
*        BZ    AFTERCRS                YES; PERCOLATE THE ABEND           61
         B     AFTRECRS                CONTINUE                           62
NESTTYPE DS    0H                                                         63
*        TM    ESTFLAG,@ESTSTAE        IS RECURSION FLAG SET              64
*        BO    EXITPERC                YES; PERCOLATE THE ABEND           65
*        OI    ESTFLAG,@ESTSTAE        SET RECURSION FLAGE                66
AFTRECRS DS    0H                                                  JOER   67
         TM    SDWAEC1+3,X'01'            check amode              JOER
         BZ    NO311                                               JOER
         TM    SDWAEC1+4,X'80'                                     JOER
         BZ    NO311                                               JOER
         OI    FLAG,IS641                                          JOER
NO311    DS    0H                                                  JOER
*                                                                  JOER
*    Determine if primary and home are different                   JOER
*                                                                  JOER
*    also look if SDWAEPA and SDNAME are populated                 JOER
*                                                                  JOER
*                                                                  JOER
         CLC   SDWAEPA,=F'0'          Do we have SDWAEPA           JOER
         BE    CKNAME                 No                           JOER
         OI    FLAG,EPA                                            JOER
CKNAME   DS    0H                                                  JOER
         CLC   SDWANAME+4(4),=4X'00'  Name there                   JOER
         BE    CKXMEM#                                             JOER
         OI    FLAG,NAME#                                          JOER
CKXMEM#  DS    0H                                                  JOER
         EPAR  R0                                                  JOER
         CH    R0,SDWAPRIM    Are we in the abended address sp     JOER
         BE    SAME                                                JOER
         MVC   ASID#,SDWAPRIM                                      JOER
         OI    FLAG,XMEM                                           JOER
SAME     DS    0H                                                  JOER
*        Check for amode 64                                        JOER
         CLC   SDWAEC1,SDWAEC2             Did we bomb             JOER
         BE    CKAMODE                     in another service      JOER
         CLI   SDWATYPE,SDWATEST       IS THIS AN ESTAE ?          JOER   58
         BNE   CKAMODE                 FRR SDWAEC2 Point rec ent   JOER   59
         OI    FLAG+1,IBMSRV                                       JOER
CKAMODE  DS    0H                                                  JOER
         TM    SDWAEC2+3,X'01'                                     JOER
         BZ    NO312                                               JOER
         TM    SDWAEC2+4,X'80'                                     JOER
         BZ    NO312                                               JOER
         OI    FLAG,IS642                                          JOER
NO312    DS    0H                                                  JOER
*                                                                  JOER
*----------------------------------------------------------*       JOER
*     GET RB FOR PSW 'S                                    *       JOER
*----------------------------------------------------------*       JOER
          MVC   WORKPSW,SDWAEC1      Move PSW to look up           JOER
          USING PSA,0                                              JOER
          L     R7,PSATOLD                                         JOER
          CLC   SDWANAME+4(4),=4X'00'                              JOER
          BNE   GETCUR                                             JOER
*-------------------------------------------------------------*    JOER
*          determine what type of rb is the target rb         *    JOER
*-------------------------------------------------------------*    JOER
          L     R5,SDWARBAD                                        JOER
          LTR   R5,R5                  Q. Any value                JOER
          BZ    GETCUR                                             JOER
          USING RBBASIC,R5                                         JOER
          TM    RBSTAB1,RBFTSVRB       q. is this a SVRB           JOER
          BNO   GETRB#                  no;                        JOER
          OI    FLAG+3,ISSVRB          Indcate this an svrb        JOER
          OI    FLAG+3,ISSVC                                       JOER
GETRB#    DS    0H                                                 JOER
          ST    R5,WORKRB                                          JOER
          B     GETIT                                              JOER
GETCUR    DS    0H                                                 JOER
          MVC   WORKRB,0(R7)     Move RB to Work RB                JOER
          L     R5,WORKRB                                          JOER
GETIT     DS    0H                                                 JOER
          BAL   R14,GETRB                                          JOER
*         NI    FLAG+3,255-ISSVRB       Indcate this an svrb       JOER
          MVC   RBABEC1,RBABEND$                                   JOER
          MVC   RBRGEC1,RBREG                                      JOER
          TM    FLAG+3,ISIRB            Q. IS this an IRB          JOER
          BO    CHECKEC2                                           JOER
          L     R6,CDE#                                            JOER
          LTR   R6,R6                                              JOER
          BZ    CHECKEC2                                           JOER
          USING CDENTRY,R6                                         JOER
          TM    CDENTPT3,CDEMOD64         This module rnode 64     JOER
          BZ    SETCDE                    NO;                      JOER
          OI    FLAG+1,EC1R64                                      JOER
SETCDE    DS    0H                                                 JOER
          MVC   CDEEC1,CDE#                                        JOER
          MVC   MODNMECL,CDNAME                                    JOER
          MVC   MODST31,CDENTPT                                    JOER
          NI    MODST31,X'7F'                                      JOER
GETMAJ1   DS    0H                                                 JOER
          L     R7,CDXLMJP                                         JOER
          TM    CDATTR,CDMIN                                       JOER
          BO    GETMAJ1                                            JOER
          XR    R0,R0                                              JOER
          ICM   R0,B'0111',XTLMSBLN-XTLST(R7)                      JOER
          A     R0,MODST31                                         JOER
          ST    R0,MODE31                                          JOER
*                                                                  JOER
*                                                                  JOER
*                                                                  JOER
CHECKEC2  DS    0H                                                 JOER
          TM    FLAG+1,IBMSRV                                      JOER
          BZ    AFTCDE                                             JOER
          L     R8,SDWAXPAD      ADDRESS SDWA EXTENSION PTRS       JOER   44
          L     R8,SDWASRVP-SDWAPTRS(R8) ADDRESS OF RECRDABLE XTNS JOER   45
          TM    SDWAXFLG,SDWAINTF    Linkage stack entry           JOER
          BO    GETLINREG                                          JOER
*         TM    FLAG+1,IBMSRV        SDWAEC1 AND EC2 DIFF          JOER
*         BO    GETLINREG                                          JOER
          MVC   WORKPSW,SDWAEC2 Move PSW to look up                JOER
          L     R7,PSATOLD                                         JOER
          MVC   WORKRB,0(R7) MOVE PRB                              JOER
          L     R5,WORKRB                                          JOER
          XC    RBABEND$,RBABEND$                                  JOER
          NI    FLAG+1,255-TOPOLST    Clear flags                  JOER
          XC    RBABEND$,RBABEND$   Init to zero                   JOER
          BAL   R14,GETRB                                          JOER
          MVC   RBABEC2,RBABEND$                                   JOER
          MVC   RBRGEC2,RBREG                                      JOER
          L     R6,CDE#                                            JOER
          LTR   R6,R6                                              JOER
          BZ    CHKSTK                                             JOER
          TM    CDENTPT3,CDEMOD64                                  JOER
          BZ    SETCDE2                                            JOER
          OI    FLAG+2,EC2R64                                      JOER
SETCDE2   DS    0H                                                 JOER
          MVC   CDEEC2,CDE#                                        JOER
          MVC   MODNAME,CDNAME                                     JOER
          MVC   MODSH31,CDENTPT                                    JOER
          NI    MODSH31,X'7F'                                      JOER
GETMAJ2   DS    0H                                                 JOER
          L     R7,CDXLMJP                                         JOER
          TM    CDATTR,CDMIN                                       JOER
          BO    GETMAJ2                                            JOER
          ICM   R0,B'0111',XTLMSBLN-XTLST                          JOER
          A     R0,MODSH31                                         JOER
          ST    R0,MODE31                                          JOER
CHKSTK    DS    0H                                                 JOER
          L     R8,SDWAXPAD      ADDRESS SDWA EXTENSION PTRS       JOER   44
          L     R8,SDWASRVP-SDWAPTRS(R8) ADDRESS OF RECORDABLE XTNSJOER   45
          TM    SDWAXFLG,SDWAINTF    Linkage stack entry           JOER
          BNO   AFTCDE                                             JOER
*                                                                  JOER
*                                                                  JOER
*---------------------------------------------------------*        JOER
*     If Abend occurred in space switching stacking PC    *        JOER
*                                                         *        JOER
*     Routine the information about the user psw and regs *        JOER
*                                                         *        JOER
*    are thrn stored on the stsck                         *        JOER
*---------------------------------------------------------*        JOER
GETLINREG DS    0H                                                 JOER
          L     R7,PSATOLD     get executing TCB                   JOER
          L     R7,TCBSTCB-TCB(,R7)   Get STCB                     JOER
          USING STCB,R7                                            JOER
          L     R7,STCBLSDP                                        JOER
          DROP  R7                                                 JOER
          USING ENTRY,R7                                           JOER
TYPEOE    DS    0H                                                 JOER
          LA    R5,ENTRYLEN(R7)      Point to the bottom           JOER
          SH    R5,=AL2(LSENLNTH)    Point to the top              JOER
          CLI   0(R7),X'00'                                        JOER
          BNE   TESTIT                                             JOER
          OI    FLAG+1,NOSTR                                       JOER
          B     AFTCDE                                             JOER
TESTIT    DS    0H                                                 JOER
          TM    LSEDTYPE,LSEDTPCE                                  JOER
          BO    PRCFRM                                             JOER
          TM    LSEDTYPE,LSEDTHDR                                  JOER
          BNO   NEXTFRM                                            JOER
          L     R7,LSHDPREV-LSHD(R7)                               JOER
          B     TYPEOE                                             JOER
PRCFRM    DS    0H                                                 JOER
          DROP  R7                                                 JOER
          USING LSED,R5                                            JOER
          TM    FLAG+3,ISIRB                                       JOER
          BRZ   SETPSW                                             JOER
          CLC   LSENPCNB,=X'0000032D'  Q. is this SCHEDIRB call    JOER
          BNE   NEXTFRM                                            JOER
          B     GOTENT                                             JOER
SETPSW    DS    0H                                                 JOER
          MVC   WNEXT+4(4),SDWANXT2                                JOER
          NI    WNEXT+4,X'7F'                                      JOER
          CLC   WNEXT+4(4),LSENPSW2+4                              JOER
          BNE   NEXTFRM                                            JOER
          ST    R5,STCKFRM                                         JOER
GOTENT    DS    0H                                                 JOER
          OI    FLAG+1,LS          Indcate registers on linkage st JOER
          B     AFTCDE                                             JOER
NEXTFRM   DS    0H                                                 JOER
          SH    R7,=AL2(LSENLNTH)  POINT TO PREV                   JOER
          B     TYPEOE                                             JOER
AFTCDE   DS    0H                                                  JOER
*        MODESET KEY=ZERO,MODE=SUP  GO TO SUP KEY 0                JOER
*                                                                  JOER
         LAY   R15,SRBX            Address parmlist                JOER
         USING SRBDSECT,R15                                        JOER
         TM    FLAG,XMEM          Bomb in other address space      JOER
         BO    DOEC1#                                              JOER
         CLC   MODNMECL,=8X'00'  did we get mod name               JOER
         BE    DOEC1#            Have to do CSVQUEY                JOER
         CLC   MODSTART,=8X'00'  did we get START                  JOER
         BE    DOEC1#            NO HAVE TO DO CSVQUEST            JOER
         CLC   MODEND,=8X'00'    DID WE GET END                    JOE2
         BE    MVEDATA           NEXT PSW                          JOER
         NI    FLAG+1,255-VALEC1  Wipe out flag                    JOER
         BAL   R14,VALEC1#       Is SDWAEC1 Valid                  JOER
*                                                                  JOER
*  is sdwaec1 in program from rbcde                                JOER
*                                                                  JOER
         TM    FLAG+1,VALEC1           indcate EC1 is Valid        JOER
         BO    MVEDATA                                             JOER
         XC    MODNMECL(24),MODNMECL        Clear the data         JOER
DOEC1#   DS    0H                                                  JOER
         TM    FLAG,IS641                                          JOER
         BO    SET64                                               JOER
         MVC   WNEXT+4,SDWANXT1             Save abend address     JOER
         NI    WNEXT+4,X'7F'                Wipe out high order    JOER
         B     DOCSV                                               JOER
*                                                                  JOER
SET64    DS    0H                                                  JOER
         L      R5,SDWAXPAD      ADDRESS OF RECORDABLE XTNSION     JOER   45
         L      R5,SDWAXEME-SDWAPTRS(,R5)   to X64 Stuff           JOER
         USING  SDWARC4,R5                                         JOER
         MVC    WNEXT,SDWAPSW16+8                                  JOER
         NI    WNEXT+8,X'7F'               Wipe out high order     JOER
*                                                                  JOER
DOCSV    DS    0H                                                  JOER
*                                                                  JOER
*                                                                  JOER
*                                                                  JOER
         MVC   INST,WNEXT                                          JOER
         DROP  R15                                                 JOER
PRIMPARM DS    0H                                                  JOER
*                                                                  JOER
         TM    FLAG,XMEM                  was this SS pcrtn that   JOER
         BZ    NOSTOK                                              JOER
*                                                                  JOER
         LOCASCB ASID=SDWAPRIM                LOC prim to sced SRB JOER
*                                                                  JOER
         L     R1,ASCBASSB-ASCB(R1)                                JOER
         MVC   STOKEN,ASSBSTKN-ASSB(R1)      Get Stokrn            JOER
*                                                                  JOER
         MODESET MODE=SUP,KEY=ZERO
*                                                                  JOER
         ALESERV ADD,                        Put it on DU-AL       JOERX
               ACCESS=PUBLIC,                                      JOERX
               CHKEAX=NO,                                          JOERX
               AL=WORKUNIT,STOKEN=STOKEN,ALET=ALET,MF=(E,ALELST)   JOER
*                                                                  JOER
*                                                                  JOER
NOSTOK    DS   0H                                                  JOER
          LAM  AR0,AR15,=16F'0'                                    JOER
         SYSSTATE ASCENV=AR                                        JOER
*                                                                  JOER
          TM    FLAG,XMEM                                          JOER
          BZ    MVECODE                                            JOER
          LAY   R0,CSVQLEN                                         JOER
*                                                                  JOER
         LAM   AR5,AR5,ALET                                        JOER
*                                                                  JOER
         STORAGE OBTAIN,LENGTH=(0),ADDR=(R5),SP=0,ALET=ALET        JOER
*                                                                  JOER
         SAC   512                 ASC AR                          JOER
*                                                                  JOER
         LAM    AR4,AR4,ALET        Move Alet           4          JOER
         LR     R4,R5                                              JOER
         LA     R5,CSVQLEN                                         JOER
         LAY    R6,CSVQ                                            JOER
         LR     R7,R5                                              JOER
*                                                                  JOER
         MVCL   R4,R6                                              JOER
*                                                                  JOER
         LAM   AR4,AR4,=F'0'                                       JOER
         LAM   AR5,AR5,ALET                                        JOER
         LR    R5,R1                                               JOER
MVECODE  DS    0H                                                  JOER
         LA    R15,SRBCOMPCODE                                     JOER
         ST    R15,ASRBCOMPCODE                                    JOER
         LA    R15,SRBCODEADDR                                     JOER
         ST    R15,ASRBCODEADDR                                    JOER
         LA    R15,SRBRSNADDR                                      JOER
         ST    R15,ASRBRSNADDR                                     JOER
*                                                                  JOER
         LAM   AR1,AR1,=F'0'                                       JOER
         LA    R1,SRBLIST                                          JOER
         XC    0(72,R1),0(R1)                                      JOER
         MVI   0(R1),1                                             JOER
         LA    R7,WNEXT                                            JOER
*                                                                  JOER
         OI    SRBLIST_XFRRFLAG,SRBLIST_XSDWALOC31_YES             JOER
         OI    SRBLIST_XFLAG2,SRBLIST_XSYNCH_YES                   JOER
*                                                                  JOER
*        CLI   SDWATYPE,SDWATARR     Q. Arr                        JOER
*        BE    SETARR                                              JOER
         CPYA  AR6,AR5                                             JOER
         CPYA  AR7,AR5                                             JOER
         TM    FLAG,XMEM                                           JOER
         BO    MVEPRM                                              JOER
         LAY   R6,FRRTN                                            JOER
         LAY   R7,SRBX                                             JOER
         OI    SRBLIST_XFLAG1,SRBLIST_XENV_FULLXM                  JOER
         LAY   R5,CSVQ           Entry point                       JOER
         B     PC_TO_SRB                                           JOER
MVEPRM   DS    0H                                                  JOER
         LA    R6,FRRTN-CSVQ(R5)                                   JOER
         LAY   R7,SRBW-CSVQ(R5)                                    JOER
         USING SRBDSECT,R7                                         JOER
*                                                                  JOER
         SYSSTATE ASCENV=AR                                        JOER
*                                                                  JOER
         CPYA  AR7,AR6                                             JOER
*                                                                  JOER
         OI    SRBLIST_XFLAG1,SRBLIST_XENV_STOKEN                  JOER
         MVC   SRBLIST_XTARGETSTOKEN,STOKEN                        JOER
         B     PC_TO_SRB                                           JOER
SETARR   DS    0H                                                  JOER
         OI    SRBLIST_XFLAG1,SRBLIST_XENV_FULLXM                  JOER
         LAY   R5,CSVQ                                             JOER
         LAY   R6,FRRTN                                            JOER
         LAY   R7,SRBW                                             JOER
*                                                                  JOER
PC_TO_SRB DS   0H                                                  JOER
*
*
*
         LR      R8,R1         Save r1
         LR      R1,R8         Restore r1
*
         MVC   INST,WNEXT                                          JOER
         ST    R5,SRBLIST_XEPADDR                                  JOER
         ST    R6,SRBLIST_XFRRADDR                                 JOER
         ST    R7,SRBLIST_XPARM                                    JOER
         MVI   SRBLIST_XKEYVALUE,X'00'                             JOER
         MVC   60(4,R1),ASRBCOMPCODE                               JOER
         MVC   64(4,R1),ASRBCODEADDR                               JOER
         MVC   68(4,R1),ASRBRSNADDR                                JOER
         L     R14,16                                              JOER
         L     R14,772(R14,0)                                      JOER
         L     R14,408(R14,0)                                      JOER
         PC    0(R14)         pc to do csvquery to get info        JOER
*                                                                  JOER
         TM    FLAG,XMEM                                           JOER
         BZ    CKCODE                                              JOER
*                                                                  JOER
         LR    R0,R5                                               JOER
         LA    R4,SRBX                                             JOER
         LA    R5,SRBDLEN                                          JOER
         LR    R6,R7                                               JOER
         LR    R7,R5                                               JOER
         LAM   AR7,AR7,=F'0'                                       JOER
         MVCL  R4,R6                                               JOER
         LR    R5,R0                                               JOER
*                                                                  JOER
         SAC   0                                                   JOER
*                                                                  JOER
CKCODE   DS    0H                                                  JOER
         CLC   SRBCOMPCODE,=F'0'                                   JOER
         BNE   CKABEND                                             JOER
*----------------------------------------------------------*       JOER
*         If srbcompcode is zero then                      *       JOER
*                                                          *       JOER
*             SRBCODEADDR is whats in R15                  *       JOER
*----------------------------------------------------------*       JOER
         CLC   SRBCODEADDR,=F'0'                                   JOER
         BE    CKR15                                               JOER
         CLC   SRBCODEADDR,=F'4'                                   JOER
         BNE   CKABEND                                             JOER
*        OI    WNEXT+7,X'01'                                       JOER
         BRAS  R14,GETNUCK                                         JOER
         B     CKR15                                               JOER
CKABEND  DS    0H                                                  JOER
         UNPK  SRBA+24(5),SRBCODEADDR+2(3)                         JOER
         L     R15,=A(TRTBL)                                       JOER
         TR    SRBA+24(3),0(R15)                                   JOER
         MVI   SRBA+27,C','                                        JOER
         MVI   SRBA+28,C' '                                        JOER
         UNPK  SRBA+42(5),SRBRSNADDR                               JOER
         L     R15,=A(TRTBL)                                       JOER
         TR    SRBA+42(3),0(R15)                                   JOER
         MVI   SRBA+45,C','                                        JOER
         MVI   SRBA+46,C' '                                        JOER
CKR15    DS    0H                                                  JOER
         LTR   R15,R15                                             JOER
*        BNZ   IS4                                                 JOER
         OI    FLAG+1,CSVINFO                                      JOER
*                                                                  JOER
         LA    R7,SRBX                                             JOER
         TM    FLAG,XMEM                                           JOER
         BZ    MVEDATA                                             JOER
*                                                                  JOER
         LA    R0,CSVQLEN                                          JOER
*                                                                  JOER
         STORAGE RELEASE,LENGTH=(0),ADDR=(R5),ALET=ALET            JOER
*                                                                  JOER
         ALESERV DELETE,CHKEAX=NO,ALET=ALET                        JOER
*                                                                  JOER
*       Move pertiainet area                                       JOER
*                                                                  JOER
*                                                                  JOER
MVEDATA  DS    0H                                                  JOER
         USING SRBDSECT,R7                                         JOER
         TM    FLAG+1,IBMSRV                  Was SDWAEC2 diff     JOER
         BZ    TESTEC1                        check ec1 in range   JOER
         MVC   MODNMECL,NAME                  Move prog name       JOER
         MVC   MODSTART,MODEPA                Move Starting addressJOER
         LG    R14,MODLEN                     Calc End             JOER
         AG    R14,MODEPA                     Add it               JOER
         STG   R14,MODEND                     Store  end           JOER
         CLC   MODSTART(4),=4X'00'            RMode 64             JOER
         BE    SETSTART                       Yes; setit           JOER
         OI    FLAG+1,EC1R64                                       JOER
SETSTART DS    0H                                                  JOER
         CLC   MODNAME,=8X'00'  did we get mod name                JOER
         BE    DOCSV2            Have to do CSVQUEY                JOER
         CLC   MODSTHM,=8X'00'  did we get START                   JOER
         BNE   PRNTSDWA          NO HAVE TO DO CSVQUEST            JOER
*        CLC   MODEHM,=8X'00'    DID WE GET END                    JOE2
*        BE    PRNTSDWA          NEXT PSW                          JOER
DOCSV2   DS    0H                                                  JOER
         XC    WNEXT,WNEXT                                         JOER
         TM    FLAG,IS642              Is SDWAEC2 64 bit           JOER
         BZ    DO312                                               JOER
         L     R5,STCKFRM               get the rb                 JOER
         TM    FLAG+1,LS               Linkage Stack               JOER
         BZ    SETRB                                               JOER
         MVC   WNEXT,LSENPSW2-LSED(R5)                             JOER
         B     SETPARM2                                            JOER
SETRB    DS    0H                                                  JOER
         L     R5,RBABEC2              Get abending RB             JOER
         LR    R15,R5                  Copy it over                JOER
         SH    R15,=H'64'              Point to prefix             JOER
         USING RBPRFX,R15                                          JOER
         L     R15,RBXSB                                           JOER
         USING XSB,R15                                             JOER
         MVC   WNEXT,XSBOPSW16+8                                   JOER
         B     SETPARM2                                            JOER
DO312    DS    0H                                                  JOER
         MVC   WNEXT+4(4),SDWAEC2+4                                JOER
         NI    WNEXT+4,X'7F'                Wipe out high order    JOER
SETPARM2 DS    0H                                                  JOER
         LAY   R14,SRBW                     Get Parm area          JOER
         LA    R15,SRBDLEN                  GET LENGTH             JOER
         XR    R0,R0                        CLear area             JOER
         XR    R1,R1                                               JOER
         MVCL  R14,R0                                              JOER
*                                                                  JOER
         LAY   R15,SRBW                    Address Parmlist        JOER
         MVC   INST,WNEXT                                          JOER
         MVC   NAME,MODNAME                                        JOER
         MVC   MODEPA,MODSTHM                                      JOER
         LG    R0,MODEHM                                           JOER
         LG    R14,MODSTHM                                         JOER
         SGR   R0,R14                                              JOER
         STG   R0,MODLEN                                           JOER
         DROP  R15                                                 JOER
         LA    R1,SRBLIST                                          JOER
         XC    0(72,R1),0(R1)                                      JOER
         MVI   0(R1),1                                             JOER
         LA    R7,WNEXT                                            JOER
         OI    SRBLIST_XFLAG2,SRBLIST_XSYNCH_YES                   JOER
*                                                                  JOER
         OI    SRBLIST_XFRRFLAG,SRBLIST_XSDWALOC31_YES             JOER
*                                                                  JOER
         LA    R15,SRBCOMPCODE                                     JOER
         ST    R15,ASRBCOMPCODE                                    JOER
         LA    R15,SRBCODEADDR                                     JOER
         ST    R15,ASRBCODEADDR                                    JOER
         LA    R15,SRBRSNADDR                                      JOER
         ST    R15,ASRBRSNADDR                                     JOER
*                                                                  JOER
         LAY   R6,FRRTN                                            JOER
         LAY   R7,SRBW                                             JOER
         OI    SRBLIST_XFLAG1,SRBLIST_XENV_FULLXM                  JOER
         LAY   R5,CSVQ           Entry point                       JOER
         MVC   INST,WNEXT                                          JOER
         ST    R5,SRBLIST_XEPADDR                                  JOER
         ST    R6,SRBLIST_XFRRADDR                                 JOER
         ST    R7,SRBLIST_XPARM                                    JOER
         MVI   SRBLIST_XKEYVALUE,X'00'                             JOER
         MVC   60(4,R1),ASRBCOMPCODE                               JOER
         MVC   64(4,R1),ASRBCODEADDR                               JOER
         MVC   68(4,R1),ASRBRSNADDR                                JOER
         L     R14,16                                              JOER
         L     R14,772(R14,0)                                      JOER
         L     R14,408(R14,0)                                      JOER
         PC    0(R14)         pc to do csvquery to get info        JOER
*                                                                  JOER
*                                                                  JOER
         CLC   SRBCOMPCODE,=F'0'                                   JOER
         BNE   CKABEND1                                            JOER
         CLC   SRBCODEADDR,=F'0'                                   JOER
         BE    CKR15#                                              JOER
CKABEND1 DS    0H                                                  JOER
         UNPK  SRBA+24(5),SRBCODEADDR+2(3)                         JOER
         L     R15,=A(TRTBL)                                       JOER
         TR    SRBA+24(3),0(R15)                                   JOER
         MVI   SRBA+27,C','                                        JOER
         MVI   SRBA+28,C' '                                        JOER
         UNPK  SRBA+42(5),SRBRSNADDR                               JOER
         TR    SRBA+42(3),0(R15)                                   JOER
         MVI   SRBA+45,C','                                        JOER
         MVI   SRBA+46,C' '                                        JOER
CKR15#   DS    0H                                                  JOER
         LTR   R15,R15                                             JOER
*        BNZ   IS4                                                 JOER
         LAY   R7,SRBW                                             JOER
         MVC   MODNAME,NAME                   Move module name     JOER
         LG    R14,MODEPA                     Move starting point  JOER
         STG   R14,MODSTHM                                         JOER
         MVC   MODEHM,MODSTHM                Calcualte end         JOER
         LG    R14,MODEHM                                          JOER
         AG    R14,MODLEN                                          JOER
         STG   R14,MODEHM                Store ending              JOER
*                                                                  JOER
*                                                                  JOER
*       Validate SDWAEC1 and SDWAEC2                               JOER
*                                                                  JOER
TESTEC1  DS    0H                                                  JOER
*
*
*
         MODESET MODE=PROB
*
         NI    FLAG+1,255-VALEC1  Wipe out flag                    JOER
         BAL   R14,VALEC1#        Check if SDWAEC1 is valid        JOER
         TM    FLAG+1,VALEC1           indcate EC1 is Valid        JOER
*        BO    DOEC2#                                              JOER
CKEC2    DS    0H                                                  JOER
         TM    FLAG+1,IBMSRV          different sdwaec2            JOER
         BZ    WTOSDWA                Wto SDWA                     JOER
         BAL   R14,VALEC2#            Check if SDWAEC2 is Valid    JOER
PRNTSDWA DS    0H                                                  JOER
*        *---------------------------------------*                 JOER   68
*        *     WTO SDWA ADDRESS                  *                 JOER   69
*        *---------------------------------------*                 JOER   70
WTOSDWA  DS    0H                                                  JOER
         MVC   WTOLINE(LSDWMSG1),SDWMSG1 COPY MESSAGE MODEL TO WORKAREA   71
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST      72
         ST    R3,FORMAT                 SDWA ADDRESS TO FORMAT AREA      73
         LA    R15,FORMAT                ..ADDRESS DISPHEX SOURCE         74
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST            75
         LA    R15,4                       ..LENGTH OF DISPHEX SOURCE     76
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST          77
         LA    R15,WTOLINE+(SDWAADDR-SDWMSG1)  ..ADDRESS DISPHEX TARGET   78
         ST    R15,8(R1)                       ..TO DISPHEX PARMLIST      79
         LA    R15,L'SDWAADDR            ..LENGTH DISPHEX TARGET          80
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST            81
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE           82
         BAS   R14,WTORTN                ISSUE WTO                        83
*        *---------------------------------------*                        84
*        *     WTO ABEND CODE                    *                        85
*        *---------------------------------------*                        86
         MVC   WTOLINE(LARRMSG1),ARRMSG1 COPY MESSAGE MODEL TO WORKAREA   87
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST      88
         LA    R15,SDWAABCC+1            ..SDWA ABEND CODE ADDRESS        89
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST            90
         LA    R15,L'SDWAABCC-1            ..LENGTH OF DISPHEX SOURCE     91
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST          92
         LA    R15,WTOLINE+(ABNDCODE-ARRMSG1) ..ADDRESS DISPHEX TARGET    93
         ST    R15,8(R1)                      ..TO DISPHEX PARMLIST       94
         LA    R15,L'ABNDCODE            ..LENGTH DISPHEX TARGET          95
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST            96
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE           97
         MVI   WTOLINE+(ABNDCODE-ARRMSG1)+3,X'40'   SPACE TO LAST BYTE    98
         BAS   R14,WTORTN                  ISSUE WTO                      99
*        *---------------------------------------*                 JOER   84
*        *     WTO REASON CODE                   *                 JOER   85
*        *---------------------------------------*                 JOER   86
         MODESET MODE=SUP,KEY=ZERO
*        LA      R7,DBGRP                                          JOER
*        USING   DBGRPY,R7                                         JOER
*        DBGRDIE LINKAGE=SVC,LEN=100                               JOER
         L     R8,SDWAXPAD             ADDRESS SDWA EXTENSION PTRS JOER   44
         L     R8,SDWASRVP-SDWAPTRS(R8) ADDRESS OF RECORDABLE XTNSIJOER   45
         UNPK  REACODE(5),SDWACRC+2(3)                             JOER
         TR    REACODE(4),TRTABLE                                  JOER
         MVI   REACODE+4,X'40'                                     JOER
         MVC   WTOLINE(LARRMSG2),ARRMSG2 COPY MESSAGE MODEL TO WORKJOER   87
         BAS   R14,WTORTN                  ISSUE WTO               JOER   99
*        *---------------------------------------*                 JOER  100
*        *     WTO MODULE NAME AND ENTRY POINT   *                 JOER  101
*        *---------------------------------------*                 JOER  102
         MVC   DMOD1,MODNMECL                                      JOER
         TM    FLAG,XMEM             Q. is This Prog in ot asid    JOER
         BZ    MOVEMESS
         MVC   ASIDLIT,=C' In Asid '
MOVEMESS DS    0H
*        TM    FLAG+1,EC1R64                 Q. Module rmod64      JOER
*        BZ    RMOD131
*        MVC   DMODLD64(8)
         MVC   WTOLINE(LDMODMSG),DMODMSG COPY MESSAGE MODEL TO WORKAREA  103
*KMOD    DS    0H
*        CLI   MODNAME,X'00'
*        BE    CKEST
*        MVC   WTOLINE+(DMOD1-DMODMSG)(L'SDWANAME),MODNAME               111
*        B     AESTPARM                  FORMAT LOAD POINT               107
*KEST    DS    0H
*        CLI   ESTMOD,X'00'              IS MODULE NAME IN PARMLIST?     104
*        BE    NESTPARM                  NO; GET MODULE NAME FROM SDWA   105
*        MVC   WTOLINE+(DMOD1-DMODMSG)(L'ESTMOD),ESTMOD                  106
*        B     AESTPARM                  FORMAT LOAD POINT               107
*ESTPARM DS    0H                                                        108
*        CLI   SDWANAME,X'00'            IS MODULE NAME IN SDWA ?        109
*        BE    CKMOD                     NO; DO NOT COPY FROM SDWA       110
*        MVC   WTOLINE+(DMOD1-DMODMSG)(L'SDWANAME),SDWANAME              111
*        B     AESTPARM
AESTPARM DS    0H                                                        112
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST     113
         TM    FLAG+1,EC1R64                 Q. Module rmod64      JOER
         BZ    RMOD131
         OI    FLAG+3,US
         LA    R15,MODSTART              ADDRESS OF SDWA ENTRY POINT     121
         B     AESTLOAD                  FORMAT ENTRY POINT              117
RMOD131  DS    0H
         LA    R15,MODSTART+4            ADDRESS OF SDWA ENTRY POINT     121
         B     AESTLOAD                  FORMAT ENTRY POINT              117
         ICM   R9,15,SDWAPARM          ADDRESS OF USER PARM ADDRESS       47
         ICM   R9,15,0(R9)             ADDRESS OF USER PARM               48
         USING ESTPARM,R9              MAP USER PARMLIST                  49
         ICM   R15,15,ESTLOAD            ENTRY POINT FROM PARMLIST       114
         BZ    NESTLOAD                  =0; GET FROM SDWA               115
         LA    R15,ESTLOAD               ADDRESS OF ENTRY POINT          116
         B     AESTLOAD                  FORMAT ENTRY POINT              117
NESTLOAD DS    0H                                                        118
         ICM   R15,15,SDWAEPA            MODULE ENTRY POINT FROM SDWA    119
         BZ    CKMODST                   =0; DO NOT FORMAT ENTRY PT      120
         LA    R15,SDWAEPA               ADDRESS OF SDWA ENTRY POINT     121
         B     AESTLOAD
CKMODST  DS    0H
*        TM    FLAG,IS64                                           JOER
*        BZ    TRST
*        LG    R15,MODSTART
         LA    R15,MODSTART+4            ADDRESS OF SDWA ENTRY POINT     121
AESTLOAD DS    0H                                                        122
         ST    R15,0(R1)                 SAVE ENTRY PT IN DISPHEX PARMS  123
         TM    FLAG+1,EC1R64                 Q. Module rmod64      JOER
         BZ    RMOD131#
         LA    R15,8                     ..LENGTH OF DISPHEX SOURCE      124
         B     STLEN
RMOD131# DS    0H
         LA    R15,4                     ..LENGTH OF DISPHEX SOURCE      124
STLEN    DS    0H
         ST    R15,4(R1)                 ..TO DISPHEX PARMLIST           125
         LA    R15,WTOLINE+(DMODLOD-DMODMSG) ..ADDRESS DISPHEX TARGET    126
         ST    R15,8(R1)                      ..TO DISPHEX PARMLIST      127
         TM    FLAG+1,EC1R64                 Q. Module rmod64      JOER
         BZ    RMOD131$
         LA    R15,L'DMODLD64            ..LENGTH DISPHEX TARGET         128
         B     STOUT
RMOD131$ DS    0H
         LA    R15,L'DMODLOD             ..LENGTH DISPHEX TARGET         128
STOUT    DS    0H
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST           129
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE          130
         NI    FLAG+3,255-US
         TM    FLAG,XMEM                 Q. did abend occurin other
         BZ    NSDWLOAD
         LA    R15,SDWAPRIM              Input data
         ST    R15,0(R1)
         LA    R15,2
         STCM  R15,B'0011',4(R1)
         LA    R15,WTOLINE+(ASIDPRT-DMODMSG)
         ST    R15,8(R1)
         LA    R15,L'ASIDPRT
         ST    R15,12(R1)
         BAL   R14,DISPHEX
NSDWLOAD DS    0H                                                        131
         BAS   R14,WTORTN                ISSUE WTO                       132
         NI    FLAG+3,255-US
*        *---------------------------------------*                       133
*        *     WTO PSW AND ABEND OFFSET          *                       134
*        *---------------------------------------*                       135
         MVI   WTOLINE,X'40'
         MVC   WTOLINE+1(L'WTOLINE-1),WTOLINE
         MVI   DPSWMSG,X'40'
         MVC   DPSWMSG+1(LDPSWMSG-1),DPSWMSG
         MVC   DPSWMSG,=AL2(LDPSWMSG-2)
         MVC   PSWLIT,=C'PSW at the time of Error: '
         TM    FLAG,IS641
         BZ    OFF_31
         MVC   OFFLIT64,=C' Offset: '
         B     SETBL
OFF_31   DS    0H
         MVC   OFFLIT,=C' Offset: '
SETBL    DS    0H
         MVC   WTOLINE(LDPSWMSG),DPSWMSG COPY MESSAGE MODEL TO WORKAREA  136
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST     137
         TM    FLAG,IS641
         BZ    CK31PSW
         L     R5,SDWAXPAD
         USING SDWAPTRS,R5
         L     R5,SDWAXEME
         DROP  R5
         USING SDWARC4,R5
         LA    R15,SDWAPSW16
         ST    R15,0(R1)
         LA    R15,L'SDWAPSW16
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST         141
         B     STFRMT
CK31PSW  DS    0H
         LA    R15,SDWAEC1               ..SDWA PSW                      138
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST           139
         LA    R15,8                       ..LENGTH OF DISPHEX SOURCE    140
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST         141
STFRMT   DS    0H
         LA    R15,FORMAT                      ..ADDRESS DISPHEX TARGET  142
         ST    R15,8(R1)                       ..TO DISPHEX PARMLIST     143
         TM    FLAG,IS641
         BZ    SET16
         LA    R15,32                    ..LENGTH DISPHEX TARGET         144
         B     SETLAST
SET16    DS    0H
         LA    R15,16                    ..LENGTH DISPHEX TARGET         144
SETLAST  DS    0H
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST           145
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE          146
*                                        COPY 1ST WORD PSW TO WTO        147
         MVC   WTOLINE+(DPSW1-DPSWMSG)(L'DPSW1),FORMAT                   148
*                                          COPY 2ST WORD PSW TO WTO      149
         MVC   WTOLINE+(DPSW2-DPSWMSG)(L'DPSW2),FORMAT+L'DPSW1           150
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST     151
         TM    FLAG,IS641
         BZ    SETDISP
         LA    R15,SDWAPSW16+8       2ND WORD OF PSW                     152
         MVC   WTOLINE+(DPSW3-DPSWMSG)(L'DPSW3),FORMAT+L'DPSW1+L'DPSW2   148
*                                          COPY 2ST WORD PSW TO WTO      149
         MVC   WTOLINE+(DPSW4-DPSWMSG)(L'DPSW2),FORMAT+L'DPSW1*3         150
         LG    R15,0(R15)
         LG    R14,MODSTART
         B     SUB15
SETDISP  DS    0H
         L     R15,SDWAEC1+4         2ND WORD OF PSW                     152
CLEAR10MD DS   0H
         LA    R15,0(R15)                CLEAR AMODE BIT                 153
SETEPA   DS    0H
         L     R14,MODST31
SUB15    DS    0H
         TM    FLAG,IS641
         BZ    DOIT31
         SGR   R15,R14
         B     SAVEFORM
DOIT31   DS    0H
         SR    R15,R14                   SUBRTRACT TO FIND DISPLAC       160
         BNH   WPSWMSG                   LE 0; OFFSET IS INVALID         161
*ETFM    DS    0H
SAVEFORM DS    0H
         ST    R15,FORMAT                SAVE OFFSET                     162
         LA    R15,FORMAT                ADDRESS OF SAVSD OFFSET         163
         ST    R15,0(R1)                 OFFSET TO DISPHEX PARMLIST      164
         LA    R15,4                     ..LENGTH OF DISPHEX SOURCE      165
         ST    R15,4(R1)                 ..TO DISPHEX PARMLIST           166
         TM    FLAG,IS641
         BZ    OFF31
         LA    R15,WTOLINE+(OFFSET64-DPSWMSG) ..ADDRESS DISPHEX TARGET   167
         B     SETOFF
OFF31    DS    0H
         LA    R15,WTOLINE+(OFFSET-DPSWMSG) ..ADDRESS DISPHEX TARGET     167
SETOFF   DS    0H
         ST    R15,8(R1)                    ..TO DISPHEX PARMLIST        168
         LA    R15,L'OFFSET              ..LENGTH DISPHEX TARGET         169
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST           170
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE          171
WPSWMSG  DS    0H                                                        172
         BAS   R14,WTORTN                ISSUE WTO                       173
         NI    FLAG+3,255-US
*        *---------------------------------------*                       174
*        *     ISSUE WTOS WITH ABEND GENERAL REGS*                       175
*        *---------------------------------------*                       176
         OI    FLAG+2,DOEC1
         MVC   GENMESS,=CL30'General registers at abend:'
         MVC   GENPROG,=8C' '
         BAL   R14,DOREGS
         NI    FLAG+3,255-US                                       JOER
         MVC   ACCMESS,=CL29'Access registers at abend:'
         MVC   ACCPROG,=8C' '
         BAL   R14,DOAR
         NI    FLAG+2,255-DOEC1                                    JOER
*        *---------------------------------------*                       213
*        *     CHECK SDWAEC2                     *                       214
*        *---------------------------------------*                       215
         TM    FLAG+1,IBMSRV                                       JOER
         BZ    DOUSER                                              JOER
         MVC   HOMEPROG,MODNAME                                    JOER
         LA    R1,DISPARM                                          JOER
         L     R5,STCKFRM                                          JOER
         USING LSED,R5                                             JOER
         TM    FLAG+3,ISSVC                                        JOER
         BZ    SETPC                                               JOER
         LA    R15,SVCD                                            JOER
         ST    R15,0(R1)                                           JOER
         LA    R15,2                                               JOER
         ST    R15,4(R1)                                           JOER
         LA    R15,PCNUM                                           JOER
         ST    R15,8(R1)                                           JOER
         LA    R15,4                                               JOER
         ST    R15,12(R1)                                          JOER
         B     CALLDSHX                                            JOER
SETPC    DS    0H                                                  JOER
         LA    R15,LSENPCNB+2                                      JOER
         ST    R15,0(R1)                                           JOER
         LA    R15,2                                               JOER
         ST    R15,4(R1)                                           JOER
         LA    R15,PCNUM                                           JOER
         ST    R15,8(R1)                                           JOER
         LA    R15,4                                               JOER
         ST    R15,12(R1)                                          JOER
CALLDSHX DS    0H                                                  JOER
         BAL   R14,DISPHEX                                         JOER
*        MVC   PRIMPROG,MODNMECL                                   JOER
*        MVC   HOMEPROG,MODNMECL                                   JOER
         L     R5,RBRGEC2        Get the Abend RB                  JOER
         USING RBBASIC,R5                                          JOER
         LA    R1,DISPARM                                          JOER
         LR    R15,R5                                              JOER
         TM    FLAG,IS642                                          JOER
         BZ    EC231                                               JOER
         TM    FLAG+1,LS         On Linkage stack                  JOER
         BZ    SETUPRB                                             JOER
         LG    R14,LSENPSW2-LSED(R5)                               JOER
         B     PRIMR15                                             JOER
SETUPRB  DS    0H                                                  JOER
         L     R5,RBABEC2         Get Abending RB                  JOER
         LR    R15,R5             Copy it over                     JOER
         SH    R15,=H'64'         Point to prefix                  JOER
         USING RBPRFX,R15                                          JOER
         L     R15,RBXSB          Point to prefix                  JOER
         USING XSB,R15                                             JOER
         LG    R14,XSBOPSW16+8    Get 16 byte                      JOER
PRIMR15  DS    0H                                                  JOER
         LG    R15,MODSTHM        GET STARTING ADDRESS             JOER
         SGR   R14,R15            offset to r15                    JOER
         SH    R14,=H'2'                                           JOER
         TM    FLAG+1,LS         On Linkage stack                  JOER
         BZ    STFORMAT                                            JOER
         SH    R14,=H'2'          Pc inst 4 bytes                  JOER
         B     STFORMAT           Put it in format                 JOER
EC231    DS    0H                                                  JOER
         L     R14,SDWANXT2     Get next address                   JOER
         N     R14,=X'7FFFFFFF' Wipe out High Order bit            JOER
         L     R15,MODSH31     Starting address                    JOER
         SR    R14,R15         Get offset                          JOER
         SH    R14,=H'2'                                           JOER
STFORMAT DS    0H                                                  JOER
         STCM  R14,B'0011',OFFPRM                                  JOER
         STCM  R14,B'0011',FORMAT                                  JOER
         LA    R15,FORMAT                                          JOER
         LA    R1,DISPARM                                          JOER
         ST    R15,0(R1)                                           JOER
         LA    R15,2                                               JOER
         ST    R15,4(R1)                                           JOER
         LA    R15,OFFCALL                                         JOER
         ST    R15,8(R1)                                           JOER
         LA    R15,L'OFFCALL                                       JOER
         ST    R15,12(R1)                                          JOER
         BAL   R14,DISPHEX                                         JOER
         TM    FLAG,XMEM               q. running in other asid    JOER
         BZ    THISONE                                             JOER
         MVC   ADDLIT,=C' In Asid '                                JOER
         LA    R1,DISPARM                                          JOER
         LA    R15,SDWAPRIM                                        JOER
*        LA    R15,ASID#                                           JOER
         ST    R15,0(R1)                                           JOER
         LA    R15,L'ASID#                                         JOER
         ST    R15,4(R1)                                           JOER
         LA    R15,ASID                                            JOER
         ST    R15,8(R1)                                           JOER
         LA    R15,L'ASID                                          JOER
         ST    R15,12(R1)                                          JOER
         BAL   R14,DISPHEX                                         JOER
         B     MVEXMESS                                            JOER
THISONE  DS    0H                                                  JOER
         MVI   ADDLIT,C' '                                         JOER
         MVC   ADDLIT+1(L'ADDLIT-1),ADDLIT                         JOER
MVEXMESS DS    0H                                                  JOER
         TM    FLAG+3,ISSVC                                        JOER
         BZ    MAYBEPC                                             JOER
         MVC   TYPSVC,=CL14'Called SVC '                           JOER
         MVC   WTOLINE(LXMEMESS),XMEMESS                           JOER
         B     WTOIT                                               JOER
MAYBEPC  DS    0H                                                  JOER
         TM    FLAG+3,ISIRB                                        JOER
         BO    SETIRB                                              JOER
         TM    FLAG+3,ISSYNC                                       JOER
         BZ    SETPC#                                              JOER
         MVI   TYPSVC,X'40'                                        JOER
         MVC   TYPSVC+1((L'TYPSVC+L'PCNUM)-1),TYPSVC               JOER
         MVC   TYPSVC(7),=C'Called '                               JOER
         MVC   TYPSVC+7(8),MODNMECL                                JOER
         MVC   WTOLINE(LXMEMESS),XMEMESS                           JOER
         B     WTOIT                                               JOER
SETPC#   DS    0H                                                  JOER
         MVC   TYPSVC,=CL14'Called PC #'                           JOER
         MVC   WTOLINE(LXMEMESS),XMEMESS                           JOER
         B     WTOIT                                               JOER
SETIRB   DS    0H                                                  JOER
         MVC   TYPSVC(21),=CL21' Init. a IRB Regs A/R'             JOER
WTOIT    DS    0H                                                  JOER
         MVC   WTOLINE(LXMEMESS),XMEMESS                           JOER
         BAL   R14,WTORTN                                          JOER
         OI    FLAG+2,DOEC2                                        JOER
         NI    FLAG+2,255-DOEC1      Turn off flag                 JOER
         TM    FLAG+3,ISIRB            Q. IS this an IRB           JOER
         BZ    SETMESS                                             JOER
         MVC   genmess,=CL30'General registers at offset  '        JOER
         LA    R1,DISPARM                                          JOER
         LA    R15,OFFPRM                                          JOER
         ST    R15,0(R1)              Address of input field       JOER
         LA    R15,2                  Length of input              JOER
         ST    R15,4(R1)                                           JOER
         LA    R15,GENPROG+4                                       JOER
         ST    R15,8(R1)                                           JOER
         LA    R15,4                                               JOER
         ST    R15,12(R1)                                          JOER
         BAL   R14,DISPHEX                                         JOER
         B     SETGR                                               JOER
SETMESS  DS    0H                                                  JOER
         MVC   genmess,=CL30'General registers at entry to'        JOER
         MVC   GENPROG,MODNMECL                                    JOER
SETGR    DS    0H                                                  JOER
*        LA      R7,DBGRP                                          JOER
*        USING   DBGRPY,R7                                         JOER
*        DBGRDIE LEN=1AA8                                          JOER
         BAL   R14,DOREGS                                          JOER
         TM    FLAG+3,ISIRB            Q. IS this an IRB           JOER
         BZ    SETMESS#                                            JOER
         MVC   ACCMESS,=CL29'Access registers at offset   '        JOER
         LA    R1,DISPARM                                          JOER
         LA    R15,OFFPRM                                          JOER
         ST    R15,0(R1)              Address of input field       JOER
         LA    R15,2                  Length of input              JOER
         ST    R15,4(R1)                                           JOER
         LA    R15,ACCPROG+4                                       JOER
         ST    R15,8(R1)                                           JOER
         LA    R15,4                                               JOER
         ST    R15,12(R1)                                          JOER
         BAL   R14,DISPHEX                                         JOER
         B     SETAR                                               JOER
SETMESS# DS    0H                                                  JOER
         MVC   ACCMESS,=CL29'Access registers at Entry to '        JOER
         MVC   ACCPROG,MODNMECL                                    JOER
SETAR    DS    0H                                                  JOER
         BAL   R14,DOAR                                            JOER
*        *---------------------------------------*                 JOER  213
*        *     ISSUE WTOS WITH ABEND ACCESS REGS *                 JOER  214
*        *---------------------------------------*                 JOER  215
DOUSER   DS    0H
*        *---------------------------------------*                       252
*        *     INVOKE USER ROUTINE               *                       253
*        *---------------------------------------*                       254
         L     R9,PARMREG                                          JOER
*        ICM   R15,15,ESTRTN         USER ROUTINE ADDRESS                255
*        BZ    NUSERTN               =0; NO ROUTINE SPECIFIED            256
*        EREG  R1,R1                 MAKE SURE SDWA ADDRESS IS IN R1     257
*        BASSM R14,R15               INVOKE THE ROUTINE                  258
*        LTR   R15,R15               RC=0 ?                              259
*        BNZ   EXITPERC              NO; PERCOLATE                       260
NUSERTN  DS    0H                                                        261
*        *---------------------------------------*                       262
*        *     RETRY OR PEROCLATE                *                       263
*        *---------------------------------------*                       264
*        LA      R7,DBGRP
*        USING   DBGRPY,R7
*        DBGRDIE LEN=AD2
         ICM   R4,15,ESTRETRY        RETRY ROUTINE ADDRESS               265
         BNZ   EXITRTRY              ë=0; ROUTINE ADDRESS SUPPLIED       266
         B     EXITPERC              NO ROUTINE ADDRESS; PERCOLATE       267
*---------------------------------------------------------------------*  268
*        EXIT ROUTINES                                                *  269
*---------------------------------------------------------------------*  270
*        *---------------------------------------*                       271
*        *     PERCOLATE THE ABEND               *                       272
*        *---------------------------------------*                       273
EXITPERC DS    0H                                                        274
         MVC   WTOLINE(LNRETMSG),NRETMSG  ..OUTPUT PEROCLATE             275
         BAS   R14,WTORTN                 ..MESSAGE                      276
         EREG  R1,R1                   SDWA ADDRESS TO R1                277
         SETRP RC=0                    SET SDWA TO PERCOLATE             278
         B     EXIT                                                      279
*        *---------------------------------------*                       280
*        *     INVOKE THE RETRY ROUTINE          *                       281
*        *---------------------------------------*                       282
EXITRTRY DS    0H                                                        283
*        LR    R0,R7
*        LA      R7,DBGRP                                          JOER
*        USING   DBGRPY,R7                                         JOER
*        DBGRDIE LEN=1BD2                                          JOER
*        LR    R7,R0
         MVC   WTOLINE(LSDRETRY),SDRETRY COPY MESSAGE MODEL TO WORKAREA  284
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST     285
         L     R4,0(,R4)                 Point to acutal address   JOER
         ST    R4,FORMAT                 RETRY ADDRESS TO FORMAT AREA    286
         LA    R15,FORMAT                ..ADDRESS DISPHEX SOURCE        287
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST           288
         LA    R15,4                       ..LENGTH OF DISPHEX SOURCE    289
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST         290
         LA    R15,WTOLINE+(SDRETADR-SDRETRY)  ..ADDRESS DISPHEX TARGET  291
         ST    R15,8(R1)                       ..TO DISPHEX PARMLIST     292
         LA    R15,L'SDRETADR            ..LENGTH DISPHEX TARGET         293
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST           294
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE          295
         BAS   R14,WTORTN                ISSUE WTO                       296
*        LA      R7,DBGRP                                          JOER
*        USING   DBGRPY,R7                                         JOER
*        DBGRDIE LEN=180                                           JOER
*        *---------------------------------------*                       297
*        *     IF THIS IS ARR, BUILD RUB         *                       298
*        *---------------------------------------*                       299
         L     R8,SDWAXPAD             ADDRESS SDWA EXTENSION PTRS        44
         L     R8,SDWASRVP-SDWAPTRS(R8) ADDRESS OF RECORDABLE XTNSION     45
*        CLI   SDWATYPE,SDWATARR       IS THIS AN ARR ?                  300
*        BNE   NOTARRTN                NO; DO NOT BUILD RUB              301
         L     R9,PARMREG
         L     R4,ESTRETRY
         L     R4,0(,R4)
*        LA      R7,DBGRP                                          JOER
*        USING   DBGRPY,R7                                         JOER
*        DBGRDIE LEN=C28                                           JOER
*        MODESET KEY=NZERO,MODE=PROB
         LR    R1,R3                   Point R1 to SDWA
         DROP  R3
         USING SDWA,R1
         ST    R3,SDWAPARMS
         LA    R15,SDWAEND            Get PAramter list
         ST    R15,SDWAPARMS+4
         L     R15,SDWAXPAD             ADDRESS SDWA EXTENSION PTRS       44
         L     R14,0(R15)               Get SDWADSRP
         ST    R14,SDWAPARMS+8
         LA    R14,SDWAREND-SDWANRC1(R14)
         ST    R14,SDWAPARMS+12
         L     R14,4(R15)
         ST    R14,SDWAPARMS+16
         LA    R14,SDWASEND-SDWARC1(R14)
         ST    R14,SDWAPARMS+20
         L     R14,8(R15)
         ST    R14,SDWAPARMS+24
         LA    R14,SDWAIEND-SDWARC2(R14)
         ST    R14,SDWAPARMS+28
         L     R14,12(R15)
         ST    R14,SDWAPARMS+32
         LA    R14,SDWASEN-SDWANRC2(R14)
         ST    R14,SDWAPARMS+36
         L     R14,16(R15)
         ST    R14,SDWAPARMS+40
         LA    R14,SDWALEND-SDWARC3(R14)
         ST    R14,SDWAPARMS+44
         L     R14,20(R15)
         ST    R14,SDWAPARMS+48
         LA    R14,SDWADEND-SDWANRC3(R14)
         ST    R14,SDWAPARMS+52
         L     R14,24(R15)
         ST    R14,SDWAPARMS+56
         LA    R14,SDWAEEND-SDWARC4(R14)
         ST    R14,SDWAPARMS+60
         L     R14,28(R15)
         ST    R14,SDWAPARMS+64
         LA    R14,SDWA5END-SDWARC5(R14)
         O     R14,=X'80000000'
         ST    R14,SDWAPARMS+68
         LA    R14,SDWAPARMS
         MVC   PARMR+4,=F'0'
         ST    R14,PARMR+8
*
         LA    R14,SDWAHEAD
         ST    R14,PARMR+12
         L     R15,DGDGPTR
*        ST    R5,PARMR+4
         LA    R1,PARMR
         BASR  R14,R15
*
*   See who called us
*
          MVI   SDWARCDE,4
          OI    SDWAACF2,SDWAFREE+SDWAUPRG
          MVI   SDWACMPF,X'FF'-SDWAREQ
          ST    R4,SDWARTYA
          L     R15,SDWAXPAD            Get Pointers
          L     R15,SDWASRVP-SDWAPTRS(R15)
          TM    FLAG+1,IBMSRV           Do we have SDWAEC2         JOER
          BZ    DOONE                   Move from GRSRV            JOER
          TM    FLAG+3,ISIRB            Q. Abending RB and IRB     JOER
          BZ    CKIFEC2                 Move Abending registers    JOER
*                              With PSW associated with EC1        JOER
DOONE     DS    0H                                                 JOER
          L     R5,RBRGEC1              Get RB of abend            JOER
          TM    FLAG,IS641              Is it 64 bit mode          JOER
          BO    SET64#                  Set 64 bit regs            JOER
          MVI   SDWARTAM-SDWARC1(R15),SDWARA31
          LTR   R5,R5                   Q. Anything there          JOER
          BNZ   SETFRRB                                            JOER
SETFRRB   DS    0H                                                 JOER
          LA    R15,RBGRSAVE-RBBASIC(R5)                           JOER
          TM    FLAG,IS641              Running is 64 bit          JOER
          BZ    SETSDWSV                                           JOER
          LR    R15,R5                   Point to RB               JOER
          SH    R15,=H'64'               Point to prefix           JOER
          L     R15,RBXSB-RBPRFX(R15)    get XSB                   JOER
          LA    R15,XSBG64H-XSB(R15)     GET HIFG ORDER            JOER
          B     SET64H                                             JOER
CKIFEC2   DS    0H                                                 JOER
         TM    FLAG,IS642                                          JOER
         BZ    SETRP#                                              JOER
         L     R5,RBRGEC2                                          JOER
SET64#   DS    0H                                                  JOER
         MVI   SDWARTAM-SDWARC1(R15),SDWARA31
         OI    SDWARETF-SDWARC1(R15),SDWAUP64
         LR    R15,R5                   Point to RB                JOER
         XR    R3,R3                                               JOER
         TM    FLAG+1,LS                Are regs on stack          JOER
         BZ    GETRB$                                              JOER
         LR    R11,R15                  Point R11 To regs          JOER
         LA    R3,4                     Init index reg at 4        JOER
         B     SET64H                                              JOER
GETRB$   DS    0H                                                  JOER
         SH    R15,=H'64'               Point to prefix            JOER
         LA    R11,RBGRSAVE-RBBASIC(R5)                            JOER
         L     R15,RBXSB-RBPRFX(R15)    get XSB                    JOER
         LA    R15,XSBG64H-XSB(R15)     GET HIFG ORDER             JOER
SET64H   DS    0H                                                  JOER
         L     R14,SDWAXPAD-SDWA(R1)   get Pointers                JOER
         L     R14,SDWAXEME-SDWAPTRS(R14)                          JOER
         LA    R14,SDWAG64-SDWARC4(R14)                            JOER
         LA    R0,16                                               JOER
SX4LOOP  DS    0H                                                  JOER
         LTR   R3,R3             Q. IS is it on linakge atack      JOER
         BZ    MOVE215                                             JOER
         MVC   0(8,R14),0(R15)                                     JOER
         B     BUMP#15                                             JOER
MOVE215  DS    0H                                                  JOER
         MVC   4(4,R14),0(R11)                                     JOER
         MVC   0(4,R14),0(R15)                                     JOER
         LA    R11,4(,R11)                                         JOER
BUMP#15  DS    0H                                                  JOER
         LA    R15,4(,R15)                                         JOER
         LA    R15,0(R3,R15)                                       JOER
         LA    R14,8(,R14)                                         JOER
         BCT   R0,SX4LOOP                                          JOER
         L     R15,SDWAXPAD-SDWA(R1)   get Pointers                JOER
         L     R15,SDWASRVP-SDWAPTRS(R15)                          JOER
         OI    SDWARETF-SDWARC1(R15),SDWAUP64                      JOER
         B     SETRP#                                              JOER
SETSDWSV DS    0H                                                  JOER
         MVC   SDWASRSV,0(R15)                                     JOER
SETRP#   DS    0H                                                  JOER
         B     EXIT                                                      308
NOTARRTN DS    0H                                                        309
         LR    R1,R3                   SDWA ADDRESS TO R1                310
         L     R9,PARMREG
         L     R4,ESTRETRY
         L     R4,0(,R4)
         SETRP RC=4,RETREGS=YES,RETADDR=(R4),FRESDWA=YES,DUMP=NO         311
         B     EXIT                                                      312
         DROP  R1
         USING SDWA,R3
*-----------------------------------------------------------*      JOER
*       validate SDWAEC1                                    *      JOER
*-----------------------------------------------------------*      JOER
VALEC1#  DS    0H                                                  JOER
         TM    FLAG,IS641         Q. Is SDWA1EC1 64 bit            JOER
         BO    SET64EC1           seup for 64 bit compare          JOER
         XC    WNEXT,WNEXT        Clear work PSW                   JOER
         MVC   WNEXT+4(4),SDWAEC1+4                                JOER
         NI    WNEXT+4,X'7F'       Turn of for compare             JOER
*                                                                  JOER
*      Check if EC1 is in Range                                    JOER
*                                                                  JOER
         CLC   WNEXT+4(4),MODST31      Q. Less than start          JOER
         BLR   R14                     a. Not Valid                JOER
         CLC   WNEXT+4(4),MODE31       Q. Check Against end        JOER
         BHR   R14                                                 JOER
         OI    FLAG+1,VALEC1           indcate EC1 is Valid        JOER
         BR    R14                     Check SDWAEC2               JOER
SET64EC1 DS    0H                                                  JOER
         L      R5,SDWAXPAD      ADDRESS OF RECORDABLE XTNSION     JOER   45
         L      R5,SDWAXEME-SDWAPTRS(,R5)  to X64 Stuff            JOER
         USING  SDWARC4,R5                                         JOER
         MVC    WNEXT,SDWAPSW16+8                                  JOER
         NI    WNEXT+8,X'7F'               Wipe out high order     JOER
         CLC   WNEXT,MODSTART         Q. Check 64 bit address      JOER
         BL    CKEC2                     NO; CHECK EC2             JOER
         CLC   WNEXT,MODEND          Q. Ending address             JOER
         BHR   R14                     No; check ec2               JOER
         OI    FLAG+1,VALEC1           Indcate valid               JOER
         BR    R14                                                 JOER
*-----------------------------------------------------------*      JOER
*       validate SDWAEC2                                    *      JOER
*-----------------------------------------------------------*      JOER
VALEC2#  DS    0H                                                  JOER
         TM    FLAG,IS642             Is SDWAEC2 a 64 bit add      JOER
         BO    SET64EC2               Setup for 64 bit compare     JOER
         XC    WNEXT,WNEXT            Clear Work PSW               JOER
         MVC   WNEXT+4(4),SDWAEC2+4  Move in PSW NEXT ADDR         JOER
         NI    WNEXT+4,X'7F'          Turn off bit                 JOER
         CLC   WNEXT+4(4),MODSH31    Compare ag start              JOER
         BLR   R14                   no valid                      JOER
         CLC   WNEXT+4(4),MODEN31    Compare ag end                JOER
         BHR   R14                                                 JOER
         OI    FLAG+1,VALEC2                                       JOER
         BR    R14                                                 JOER
SET64EC2 DS    0H                                                  JOER
         L     R5,RBRGEC2           the RB for SDWAEC2             JOER
         TM    FLAG+1,LS            Is this on the linkaage stacj  JOER
         BZ    ONRB                 NO; ON RB                      JOER
         MVC   WNEXT,LSENPSW2-LSED(R5)  Move work fied             JOER
         B     CMPPSW                                              JOER
ONRB     DS    0H                                                  JOER
         LR    R15,R5               Point R15 there                JOER
         SH    R15,=H'64'           Point to prefix                JOER
         USING RBPRFX,R15                                          JOER
         L     R15,RBXSB            set prefix                     JOER
         DROP  R15                                                 JOER
         USING XSB,R15                                             JOER
         MVC   WNEXT,XSBOPSW16+8                                   JOER
CMPPSW   DS    0H                                                  JOER
         CLC   WNEXT,MODSTHM                                       JOER
         BLR   R14                                                 JOER
         CLC   WNEXT,MODEHM                                        JOER
         BHR   R14                                                 JOER
         OI    FLAG+1,VALEC2                                       JOER
         BR    R14
*-----------------------------------------------------------*      JOER
*       PopuPate gpr 64 bit register                        *      JOER
*                                                           *
*       On entry                                            *
*                                                           *
*       R15 = 64 BIT Gpr if regs are linkage stack or       *
*           Are in SDWAXEME                                 *
*           or if regs are in rb high order in XSB          *
*                                                           *
*       R1 if regs are in rb high order                     *
*-----------------------------------------------------------*      JOER
SET64BUF DS    0H                                                  JOER
         LA    R8,SIXFOUR                                          JOER
         LA    R0,16                                               JOER
SXFOURLP DS    0H                                                  JOER
         TM    FLAG+2,DOEC1                  are regs on linkage stJOER
         BO    MOV15                                               JOER
         TM    FLAG+1,LS                     are regs on linkage stJOER
         BO    MOV15                                               JOER
         MVC   0(4,R8),0(R15)                                      JOER
         MVC   4(4,R8),0(R1)                                       JOER
         B     BUMP8                                               JOER
MOV15    DS    0H                                                  JOER
         MVC   0(8,R8),0(R15)                                      JOER
         LA    R15,4(,R15)                                         JOER
BUMP8    DS    0H                                                  JOER
         LA    R8,8(,R8)                                           JOER
         LA    R15,4(,R15)                                         JOER
         TM    FLAG+2,DOEC1                  EC1 AND 64 ON SDWAXEMEJOER
         BO    MOVER1                                              JOER
         TM    FLAG+1,LS                     are regs on linkage stJOER
         BO    BCTDEC                                              JOER
MOVER1   DS    0H
         LA    R1,4(,R1)                                           JOER
BCTDEC   DS    0H                                                  JOER
         BCT   R0,SXFOURLP                                         JOER
         BR    R14                                                 JOER
*---------------------------------------------------------------*
*             DISPLAY GPR                                       *
*---------------------------------------------------------------*
DOREGS   DS    0H
         ST    R14,SAVE14                   Save Link Registers
         TM    FLAG+2,DOEC1                 Are we Processing SDWAEC1
         BO    CKIF64                       Yes; Check if its 64 bit
         TM    FLAG,IS642
         BZ    NO64
         TM    FLAG+1,LS                     are regs on linkage stack
         BZ    GETFRB
         L     R5,STCKFRM
         USING LSED,R5
         LA    R15,LSENGRGS
         B     GOTO64
GETFRB   DS    0H
         L     R5,RBRGEC2                    Point to reg RB
         USING RBBASIC,R5
         LR    R15,R5
         SH    R15,=H'64'
         USING RBPRFX,R15
         L     R15,RBXSB                    Point to xsb
         USING XSB,R15
         LA    R15,XSBG64H
         LA    R1,RBGRS0
GOTO64   DS    0H
         BAS   R14,SET64BUF
         B     NO64
CKIF64   DS    0H
         TM    FLAG,IS641
         BZ    NO64
         L     R5,SDWAXPAD
         USING SDWAPTRS,R5
         L     R5,SDWAXEME
         DROP  R5
         USING SDWARC4,R5
         LA    R15,SDWATX_PITDB_G64
         BAS   R14,SET64BUF
*
NO64     DS    0H
         MVC   WTOLINE(LGENREGS),GENREGS ..ISSUE REGISTER                177
         BAS   R14,WTORTN                ..MESSAGE                       178
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST     179
         MVI   MREG1,X'40'
         MVC   MREG1+1(LMREG1-1),MREG1
         MVC   R0LIT,=C'    R0:'
         TM    FLAG+2,DOEC1
         BO    CK641
         TM    FLAG,IS642
         BZ    SETR1
         B     SETR131
CK641    DS    0H
         TM    FLAG,IS641
         BZ    SETR1
SETR131  DS    0H
         MVC   R1LIT64,=C'    R1:'
         B     DOR2
SETR1    DS    0H
         MVC   R1LIT,=C'    R1:'
         MVC   R2LIT,=C'    R2:'
         MVC   R3LIT,=C'    R3:'
DOR2     DS    0H
         MVC   MREG1,=AL2(LMREG1-2)
         MVI   MREG2,X'40'
         MVC   MREG2+1(LMREG2-1),MREG2
         TM    FLAG+2,DOEC1
         BO    CK644
         TM    FLAG,IS642
         BO    R4LIT#
         B     SETR4
CK644    DS    0H
         TM    FLAG,IS641
         BZ    SETR4
R4LIT#   DS    0H
         MVC   R4LIT,=C'    R2:'
         MVC   DR3LIT64,=C'    R3:'
         B     DOR4
SETR4    DS    0H
         MVC   R4LIT,=C'    R4:'
         MVC   R5LIT,=C'    R5:'
         MVC   R6LIT,=C'    R6:'
         MVC   R7LIT,=C'    R7:'
DOR4     DS    0H
         MVC   MREG2,=AL2(LMREG2-2)
         MVI   MREG3,X'40'
         MVC   MREG3+1(LMREG3-1),MREG3
         TM    FLAG+2,DOEC1
         BO    CK645
         TM    FLAG,IS642
         BO    SETR831
         B     SETR8
CK645    DS    0H
         TM    FLAG,IS641
         BZ    SETR8
SETR831  DS    0H
         MVC   R8LIT,=C'    R4:'
         MVC   R5LIT64,=C'    R5:'
         B     DOR6
SETR8    DS    0H
         MVC   R8LIT,=C'    R8:'
         MVC   R9LIT,=C'    R9:'
         MVC   R10LIT,=C'   R10:'
         MVC   R11LIT,=C'   R11:'
DOR6     DS    0H
         MVC   MREG3,=AL2(LMREG3-2)
         MVI   MREG4,X'40'
         MVC   MREG4+1(LMREG4-1),MREG4
         MVC   MREG4(2),=AL2(LMREG4-2)
         TM    FLAG+2,DOEC1
         BO    CK646
         TM    FLAG,IS642
         BO    R12LIT#
         B     SETR12
CK646    DS    0H
         TM    FLAG,IS641
         BZ    SETR12
R12LIT#  DS    0H
         MVC   R12LIT,=C'    R6:'
         MVC   R7LIT64,=C'    R7:'
         OI    FLAG+3,US
         B     DOR8
SETR12   DS    0H
         MVC   R12LIT,=C'   R12:'
         MVC   R13LIT,=C'   R13:'
         MVC   R14LIT,=C'   R14:'
         MVC   R15LIT,=C'   R15:'
         B     GETREG
DOR8     DS    0H
         MVI   MREG5,X'40'
         MVC   MREG5+1(LMREG5-1),MREG5
         MVC   MREG4,=AL2(LMREG4-2)
         MVC   R8LIT64,=C'    R8:'
         MVC   R9LIT64,=C'    R9:'
         MVC   MREG5,=AL2(LMREG5-2)
*
         MVI   MREG6,X'40'
         MVC   MREG6+1(LMREG6-1),MREG6
         MVC   R10LIT64,=C'   R10:'
         MVC   R11LIT64,=C'   R11:'
         MVC   MREG6,=AL2(LMREG6-2)
*
         MVI   MREG7,X'40'
         MVC   MREG7+1(LMREG7-1),MREG7
         MVC   R12LIT64,=C'   R12:'
         MVC   R13LIT64,=C'   R13:'                                JOER
         MVC   MREG7,=AL2(LMREG7-2)                                JOER
*                                                                  JOER
         MVI   MREG8,X'40'                                         JOER
         MVC   MREG8+1(LMREG8-1),MREG8                             JOER
         MVC   R14LIT64,=C'   R14:'                                JOER
         MVC   R15LIT64,=C'   R15:'                                JOER
         MVC   MREG8,=AL2(LMREG8-2)                                JOER
GETREG   DS    0H                                                  JOER
         TM    FLAG+2,DOEC1                                        JOER
         BO    CKIF64#                                             JOER
         TM    FLAG,IS642                                          JOER
         BO    SXFRPTR                                             JOER
         L     R5,RBRGEC2                 Point to regs            JOER
         B     POINT15                                             JOER
CKIF64#  DS    0H                                                  JOER
         TM    FLAG,IS641                                          JOER
         BO    SXFRPTR                                             JOER
         L     R5,RBRGEC1                 Point to regs            JOER
         LTR   R5,R5                      Maybe RB MAYBE not       JOER
         BNZ   POINT15                                             JOER
         LA    R15,SDWAGRSV                                        JOER
         B     SET15                                               JOER
POINT15  DS    0H                                                  JOER
         LA    R14,SDWASRSV                                        JOER
         LA    R0,16                                               JOER
         TM    FLAG+1,LS          registers on stack               JOER
         BZ    ITSONRB                                             JOER
         LR    R15,R5                                              JOER
         LA    R5,4                                                JOER
         AR    R15,R5
         B     SRSVLOOP                                            JOER
ITSONRB  DS    0H                                                  JOER
         LA    R15,RBGRSAVE-RBBASIC(R5)                            JOER
         XR    R5,R5                                               JOER
SRSVLOOP DS    0H                                                  JOER
         MVC   0(4,R14),0(R15)          Move to srsv               JOER
         LA    R15,4(R5,R15)            BUMP LINKAGE STACK         JOER
         LA    R14,4(,R14)              Bump up                    JOER
         BCT   R0,SRSVLOOP              loop thru                  JOER
         LA    R15,SDWASRSV             Point to reg save          JOER
         B     SET15                                               JOER
SXFRPTR  DS    0H                                                  JOER
         LA    R15,SIXFOUR                Point to 64 BUFFER       JOER
SET15    DS    0H                                                  JOER
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST     JOER  181
         TM    FLAG+2,DOEC1               64                       JOER
         BO    CKIF64##                                            JOER
         TM    FLAG,IS642                 64                       JOER
         BO    SET64LEN                                            JOER
         B     SETL64                                              JOER
CKIF64## DS    0H                                                  JOER
         TM    FLAG,IS641                 64                       JOER
         BZ    SETL64                                              JOER
SET64LEN DS    0H                                                  JOER
         LA    R15,L'SIXFOUR                                       JOER
         B     ST15L                                               JOER
SETL64   DS    0H                                                  JOER
         LA    R15,L'SDWAGRSV              ..LENGTH OF DISPHEX SOURJOER  182
ST15L    DS    0H                                                  JOER
         ST    R15,4(R1)                 ..TO DISPHEX PARMLIST     JOER  181
STFRMTX  DS    0H                                                  JOER
         LA    R15,FORMAT                    ..ADDRESS DISPHEX TARGJOER  184
         ST    R15,8(R1)                     ..TO DISPHEX PARMLIST JOER  185
         TM    FLAG+2,DOEC1                                        JOER
         BO    CKFOR64                                             JOER
         TM    FLAG,IS642                                          JOER
         BO    ISEC164                                             JOER
         B     SXLEN                                               JOER
CKFOR64  DS    0H                                                  JOER
         TM    FLAG,IS641                                          JOER
         BO    ISEC164                                             JOER
SXLEN    DS    0H                                                  JOER
         LA    R15,L'SDWASRSV*2                                    JOER
         B     LASTPARM                                            JOER
ISEC164  DS    0H                                                  JOER
         LA    R15,L'SIXFOUR*2           ..LENGTH DISPHEX TARGET   JOER  186
         OI    FLAG+3,US                                           JOER
LASTPARM DS    0H                                                  JOER
         ST    R15,12(R1)                ..TO DISPHEX PARMLIST     JOER  187
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE    JOER  188
         NI    FLAG+3,255-US                                       JOER
         MVC   WTOLINE(LMREG1),MREG1                       ..ISSUE JOER  189
         TM    FLAG+2,DOEC1                                        JOER
         BO    CK64$                                               JOER
         TM    FLAG,IS642                                          JOER
         BZ    FRACC1                                              JOER
         B     DOR0R1                                              JOER
CK64$    DS    0H                                                  JOER
         TM    FLAG,IS641                                          JOER
         BZ    FRACC1                                              JOER
DOR0R1   DS    0H
         MVC   WTOLINE+(DREG0-MREG1)(L'DREG0+1),FORMAT+0     ..WTO       190
         MVC   WTOLINE+(DREG0-MREG1+9)(L'DREG0),FORMAT+9     ..WTO       190
         MVC   WTOLINE+(DREG164-MREG1)(L'DREG0+1),FORMAT+17     ..WTO    190
         MVC   WTOLINE+(DREG164-MREG1+9)(L'DREG1),FORMAT+26     ..WTO    190
         B     SETTWO
FRACC1   DS    0H
         MVC   WTOLINE+(DREG0-MREG1)(L'DREG0),FORMAT+0*8   ..WTO         190
         MVC   WTOLINE+(DREG1-MREG1)(L'DREG1),FORMAT+1*8   ..WITH        191
         MVC   WTOLINE+(DREG2-MREG1)(L'DREG2),FORMAT+2*8   ..FOUR        192
         MVC   WTOLINE+(DREG3-MREG1)(L'DREG3),FORMAT+3*8   ..REGISTERS   193
SETTWO   DS    0H
         BAS   R14,WTORTN                                  ..FROM FMT    194
         MVC   WTOLINE(LMREG2),MREG2                     ..ISSUE         195
         TM    FLAG+2,DOEC1
         BO    CKFR64
         TM    FLAG,IS642
         BZ    FRACC2
         B     SET64M2
CKFR64   DS    0H
         TM    FLAG,IS641
         BZ    FRACC2
SET64M2  DS    0H
         MVC   WTOLINE+(DREG264-MREG2)(L'DREG4+1),FORMAT+34   ..WTO      196
         MVC   WTOLINE+(9+(DREG264-MREG2))(L'DREG4),FORMAT+43            196
         MVC   WTOLINE+(DREG364-MREG2)(L'DREG4+1),FORMAT+51   ..WTO      196
         MVC   WTOLINE+(9+(DREG364-MREG2))(L'DREG4),FORMAT+60   ..WTO    196
         B     SET3
FRACC2   DS    0H
         MVC   WTOLINE+(DREG4-MREG2)(L'DREG4),FORMAT+4*8 ..WTO           196
         MVC   WTOLINE+(DREG5-MREG2)(L'DREG5),FORMAT+5*8 ..WITH          197
         MVC   WTOLINE+(DREG6-MREG2)(L'DREG6),FORMAT+6*8 ..FOUR          198
         MVC   WTOLINE+(DREG7-MREG2)(L'DREG7),FORMAT+7*8 ..REGISTERS     199
SET3     DS    0H
         BAS   R14,WTORTN                                ..FROM FORMAT   200
         MVC   WTOLINE(LMREG3),MREG3                        ..ISSUE      201
         TM    FLAG+2,DOEC1
         BO    CK64R3
         TM    FLAG,IS642
         BZ    FRACC3
         B     SET64R3
CK64R3   DS    0H
         TM    FLAG,IS641
         BZ    FRACC3
SET64R3  DS    0H
         MVC   WTOLINE+(DREG464-MREG3)(L'DREG8+1),FORMAT+68     ..WTO    202
         MVC   WTOLINE+(9+(DREG464-MREG3))(L'DREG8),FORMAT+77            202
         MVC   WTOLINE+(DREG564-MREG3)(L'DREG8+1),FORMAT+85     ..WITH   203
         MVC   WTOLINE+(9+(DREG564-MREG3))(L'DREG8),FORMAT+94            202
         B     SET4
FRACC3   DS    0H
         MVC   WTOLINE+(DREG8-MREG3)(L'DREG8),FORMAT+8*8    ..WTO        202
         MVC   WTOLINE+(DREG9-MREG3)(L'DREG9),FORMAT+9*8    ..WITH       203
         MVC   WTOLINE+(DREG10-MREG3)(L'DREG10),FORMAT+10*8 ..FOUR       204
         MVC   WTOLINE+(DREG11-MREG3)(L'DREG11),FORMAT+11*8 ..REGISTERS  205
SET4     DS    0H
         BAS   R14,WTORTN                                   ..FROM FMT   206
         MVC   WTOLINE(LMREG4),MREG4                          ..ISSUE    207
         TM    FLAG+2,DOEC1
         BO    CKFR64R4
         TM    FLAG,IS642
         BZ    FRACC4
         B     SET64R4
CKFR64R4 DS    0H
         TM    FLAG,IS641
         BZ    FRACC4
SET64R4  DS    0H
         MVC   WTOLINE+(DREG664-MREG4)(L'DREG12+1),FORMAT+102    ..WTO   208
         MVC   WTOLINE+(9+(DREG664-MREG4))(L'DREG12),FORMAT+111          208
         MVC   WTOLINE+(DREG764-MREG4)(L'DREG12+1),FORMAT+119    ..WITH  209
         MVC   WTOLINE+(9+(DREG764-MREG4))(L'DREG12),FORMAT+128          209
         B     SET5
FRACC4   DS    0H
         MVC   WTOLINE+(DREG12-MREG4)(L'DREG12),FORMAT+12*8   ..WTO
         MVC   WTOLINE+(DREG13-MREG4)(L'DREG13),FORMAT+13*8   ..WITH
         MVC   WTOLINE+(DREG14-MREG4)(L'DREG14),FORMAT+14*8   ..FOUR
         MVC   WTOLINE+(DREG15-MREG4)(L'DREG15),FORMAT+15*8   ..REGS
SET5     DS    0H
         BAS   R14,WTORTN                                   ..FROM FMT   206
         TM    FLAG+2,DOEC1
         BO    CKLS64
         TM    FLAG,IS642
         BZ    EXITREG
         B     SETM5
CKLS64   DS    0H
         TM    FLAG,IS641
         BZ    EXITREG
SETM5    DS    0H
*
         MVC   WTOLINE(LMREG5),MREG5                          ..ISSUE    207
         MVC   WTOLINE+(DREG864-MREG5)(L'DREG12+1),FORMAT+136    ..WTO   208
         MVC   WTOLINE+(9+(DREG864-MREG5))(L'DREG12),FORMAT+145          208
         MVC   WTOLINE+(DREG964-MREG5)(L'DREG12+1),FORMAT+153    ..WTO   208
         MVC   WTOLINE+(9+(DREG964-MREG5))(L'DREG12),FORMAT+162          208
         BAS   R14,WTORTN                                     ..FROMFMT  212
*
         MVC   WTOLINE(LMREG6),MREG6                          ..ISSUE    207
         MVC   WTOLINE+(DREG1064-MREG6)(L'DREG12+1),FORMAT+170    ..WTO  208
         MVC   WTOLINE+(9+(DREG1064-MREG6))(L'DREG12),FORMAT+179         208
         MVC   WTOLINE+(DREG1164-MREG6)(L'DREG12+1),FORMAT+187           209
         MVC   WTOLINE+(9+(DREG1164-MREG6))(L'DREG12),FORMAT+196         209
         BAS   R14,WTORTN                                     ..FROMFMT  212
*
         MVC   WTOLINE(LMREG7),MREG7                          ..ISSUE    207
         MVC   WTOLINE+(DREG1264-MREG7)(L'DREG12+1),FORMAT+204    ..WTO  208
         MVC   WTOLINE+(9+(DREG1264-MREG7))(L'DREG12),FORMAT+213         208
         MVC   WTOLINE+(DREG1364-MREG7)(L'DREG12+1),FORMAT+221   ..WITH  209
         MVC   WTOLINE+(9+(DREG1364-MREG7))(L'DREG12),FORMAT+230         209
         BAS   R14,WTORTN                                     ..FROMFMT  212
*
         MVC   WTOLINE(LMREG8),MREG8                          ..ISSUE    207
         MVC   WTOLINE+(DREG1464-MREG8)(L'DREG12+1),FORMAT+238    ..WTO  208
         MVC   WTOLINE+(9+(DREG1464-MREG8))(L'DREG12),FORMAT+247         208
         MVC   WTOLINE+(DREG1564-MREG8)(L'DREG12+1),FORMAT+255   ..WITH  209
         MVC   WTOLINE+(9+(DREG1564-MREG8))(L'DREG12),FORMAT+264         209
         BAS   R14,WTORTN                                     ..FROMFMT  212
EXITREG  DS    0H
         NI    FLAG+3,255-US
         L     R14,SAVE14
         BR    R14
*------------------------------------------------------------------*
*                do the access registers                           *
*------------------------------------------------------------------*
DOAR     DS    0H
         ST    R14,SAVE14
         MVC   WTOLINE(LACCREGS),ACCREGS ..ISSUE REGISTER                216
         BAS   R14,WTORTN                ..MESSAGE                       217
         LA    R1,DISPARM                ADDRESS OF DISPHEX PARMLIST     218
         TM    FLAG+2,DOEC1
         BO    SETAA
         L     R8,SDWAXPAD        ADDRESS SDWA EXTENSION PTRS      JOER   44
         L     R8,SDWASRVP-SDWAPTRS(R8) ADDRESS OF RECORDABLE XTNS JOER   45
         TM    SDWAXFLG,SDWAINTF    Linkage stack entry            JOER
         BO    GETSTCK                                             JOER
         L     R5,RBRGEC2                Point to abend rb         JOER
         LR    R15,R5                    POINT TO R5               JOER
         SH    R15,=H'64'                                          JOER
         USING RBPRFX,R15                                          JOER
         L     R15,RBXSB                                           JOER
         DROP  R15                                                 JOER
         USING XSB,R15                                             JOER
         LA    R15,XSBARS                                          JOER
         B     STR15                                               JOER
GETSTCK  DS    0H                                                  JOER
         L     R5,STCKFRM                Point to abend rb         JOER
         USING LSED,R5                                             JOER
         LA    R15,LSENARGS                                        JOER
         LA    R14,SDWAARSV                                        JOER
         LA    R0,16                                               JOER
ARLOOP   DS    0H                                                  JOER
         MVC   0(4,R14),0(R15)                                     JOER
         LA    R14,4(,R14)                                         JOER
         LA    R15,4(,R15)                                         JOER
         BCT   R0,ARLOOP                                           JOER
SETAA    DS    0H                                                  JOER
         LA    R15,SDWAARER              ..ADDRESS OF PSW REGISTERSJOER  219
STR15    DS    0H                                                  JOER
         ST    R15,0(R1)                 ..TO DISPHEX PARMLIST     JOER  220
         LA    R15,L'SDWAARER              ..LENGTH OF DISPHEX SOURJOER  221
         ST    R15,4(R1)                   ..TO DISPHEX PARMLIST   JOER  222
         LA    R15,FORMAT                ..ADDRESS DISPHEX TARGET  JOER  223
         ST    R15,8(R1)                 ..TO DISPHEX PARMLIST     JOER  224
         LA    R15,L'SDWAARER*2            ..LENGTH DISPHEX TARGET JOER  225
         ST    R15,12(R1)                  ..TO DISPHEX PARMLIST   JOER  226
         BAS   R14,DISPHEX               INVOKE DISPHEX ROUTINE    JOER  227
         MVC   WTOLINE(LMAR1),MAR1                         ..ISSUE JOER  228
         MVC   WTOLINE+(DAR0-MAR1)(L'DAR0),FORMAT+0*8   ..WTO      JOER  229
         MVC   WTOLINE+(DAR1-MAR1)(L'DAR1),FORMAT+1*8   ..WITH     JOER  230
         MVC   WTOLINE+(DAR2-MAR1)(L'DAR2),FORMAT+2*8   ..FOUR     JOER  231
         MVC   WTOLINE+(DAR3-MAR1)(L'DAR3),FORMAT+3*8   ..REGISTERS      232
         BAS   R14,WTORTN                               ..FROM FMT       233
         MVC   WTOLINE(LMAR2),MAR2                    ..ISSUE            234
         MVC   WTOLINE+(DAR4-MAR2)(L'DAR4),FORMAT+4*8 ..WTO              235
         MVC   WTOLINE+(DAR5-MAR2)(L'DAR5),FORMAT+5*8 ..WITH             236
         MVC   WTOLINE+(DAR6-MAR2)(L'DAR6),FORMAT+6*8 ..FOUR             237
         MVC   WTOLINE+(DAR7-MAR2)(L'DAR7),FORMAT+7*8 ..REGISTERS        238
         BAS   R14,WTORTN                             ..FROM FORMAT      239
         MVC   WTOLINE(LMAR3),MAR3                       ..ISSUE         240
         MVC   WTOLINE+(DAR8-MAR3)(L'DAR8),FORMAT+8*8    ..WTO           241
         MVC   WTOLINE+(DAR9-MAR3)(L'DAR9),FORMAT+9*8    ..WITH          242
         MVC   WTOLINE+(DAR10-MAR3)(L'DAR10),FORMAT+10*8 ..FOUR          243
         MVC   WTOLINE+(DAR11-MAR3)(L'DAR11),FORMAT+11*8 ..REGISTERS     244
         BAS   R14,WTORTN                                ..FROM FMT      245
         MVC   WTOLINE(LMAR4),MAR4                           ..ISSUE     246
         MVC   WTOLINE+(DAR12-MAR4)(L'DAR12),FORMAT+12*8  ..WTO          247
         MVC   WTOLINE+(DAR13-MAR4)(L'DAR13),FORMAT+13*8  ..WITH         248
         MVC   WTOLINE+(DAR14-MAR4)(L'DAR14),FORMAT+14*8  ..FOUR         249
         MVC   WTOLINE+(DAR15-MAR4)(L'DAR15),FORMAT+15*8  ..REGS         250
         BAS   R14,WTORTN                                 ..FROM FMT     251
         L     R14,SAVE14
         BR    R14
*---------------------------------------------------------------------*  313
*        DISPHEX SUBROUTINE                                           *  314
* FUNCTION:                                                           *  315
*   TRANSLATE BINARY NUMBER (HEX) NUMBER TO CHAR10CTER NUMBER.        *  316
*   THIS ROUTINE WILL TRUNCATE INPUT OR PAD OUTPUT SO THAT OUTPUT     *  317
*   IS TWICE INPUT SIZE.  THE MAXIMUM INPUT SIZE IS 128 BYTES.        *  318
* INPUT:                                                              *  319
*   ADDRESS OF PARMLIST IN R1                                         *  320
*   PARMLIST FIELDS:                                                  *  321
*   DS    A    ADDRESS OF INPUT FIELD                                 *  322
*   DS    F    LENGTH OF INPUT FIELD                                  *  323
*   DS    A    ADDRESS OF OUTPUT FIELD                                *  324
*   DS    F    LENGTH OF OUTPUT FIELD                                 *  325
*---------------------------------------------------------------------*  326
DISPHEX  DS    0H                                                        327
         BAKR  R14,0                   BUILD STACK STATE ENTRY           328
         LM    R4,R7,0(R1)             LOAD REGS FROM PARMLIST           329
         LA    R8,DISPBUF              Init buffer                 JOER
         LA    R9,272                  length                      JOER
         XR    R15,R15                 Clear R15                   JOER
         XR    R14,R14                 CLEAR R14                   JOER
         MVCL  R8,R14                  Clear Buffer                JOER
         LR    R0,R6                   Point to r6                 JOER
         LR    R1,R5                   INPUT LENGTH TO R1                330
         SLL   R1,1                    * 2                               331
         CR    R7,R1                   IS OUTPUT LENGTH >= 2 * INPUT ?   332
         BNL   LENGTHOK                YES; CONTINUE                     333
         LR    R5,R7                   ..OUTPUT LENGTH                   334
         SRL   R5,1                    ..DIVIDED BY 2 IS NEW INPUT LEN   335
LENGTHOK DS    0H                                                        336
         EREG  R1,R1                   EXTRACT PARMLIST ADDR FROM STACK  337
         STM   R4,R7,0(R1)             SAVE REGS IN PARMLIST             338
UNPKLP   DS    0H                                                        339
         IC    R0,0(R4)               INPUT BYTE                         340
         STC   R0,1(R6)               SAVE IN OUTPUT                     341
         SRL   R0,4                   SHIFT INPUT BYTE                   342
         STC   R0,0(R6)               SAVE IN OUTPUT                     343
         LA    R4,1(R4)                POINT AT NEXT INPUT BYTE          344
         LA    R6,2(R6)                POINT AT NEXT OUTPUT BYTE         345
BCTIT    DS    0H
         BCT   R5,UNPKLP               LOOP FOR LENGTH OF INPUT          346
         EREG  R1,R1                   EXTRACT PARMLIST ADDR FROM STACK  347
         LM    R4,R7,0(R1)             LOAD REGS FROM PARMLIST           348
         NI    0(R6),X'0F'             TURN OFF HIGH ORDER BITS 1ST BYT  349
         BCTR  R7,0                    LENGTH LESS 1                     350
         BCTR  R7,0                    LESS 1 FOR EXECUTE                351
         EX    R7,MVZ1                 PROPOGATE HIGH ORDER BITS OFF     352
         B     AMVZ1
MVZ1     MVZ   1(0,R6),0(R6)           ** EXECUTE ONLY **                354
AMVZ1    DS    0H                                                        355
         LA    R7,1(0,R7)              INCREASE TO LENGTH-1              356
         EX    R7,TR1                  UNPACK INPUT INTO OUTPUT          357
         B     ATR1                    BRANCH AROUND EXECUTE             358
TR1      TR    0(0,R6),TRTAB           ** EXECUTE ONLY **                359
ATR1     DS    0H                                                        360
*---------------------------------------------------------------*  JOER
*             Routine to move '_' after 8 character             *  JOER
*                                                               *  JOER
*          FLAG+3,US IS On                                      *  JOER
*---------------------------------------------------------------*  JOER
         LA    R7,1(,R7)                Bump it up                 JOER
         TM    FLAG+3,US                                           JOER
         BZ    FINDISP                                             JOER
         LA    R8,DISPBUF                Work area                 JOER
         LR    R5,R6                     Point to start of buffer  JOER
         AR    R5,R7                     Max buffer                JOER
         LR    R0,R6
UNDLOOP  DS    0H                                                  JOER
         CR    R6,R5                                              JOER
         BH    ALLDONE                                             JOER
         MVC   0(8,R8),0(R6)             Move first 8              JOER
         LA    R7,1(,R7)                 Bump up ctr               JOER
         MVI   8(R8),C'_'                Move under score          JOER
         MVC   9(8,R8),8(R6)             Move next                 JOER
         LA    R6,16(R6)                                           JOER
         LA    R8,17(,R8)                                          JOER
         B     UNDLOOP                                             JOER
ALLDONE  DS    0H                                                  JOER
         LR    R6,R0                   Point R6 back               JOER
         LA    R8,DISPBUF              Point to buffer             JOER
         LR    R9,R7                   Point to buffer             JOER
         MVCL  R6,R8                   Move to it back             JOER
FINDISP  DS    0H                                                  JOER
         EREG  R15,R1                  RESTORE REGS 0,1,AND 15           361
         PR                            RESTORE STACK                     362
TRTABLE  DC    240X'00'
         DC    C'0123456789ABCDEF'     TRANSLATION  TABLE                363
TRTAB    DS    CL256                   TRANSLATION  TABLE                363
         ORG   TRTAB                                               JOER
         DC    C'0123456789ABCDEF'     TRANSLATION  TABLE                363
         ORG   TRTAB+C'_'                                          JOER
         DC    C'_'                                                JOER
*---------------------------------------------------------------------*  364
*        WTO ROUTINE                                                  *  365
*---------------------------------------------------------------------*  366
WTORTN   DS 0H                                                           367
         BAKR  R14,0                   SAVE ENVIRONMENT ON STACK         368
*        TM    ESTFLAG2,@ESTNWTO       NO WTOS?                          369
*        BO    WTORETN1                YES; EXIT ROUTINE                 370
         LA    R5,WTOLINE             ADDRESS OF WTO TEXT                371
         L     R8,SDWAXPAD             ADDRESS SDWA EXTENSION PTRS        44
         L     R8,SDWASRVP-SDWAPTRS(R8) ADDRESS OF RECORDABLE XTNSION     45
         CLI   SDWATYPE,SDWATEST       IS PROGRAM CHECK FOR AN ESTAE?    372
         BE    ESTWTO                  YES; ISSUE STANDARD WTO           373
         LA    R0,1                    ..EXTRACT PSW INTO                374
         ESTA  R0,R0                   ..INTO REGS 0 AND 1               375
         N     R0,=A(X'00010000')      TURN OFF ALL BUT PROBLEM BIT      376
         BNZ   WTORETN1                 =0; IN PROBLEM STATE: EXIT       377
         SAC   0                       SET PRIMARY SPACE MODE            378
         SPKA  0                       GET A KEY 0 PSW                   379
         WTO   TEXT=(R5),LINKAGE=BRANCH,MF=(E,WTOLIST)                   380
*                                      ISSUE WTO WITHOUT SVC35           381
         B     WTORETN                 CONTINUE                          382
ESTWTO   DS    0H                                                        383
         WTO   TEXT=(R5),MF=(E,WTOLIST)                                  384
         L     R15,DGDGPTR
         ST    R5,PARMR+4
         LA    R1,PARMR
         BASR  R14,R15
*                                      ISSUE WTO WITH SVC35              385
WTORETN  DS    0H                                                        386
         MVI   WTOLINE,X'40'                     ..SET TEXT LINE         387
         MVC   WTOLINE+1(L'WTOLINE-1),WTOLINE    ..TO SPACES             388
         LA    R5,4                             ..WITH LENGTH            389
         STCM  R5,B'0011',WTOLINE               ..OF 4                   390
WTORETN1 DS    0H                                                        391
         EREG  R15,R1                  RESTORE REGS 15,0 AND 1           392
         PR                            RETURN TO CALLER                  393
CARR     DC    CL8'CARR'
*---------------------------------------------------------------------*  394
*        COMMON EXIT                                                  *  395
*---------------------------------------------------------------------*  396
EXIT     DS    0H                                                        397
*        LA      R7,DBGRP                                          JOER
*        USING   DBGRPY,R7                                         JOER
*        DBGRDIE LEN=180                                           JOER
         ENDMOD             RESTORE REGISTERS AND RETURN                 398
*---------------------------------------------------------------------*  399
*        CONSTANTS                                                    *  400
*---------------------------------------------------------------------*  401
*        *---------------------------------------*                       402
*        *     WTO PARMLIST MODEL                *                       403
*        *---------------------------------------*                       404
WTOLISTM WTO   TEXT=(R5),MF=L                                            405
LWTOLIST EQU   *-WTOLISTM                                                406
*        *---------------------------------------*                       407
*        *     USER PARM NOT SUPPLIED            *                       408
*        *---------------------------------------*                       409
NPARMSG  DC    AL2(LNPARMSG)                                             410
         DC    C'User parm has not been supplied - percolating'          411
LNPARMSG EQU   *-NPARMSG                                                 412
*        *---------------------------------------*                       413
*        *     Xmem Message                      *                       414
*        *---------------------------------------*                       415
XMEMESS  DC    AL2(LXMEMESS-2)                                           416
         DC    C'Program: '                                              417
HOMEPROG DS    CL8                                                       418
         DC    2C' '                                                     419
TYPSVC   DS    CL14
PCNUM    DS    XL4
         DC    2C' '
         DC    3C' '
         DC    C' At offset '
OFFCALL  DS    CL4
         DC    2C' '
ADDLIT   DS    CL9
ASID     DS    XL4
         DC    CL2' '
LXMEMESS EQU   *-XMEMESS                                                 420
*        *---------------------------------------*                       413
*        *     SDWA ADDRESS                      *                       414
*        *---------------------------------------*                       415
SDWMSG1  DC    AL2(LSDWMSG1)                                             416
         DC    C'SDWA address: '                                         417
SDWAADDR DS    CL8                                                       418
         DC    C' '                                                      419
LSDWMSG1 EQU   *-SDWMSG1                                                 420
*        *---------------------------------------*                       421
*        *     ABEND CODE                        *                       422
*        *---------------------------------------*                       423
ARRMSG1  DC    AL2(LARRMSG1)                                             424
         DC    C'Abend code:   '                                         425
ABNDCODE DS    CL4                                                       426
         DC    C' '                                                      427
LARRMSG1 EQU   *-ARRMSG1                                                 428
*        *---------------------------------------*                 JOER  421
*        *     REASON CODE                       *                 JOER  422
*        *---------------------------------------*                 JOER  423
ARRMSG2  DC    AL2(LARRMSG2)                                       JOER  424
RETLIT   DC    CL14'Reason code: '                                 JOER  425
REACODE  DS    CL4                                                 JOER  426
         DS    C                                                   JOER  427
LARRMSG2 EQU   *-ARRMSG2                                           JOER  428
*        *---------------------------------------*                       429
*        *     DISPLAY MODULE INFORMATION        *                       430
*        *---------------------------------------*                       431
DMODMSG  DC    AL2(LDMODMSG)                                             432
         DC    C'Module name:  '                                         433
DMOD1    DC    CL8'n/a'                                                  434
         DC    C'  Entry point: '                                        435
DMODLOD  DC    CL8'n/a'                                                  436
         ORG   DMODLOD                                             JOER
DMODLD64 DS    CL17                                                JOER
ASIDLIT  DS    CL9
ASIDPRT  DS    CL4
LDMODMSG EQU   *-DMODMSG                                           JOER  437
*        *---------------------------------------*                 JOER  429
*        *     DISPLAY RB INFORMATION            *                 JOER  430
*        *---------------------------------------*                 JOER  431
DRBMSG   DC    AL2(LDMODMSG)                                       JOER  432
         DC    C'SVC '                                             JOER  433
SVCNUM#  DS    XL2                                                 JOER
         DS    X                                                   JOER
         DC    C' Abended, was called from offset: '               JOER
RBOFF    DS    CL5                                                 JOER  435
LDRBMSG  EQU   *-DMODMSG                                           JOER  437
*        *---------------------------------------*                       438
*        *     DISPLAY PSW                       *                       439
*        *---------------------------------------*                       440
DPSWMSG  DS    AL2                                                       441
PSWLIT   DS    CL26                                                      442
DPSW1    DS    CL8                                                       443
         DS    C                                                         444
DPSW2    DS    CL8                                                       445
OFFLIT   DS    CL9                                                       446
OFFSET   DS    CL8                                                       447
         ORG   OFFLIT+1
DPSW3    DS    CL8
         DS    C
DPSW4    DS    CL8
OFFLIT64 DS    CL9
OFFSET64 DS    CL8
LDPSWMSG EQU   *-DPSWMSG                                                 448
*        *---------------------------------------*                       449
*        *     GENERAL REGISTERS                 *                       450
*        *---------------------------------------*                       451
GENREGS  DC    AL2(LGENREGS)                                             452
genmess  DS    CL30                                                      453
         DC    CL2' '
GENPROG  DS    CL8
LGENREGS EQU   *-GENREGS                                                 454
*        *---------------------------------------*                       455
*        *     DISPLAY REGISTERS 1               *                       456
*        *---------------------------------------*                       457
MREG1    DS    AL2                                                 JOER  458
R0LIT    DS    CL7                                                 JOER  459
DREG0    DS    CL8                                                 JOER  460
R1LIT    DS    CL7                                                 JOER  461
DREG1    DS    CL8                                                 JOER  462
R2LIT    DS    CL7                                                 JOER  463
DREG2    DS    CL8                                                 JOER  464
R3LIT    DS    CL7                                                 JOER  465
DREG3    DS    CL8                                                 JOER  466
         ORG   DREG1+4                                             JOER
R1LIT64  DS    CL7                                                 JOER
DREG164  DS    CL17                                                JOER
         ORG   DREG3+8                                             JOER
LMREG1   EQU   *-MREG1                                             JOER  467
*        *---------------------------------------*                       468
*        *     DISPLAY REGISTERS 2               *                       469
*        *---------------------------------------*                       470
MREG2    DS    AL2                                                 JOER  471
R4LIT    DS    CL7                                                 JOER  472
DREG4    DS    CL8                                                 JOER  473
R5LIT    DS    CL7                                                 JOER  474
DREG5    DS    CL8                                                 JOER  475
R6LIT    DS    CL7                                                 JOER  476
DREG6    DS    CL8                                                 JOER  477
R7LIT    DS    CL7                                                 JOER  478
DREG7    DS    CL8                                                 JOER  479
         ORG   DREG4                                               JOER
DREG264  DS    CL17                                                JOER
         DS    CL2                                                 JOER
DR3LIT64 DS    CL7                                                 JOER
DREG364  DS    CL17                                                JOER
         ORG   DREG7+8                                             JOER
LMREG2   EQU   *-MREG2                                             JOER  480
*        *---------------------------------------*                       481
*        *     DISPLAY REGISTERS 3               *                       482
*        *---------------------------------------*                       483
MREG3    DS    AL2(LMREG3)                                         JOER  484
R8LIT    DS    CL7                                                 JOER  485
DREG8    DS    CL8                                                 JOER  486
R9LIT    DS    CL7                                                 JOER  487
DREG9    DS    CL8                                                 JOER  488
R10LIT   DS    CL7                                                 JOER  489
DREG10   DS    CL8                                                 JOER  490
R11LIT   DS    CL7                                                 JOER  491
DREG11   DS    CL8                                                 JOER  492
         ORG   DREG8                                               JOER
DREG464  DS    CL17                                                JOER
         DS    CL2                                                 JOER
R5LIT64  DS    CL7                                                 JOER
DREG564  DS    CL17                                                JOER
         ORG   DREG11+8                                            JOER
LMREG3   EQU   *-MREG3                                             JOER  493
*        *---------------------------------------*                 JOER  494
*        *     DISPLAY REGISTERS 4               *                 JOER  495
*        *---------------------------------------*                 JOER  496
MREG4    DS    AL2                                                 JOER  497
R12LIT   DS    CL7                                                 JOER  498
DREG12   DS    CL8                                                 JOER  499
R13LIT   DS    CL7                                                 JOER  500
DREG13   DS    CL8                                                 JOER  501
R14LIT   DS    CL7                                                 JOER  502
DREG14   DS    CL8                                                 JOER  503
R15LIT   DS    CL7                                                 JOER  504
DREG15   DS    CL8                                                 JOER  505
         ORG   DREG12                                              JOER
DREG664  DS    CL17                                                JOER
         DS    CL2                                                 JOER
R7LIT64  DS    CL7                                                 JOER
DREG764  DS    CL17                                                JOER
         ORG   DREG15+8                                            JOER
LMREG4   EQU   *-MREG4                                             JOER  506
*        *---------------------------------------*                 JOER  494
*        *     DISPLAY REGISTERS 5               *                 JOER  495
*        *---------------------------------------*                 JOER  496
MREG5    DS    AL2                                                 JOER
R8LIT64  DS    CL7                                                 JOER
DREG864  DS    CL17                                                JOER
         DS    CL2                                                 JOER
R9LIT64  DS    CL7                                                 JOER
DREG964  DS    CL17                                                JOER
LMREG5   EQU   *-MREG5                                             JOER
*        *---------------------------------------*                 JOER  494
*        *     DISPLAY REGISTERS 6               *                 JOER  495
*        *---------------------------------------*                 JOER  496
MREG6    DS    AL2                                                 JOER
R10LIT64 DS    CL7                                                 JOER
DREG1064 DS    CL17                                                JOER
         DS    CL2                                                 JOER
R11LIT64 DS    CL7                                                 JOER
DREG1164 DS    CL17                                                JOER
LMREG6   EQU   *-MREG6                                             JOER
*        *---------------------------------------*                 JOER  494
*        *     DISPLAY REGISTERS 6               *                 JOER  495
*        *---------------------------------------*                 JOER  496
MREG7    DS    AL2                                                 JOER
R12LIT64 DS    CL7                                                 JOER
DREG1264 DS    CL17                                                JOER
         DS    CL2                                                 JOER
R13LIT64 DS    CL7                                                 JOER
DREG1364 DS    CL17                                                JOER
LMREG7   EQU   *-MREG7                                             JOER
*        *---------------------------------------*                 JOER  494
*        *     DISPLAY REGISTERS 7               *                 JOER  495
*        *---------------------------------------*                 JOER  496
MREG8    DS    AL2                                                 JOER
R14LIT64 DS    CL7                                                 JOER
DREG1464 DS    CL17                                                JOER
         DS    CL2                                                 JOER
R15LIT64 DS    CL7                                                 JOER
DREG1564 DS    CL17                                                JOER
LMREG8   EQU   *-MREG8                                             JOER
*        *---------------------------------------*                       507
*        *     ACCESS  REGISTERS                 *                       508
*        *---------------------------------------*                       509
ACCREGS  DC    AL2(LACCREGS)                                             510
ACCMESS  DS    CL29                                                      511
         DC    CL2' '
ACCPROG  DS    CL8
LACCREGS EQU   *-ACCREGS                                                 512
*        *---------------------------------------*                       513
*        *     DISPLAY ACCESS REGISTERS          *                       514
*        *---------------------------------------*                       515
MAR1     DC    AL2(LMAR1)                                                516
         DC    C'  AR0:'                                                 517
DAR0     DS    CL8                                                       518
         DC    C'   AR1:'                                                519
DAR1     DS    CL8                                                       520
         DC    C'   AR2:'                                                521
DAR2     DS    CL8                                                       522
         DC    C'   AR3:'                                                523
DAR3     DS    CL8                                                       524
LMAR1    EQU   *-MAR1                                                    525
*        *---------------------------------------*                       526
*        *     DISPLAY REGISTERS 2               *                       527
*        *---------------------------------------*                       528
MAR2     DC    AL2(LMAR2)                                                529
         DC    C'  AR4:'                                                 530
DAR4     DS    CL8                                                       531
         DC    C'   AR5:'                                                532
DAR5     DS    CL8                                                       533
         DC    C'   AR6:'                                                534
DAR6     DS    CL8                                                       535
         DC    C'   AR7:'                                                536
DAR7     DS    CL8                                                       537
LMAR2    EQU   *-MAR2                                                    538
*        *---------------------------------------*                       539
*        *     DISPLAY REGISTERS 3               *                       540
*        *---------------------------------------*                       541
MAR3     DC    AL2(LMAR3)                                                542
         DC    C'  AR8:'                                                 543
DAR8     DS    CL8                                                       544
         DC    C'   AR9:'                                                545
DAR9     DS    CL8                                                       546
         DC    C'  AR10:'                                                547
DAR10    DS    CL8                                                       548
         DC    C'  AR11:'                                                549
DAR11    DS    CL8                                                       550
LMAR3    EQU   *-MAR3                                                    551
*        *---------------------------------------*                       552
*        *     DISPLAY REGISTERS 4               *                       553
*        *---------------------------------------*                       554
MAR4     DC    AL2(LMAR4)                                                555
         DC    C' AR12:'                                                 556
DAR12    DS    CL8                                                       557
         DC    C'  AR13:'                                                558
DAR13    DS    CL8                                                       559
         DC    C'  AR14:'                                                560
DAR14    DS    CL8                                                       561
         DC    C'  AR15:'                                                562
DAR15    DS    CL8                                                       563
LMAR4    EQU   *-MAR4                                                    564
*        *---------------------------------------*                       565
*        *     RETRY ROUTINE ADDRESS             *                       566
*        *---------------------------------------*                       567
SDRETRY  DC    AL2(LSDRETRY)                                             568
         DC    C'Invoking Retry Routine at address:   '                  569
SDRETADR DS    CL8                                                       570
         DC    C' '                                                      571
LSDRETRY EQU   *-SDRETRY                                                 572
*        *---------------------------------------*                       573
*        *     NO RETRY MESSAGE                  *                       574
*        *---------------------------------------*                       575
NRETMSG  DC    AL2(LNRETMSG)                                             576
         DC    C'Return to RTM with percolation '                        577
LNRETMSG EQU   *-NRETMSG                                                 578
*                                                                  JOER
*         Get abend regs and prog name from tc/tb/cde chain        JOER
*         to determine starting and ending address                 JOER
*                                                                  JOER
*         R7 --> TCB                                               JOER
*         R6 -> CDE                                                JOER
*         R5 -> RB/XLST                                            JOER
*                                                                  JOER
GETRB    DS    0H                                                  JOER
         USING TCB,R7                                              JOER
         USING RBBASIC,R5                                          JOER
         CR    R5,R7                   is this the tcb             JOER
         BE    CKTOP                  yes;                         JOER
         TM    FLAG+3,ISSVRB                                       JOER
         BZ    CKTOP                                               JOER
         CLI   RBSTAB1,X'00'           IS this a prb               JOER
         BNE   CKTOP                   NO;                         JOER
         CLI   12(R5),X'00'            Not sync rb                 JOER
         BNE   CKTOP                                               JOER
         ST    R5,SVPRB                                            JOER
CKTOP    DS    0H                                                  JOER
         CR    R5,R7                   End of list ?               JOER
         BNE   CKPRB                   no                          JOER
         TM    FLAG+1,TOPOLST                                      JOER
         BRO   EXITLP                                              JOER
         OI    FLAG+1,TOPOLST             Indcate found ab rb      JOER
         L     R5,TCBRBP               top of list                 JOER
CKPRB    DS    0H                                                  JOER
         CLC   RBLINKB,RBABEND$+1     is back = abended rb         JOER
         BNE   COMPPSW                no                           JOER
         ST    R5,RBREG               point to register rb         JOER
         B     GETPNME                Exit this section            JOER
NXTRB    DS    0H                                                  JOER
         ICM   R5,B'0111',RBLINKB                                  JOER
         BNZ   GETRB                                               JOER
COMPPSW  DS    0H                                                  JOER
         CLC   WORKPSW,RBOPSW             Q. This the abendend rb  JOER
         BNE   NXTRB                                               JOER
         CLI   RBSTAB1,RBFTPRB            Q. Is This an PRB        JOER
         BE    STREG                                               JOER
         TM    RBSTAB1,RBFTSVRB           Q. Is This an SVRB       JOER
         BO    STREG                                               JOER
         OI    FLAG+3,ISIRB                                        JOER
         MVC   MODST31,RBCDE                                       JOER
         NI    MODST31+3,X'FE'           Turn of 1 bit             JOER
STREG    DS    0H                                                  JOER
         TM    RBCDFLGS,RBCDSYNC          Q. sync macro            JOER
         BZ    SETR5                                               JOER
         OI    FLAG+3,ISSYNC                                       JOER
SETR5    DS    0H                                                  JOER
         ST    R5,RBABEND$                store it                 JOER
         MVC   CDE#+1,RBCDE1              save the cde             JOER
         B     NXTRB                                               JOER
*----------------------------------------------------------*       JOER
*         Once we got rb and regs get cde to figure length *       JOER
*         From XLST                                        *       JOER
*----------------------------------------------------------*       JOER
GETPNME  DS    0H                                                  JOER
         TM    FLAG+3,ISSVRB                                       JOER
         BZ    CKCDE                                               JOER
         L     R15,SVPRB         GET ASSOCIATED PRB                JOER
         BCTR  R15,0             Back upto get SVC #               JOER
         MVC   SVC#,0(R15)                                         JOER
         XR    R15,R15                                             JOER
         IC    R15,SVC#                                            JOER
         CVD   R15,DBLWRD                                          JOER
         L     R15,DBLWRD+4                                        JOER
         SRL   R15,4                                               JOER
         STCM  R15,B'0011',SVCD                                    JOER
         B     EXITLP                                              JOER
CKCDE    DS    0H                                                  JOER
         TM    FLAG+3,ISIRB                                        JOER
         BO    EXITLP                                              JOER
         XR    R6,R6             Clear Work Register               JOER
         L     R6,CDE#                                             JOER
         LTR   R6,R6             Do we have a cde                  JOER
         BRZ   EXITLP            No Leave routine                  JOER
         OI    FLAG,ISCDE        Say we have a cde                 JOER
         USING CDENTRY,R6                                          JOER
         MVC   WORKNME,CDNAME    Move name                         JOER
         TM    CDENTPT3,CDEMOD64 Runs in 64 bit mode               JOER
         BZ    CDE31             No 31 bit mode                    JOER
         TM    CDATTRB,CDCDEX    ex  exits                         JOER
         BZ    EXITLP            no; exit                          JOER
         DROP  R6                                                  JOER
         USING CDE64,R6                                            JOER
         LR    R0,R6            Save ptr                           JOER
         L     R6,CDECDX        Get ext ptr                        JOER
         DROP  R6               tell assembler                     JOER
         USING CDX,R6           DITTO                              JOER
         MVC   WORKENT,CDXEntpt64                                  JOER
         L     R6,CDXXTLST64ADDR  get extent addr                  JOER
         LTR   R6,R6             Zero                              JOER
         BNZ   GETEX64          get extents                        JOER
         LR    R6,R0            Reset pointer                      JOER
         B     GETEX                                               JOER
GETEX64  DS    0H                                                  JOER
         USING XTL64,R6         64 bit extent pointer              JOER
         LA    R6,XTL64_LEN(,R6)                                   JOER
         DROP  R6
         USING XTL64E,R6
         L     R6,XTL64E_EXTENTADDR                                JOER
         LG    R6,XTL64E_ExtentLen                                 JOER
         L     R0,WORKENT                                          JOER
         AGR   R0,R6                                               JOER
         STG   R0,WORKEND                                          JOER
         B     EXITLP                                              JOER
CDE31    DS    0H                                                  JOER
        DROP   R6                                                  JOER
         USING CDENTRY,R6                                          JOER
         MVC   WORKS31,CDENTPT         Move Starting               JOER
         NI    WORKS31,X'7F'           Wipe out high order bit     JOER
         LR    R0,R6                                               JOER
GETMAJ   DS    0H                                                  JOER
         TM    CDATTR,CDMIN                                        JOER
         BZ    GETEX                                               JOER
         L     R6,CDXLMJP                                          JOER
         B     GETMAJ                                              JOER
GETEX    DS    0H                                                  JOER
         L     R5,CDXLMJP                                         JOER
         USING XTLST,R5                                            JOER
         L     R0,XTLMSBLA                 Get Length              JOER
         NIHH  R0,X'7FFF'                  Wipe out high order     JOER
         A     R0,WORKS31                                          JOER
         ST    R0,WORKE31                                          JOER
EXITLP   DS    0H                                                  JOER
         BR    R14
SDWAHEAD DC A(SDWAHD),A(SDWADNRC1),A(SDWADRC1),A(SDWADNRC2),A(SDWADRC2)X
               ,A(SDWADNRC3),A(SDWADRC3),A(SDWADRC4),A(SDWADRC5+X'80000X
               000')
SDWAHD    DC AL1(L'SDWAHDR)
SDWAHDR   DC C' DUMP OF SDWA AREA'
SDWADNRC1 DC AL1(L'SDWAMRC1)
SDWAMRC1  DC  C'DUMP OF SDWANRC1 AREA'
SDWADRC1  DC  AL1(L'SDWAXRC1)
SDWAXRC1  DC  C'DUMP OF SDWARC1'
SDWADNRC2 DC AL1(L'SDWAXRC2)
SDWAXRC2  DC C'DUMP OF SDWANRC2'
SDWADRC2  DC AL1(L'SDWAMRC2)
SDWAMRC2  DC C'DUMP OF SDWANRC2'
SDWADRC3  DC AL1(L'SDWAXRC3)
SDWAXRC3  DC C'DUMP OF SDWARC3'
SDWADNRC3 DC AL1(L'SDWAMRC3)
SDWAMRC3  DC C'DUMP OF SDWANRC3'
SDWADRC4  DC AL1(L'SDWAMRC4)
SDWAMRC4  DC C'DUMP OF SDWARC4'
SDWADRC5  DC AL1(L'SDWAMRC5)
SDWAMRC5  DC C'DUMP OF SDWARC5'
*---------------------------------------------------------------------*  364
*        Get Information from nucleus                                 *  365
*---------------------------------------------------------------------*  366
         LTORG                                                     JOER
GETNUCK  DS    0H                                                  JOER
         ST    R14,SAVE14                                          JOER
         SYSSTATE AMODE64=YES,RMODE64=YES                          JOER
         NUCLKUP BYADDR,ADDR=WNEXT+4,NAME=MODABEND                 JOER
         LR    R4,R5                                               JOER
*        TM    FLAG,XMEM                 IS it xmem                JOER
*        BO    SETX                                                JOER
*        LAY   R5,SRBW                                             JOER
*        B     MVENME#                                             JOER
*ETX     DS    0H                                                  JOER
         LA    R5,SRBX                                             JOER
MVENME#  DS    0H                                                  JOER
         USING SRBDSECT,R5                                         JOER
         MVC   MODNMECL,MODABEND         Move module name          JOER
         MVC   NAME,MODABEND             Move module name          JOER
         ST    R0,MODST31                                          JOER
         NI    MODST31,X'7F'                                       JOER
         MVC   MODEPA+4(4),MODST31                                 JOER
         MVC   $CSECT,0(R1)              Move csect                JOER
*                                                                  JOER
         NUCLKUP BYNAME,NAME=MODABEND,ADDR=WNEXT+4                 JOER
         L     R0,MODST31                                          JOER
         ST    R1,MODLEN+4                                         JOER
         AR    R0,R1                                               JOER
         ST    R0,MODE31                                           JOER
         LR    R5,R4                                               JOER
         L     R14,SAVE14                                          JOER
         BR    R14                                                 JOER
*---------------------------------------------------------------------*  364
*        Run CSVQUERY As SRB/ or rtn                                  *  365
*---------------------------------------------------------------------*  366
CSVQ     DS    0D                                                  JOER
         USING CSVQ,R15                                            JOER
         LR    R5,R1                                               JOER
         USING SRBDSECT,R5                                         JOER
         LR    R3,R15                                              JOER
         DROP  R15                                                 JOER
         USING FRRPARM,R2                                          JOER
         ST    R3,MODSTRT                                          JOER
         LA    R4,CSVQLEN                                          JOER
         ST    R4,MOD_END                                          JOER
         USING CSVQ,R3                                             JOER
         LR    R12,R14                                             JOER
          CSVQUERY INADDR64=INST,                                  JOERX
               SEARCH=JPALPA,                                      JOERX
               ANCESTORJPQ=YES,                                    JOERX
               OUTLENGTH64=MODLEN,                                 JOERX
               OUTEPNM=NAME,                                       JOERX
               OUTEPA64=MODEPA,                                    JOERX
               OUTATTR1=ATTR_1,                                    JOERX
               OUTATTR2=ATTR_2,                                    JOERX
               OUTATTR3=ATTR_3,                                    JOERX
               OUTXATTR1=X_ATTR,                                   JOERX
               OUTVALID=ATTRVAL#,                                  JOERX
               OUTPDATA=P_DATA,                                    JOERX
               OUTDIAG=D_IAG,                                      JOERX
               OUTXTLST=XTLST##,                                   JOERX
               OUTDSKEY=D_SKEY,MF=(E,CSVQD,COMPLETE)               JOER
         LTR   R15,R15                                             JOER
         BZ    RET                                                 JOER
         LR    R0,R15                                              JOER
         LA    R15,4                                               JOER
*                                                                  JOER
RET     DS     0H
        LR     R14,R12                                             JOER
        BR     R14                                                 JOER
*----------------------------------------------------*             JOER
*                Frr rountine                        *             JOER
*----------------------------------------------------*             JOER
FRRTN    DS    0H                                                  JOER
         LR    R3,R15                                              JOER
         USING FRRTN,R3                                            JOER
         LR    R5,R0                                               JOER
         USING SDWA,R1                                             JOER
         L     R2,SDWAPARM
         USING FRRPARM,R2
         L     R9,SDWAXPAD                                         JOER
         USING SDWAPTRS,R9                                         JOER
         L     R8,SDWASRVP                                         JOER
         USING SDWARC1,R8                                          JOER
         L     R7,SDWACRC                                          JOER
         L     R15,MODSTRT                                         JOER
         L     R10,MOD_END                                         JOER
         L     R5,SDWANXT1                                        JOER
         N     R5,=X'7FFFFFFF'                                    JOER
         CR    R15,R5                                              JOER
         BL    PERC                                                JOER
         CR    R14,R5                                              JOER
         BH    PERC                                                JOER
         L     R8,MESSAREA                                         JOER
         MVC   0(30,R8),=C' ABEND AT OFFSET IN CSVQ..... '         JOER
         SR    R5,R15                                              JOER
         STC   R5,WORKA                                            JOER
         UNPK  31(3,R8),WORKA                                      JOER
         L     R15,=A(TRTBL)
         TR    31(2,R8),0(R15)                                     JOER
         BR    R14                                                 JOER
PERC     DS    0H
         SETRP RC=0,RECORD=YES
         BR    R14
         LTORG
TRTBL    DS    0CL256
         DS    CL240
         DC    C'0123456789ABCDEF'                                 JOER
SRBW    DS     XL(SRBDLEN)      Parm area for XMEM IN XMEM ASID    JOER
CSVQLEN EQU    *-CSVQ                                              JOER
         COPY DBGRLIT                                              JOER
SRBDSECT DSECT                                                     JOER
INST     DS    D                                                   JOER
MODEPA   DS    0D                                                  JOER
EPA64    DS    F                                                   JOER
EPA31    DS    F                                                   JOER
MODLEN   DS    D                                                   JOER
         CSVQUERY PLISTVER=MAX,MF=(L,CSVQD)                        JOER
NAME     DS    CL8                                                 JOER
ATTR_1   DS    X                                                   JOER
ATTR_2   DS    X                                                   JOER
ATTR_3   DS    X                                                   JOER
X_ATTR   DS    X                                                   JOER
ATTRVAL# DS    F
P_DATA   DS    XL16                                                JOER
D_IAG    DS    F                                                   JOER
XTLST##  DS    CL136                                               JOER
D_SKEY   DS    CL8                                                 JOER
*                                                                  JOER
CSVQRET  DS    F                                                   JOER
SRBDLEN  EQU   *-SRBDSECT                                          JOER
FRRPARM  DSECT                                                     JOER
MODSTRT  DS    F                                                   JOER
MOD_END  DS    F                                                   JOER
WORKA    DS    XL2                                                 JOER
RETRY     DS  A                                                    JOER
MESSAREA  DS  A                                                    JOER
FRRLEN   EQU   *-FRRPARM                                           JOER
*----------------------------------------------------*             JOER
*  Routine INPUT  8 byte PSW                         *             JOER
*                                                    *             JOER
*       retrun maching RB                            *             JOER
*                    CDE IF ANY                      *             JOER
*                                                    *             JOER
*----------------------------------------------------*             JOER
*------------------------------------------------------------------JOER  579
*        MAP WORK AREA                                             JOER  580
*------------------------------------------------------------------JOER  581
         DBGRPY                                                    JOER
WGRECOV  DSECT                                                     JOER  582
         DS    18F                                                 JOER
FLAG     DS    XL3                                                 JOER
*                                                                  JOER
SAVECHAR DS    X                                                   JOER
STOKEN   DS    XL8                                                 JOER
SAVE_R14 DS    F
SDWAPARMS DS    18F
ALET     DS    F                                                   JOER
ALELST   ALESERV MF=L
SAVE14   DS    F                                                   JOER
DGDGPTR  DS    F
PARMR    DS    7F
PARMREG  DS    F                                                   JOER
ASID#    DS    XL2                                                 JOER
ABENDMOD EQU   X'80'                   Abend is in module          JOER
IS641    EQU   X'40'                   abend was amod64            JOER
EPA      EQU   X'20'                                               JOER
NAME#    EQU   X'10'                                               JOER
XMEM     EQU   X'08'                                               JOER
ISRBAD   EQU   X'04'                                               JOER
ISCDE    EQU   X'02'                                               JOER
IS642    EQU   X'01'                                               JOER
TOPOLST  EQU   X'80'                    Second byte of flag        JOER
NOSTR    EQU   X'40'                                               JOER
IBMSRV   EQU   X'20'                                               JOER
LS       EQU   X'10'                   SDWAEC2 regs on linkage     JOER
CSVINFO  EQU   X'08'                                               JOER
VALEC1   EQU   X'04'                    Second byte of flag        JOER
VALEC2   EQU   X'02'                    Second byte of flag        JOER
EC1R64   EQU   X'01'                                               JOER
EC2R64   EQU   X'80'                                               JOER
DOEC1    EQU   X'40'                                               JOER
DOEC2    EQU   X'20'                                               JOER
US       EQU   X'10'                                               JOER
ISSVRB   EQU   X'08'                                               JOER
ISSVC    EQU   X'04'                                               JOER
ISIRB    EQU   X'02'                                               JOER
ISSYNC   EQU   X'01'                                               JOER
*                                                                  JOER
ATTR1    DS    X                                                   JOER
ATTR2    DS    X                                                   JOER
ATTR3    DS    X                                                   JOER
XATTR    DS    XL8                                                 JOER
PDATA    DS    XL16                                                JOER
DIAG     DS    XL4                                                 JOER
XTLST#   DS    XL136                                               JOER
SIXFOUR  DS    XL128                       Area for 64 bit regs    JOER
TONEAB   DS    XL64                        31 BIT ABEND regs       JOER
MODABEND DS    CL8                         Module name abend       JOER
RBABEC1  DS    F                           ABENDDED RB FOR EC1     JOER
RBABEC2  DS    F                           ABENDDED RB FOR EC2     JOER
RBRGEC1  DS    F                           Register RB FOR EC1     JOER
RBRGEC2  DS    F                           Register RB FOR EC2     JOER
         ORG   RBRGEC2                     Either tb or linkage    JOER
STCKFRM  DS    F                           STACK FRAME ptr         JOER
CDEEC1   DS    F                           CDE for EC1             JOER
CDEEC2   DS    F                           CDE for EC2             JOER
RBABEND$ DS    F                           WORKRB                  JOER
RBREG    DS    F                           WORK REG RB             JOER
SVPRB    DS    F                           Prb releated to SVRB    JOER
CDE#     DS    F                           WORK CDE                JOER
EPABEND  DS    0D                          WORK ABEND              JOER
ENDABEND DS    D                                                   JOER
DSKEY    DS    CL8                                                 JOER
HOMENAME DS    CL8                         Home PGM                JOER
PRIMNAME DS    CL8                                                 JOER
MODPSTRT DS    0D                                                  JOER
MODP64   DS    F                                                   JOER
MODP31   DS    F                                                   JOER
SRBA     DS    CL80                                                JOER
         IEAMSCHD MF=(L,SRBLIST)                                   JOER
         CSVQUERY PLISTVER=MAX,MF=(L,CSVQLIST)                     JOER
$CSECT   DS    CL8                    Abending name of csect       JOER
MODNMECL DS    CL8                    Module name in Home          JOER
MODSTART DS    0D                      Module Starting PRIME       JOER
MODST64  DS    F                                                   JOER
MODST31  DS    F                                                   JOER
*                                                                  JOER
MODEND   DS    0D                     Mod ending PRIME             JOER
MODE64   DS    F                                                   JOER
MODE31   DS    F                                                   JOER
*                                                                  JOER
*                                                                  JOER
*                                                                  JOER
MODNAME  DS    CL8                    Module name in prim          JOER
MODSTHM  DS    0D                      Module Starting HOME        JOER
MODSH64  DS    F                                                   JOER
MODSH31  DS    F                                                   JOER
*                                                                  JOER
MODEHM   DS    0D                      MOD ENDING HOME             JOER
MODEND64 DS    F                                                   JOER
MODEN31  DS    F                                                   JOER
*                                                                  JOER
WORKNME  DS    CL8                                                 JOER
WORKENT  DS    0D                                                  JOER
WORKS64  DS    F                                                   JOER
WORKS31  DS    F                                                   JOER
*                                                                  JOER
WORKEND  DS    0D                                                  JOER
WORKE64  DS    F                                                   JOER
WORKE31  DS    F                                                   JOER
*                                                                  JOER
WNEXT    DS    D                       Work area                   JOER
ATTRVAL  DS    F                                                   JOER
SVC#     DS    X                                                   JOER
SVCD     DS    XL2                                                 JOER
DBLWRD   DS    D                                                   JOER
SVCOFF   DS    F                                                   JOER
ABENDRB  DS    F                        Abending RB                JOER
ABENDREG DS    XL60                                                JOER
OFFPRM   DS    CL2                     For IRB offset in sc when abJOER
*                                                                  JOER
WTOLINE  DS    CL80                    WTO MESSEGE IS MOVED HERE   JOER  583
DISPARM  DS    4F                      PARMLIST FOR WTORTN         JOER  584
WTOLIST  DS    0F,CL(LWTOLIST)         PARMLIST FOR WTO MACRO      JOER  585
FORMAT   DS    0F,CL272                WORK AREA                   JOER  586
DISPBUF  DS    CL272                   Out put buff for 64 bit gpr JOER
ASRBCOMPCODE DS A                                                  JOER
ASRBCODEADDR DS A                                                  JOER
ASRBRSNADDR  DS A                                                  JOER
SRBCOMPCODE  DS A                                                  JOER
SRBCODEADDR  DS A                                                  JOER
SRBRSNADDR   DS A                                                  JOER
SRBRETURN    DS F                                                  JOER
DSAWORKD     DS D                                                  JOER
WORKRB       DS F               IN/OUTPRARM FOR GETCBRB            JOER
WORKPSW      DS D               IN PARM GETCBRB RTN                JOER
SRBX    DS     XL(SRBDLEN)      SRB PArm for non xmem              JOER
DBGRP    DS    XL(DIE_LEN)                                         JOER
LGRECOV  EQU   *-WGRECOV                                           JOER  587
*------------------------------------------------------------------JOER  588
*        OTHER DSECTS                                              JOER  589
*------------------------------------------------------------------JOER  590
         IHAPSA                                                    JOER
         IHAXTL64                      64 bit extent poiner        JOER
         ESTPARM                       MAP USER PARMLIST           JOER  591
         IKJRB LIST=YES                                            JOER
         IHACDE                                                    JOER
         LSED                                                      JOER
         IHASTCB                                                   JOER
         IHACDX                                                    JOER
         IKJTCB DSECT=YES,LIST=YES                                 JOER
         IHAXTLST                                                  JOER
         IHAASCB                                                   JOER
         IHAASSB                                                   JOER
         IHAXSB                                                    JOER
         CVT LIST=YES,DSECT=YES                                    JOER
         END                                                             592
